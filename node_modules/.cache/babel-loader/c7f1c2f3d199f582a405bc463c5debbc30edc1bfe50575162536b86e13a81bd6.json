{"ast":null,"code":"import _defineProperty from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/GridDataInput.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport RenderTextField from './RenderTextField';\nimport DateSelection from './DateSelection';\nimport QueryExplain from './QueryExplain';\nimport { buildElement, buildImage, checkHasInterval, checkElemsError } from './builders.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GridDataInput = function GridDataInput(props) {\n  _s();\n  var _useState = useState({\n      loc: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      smry: '',\n      smry_only: '',\n      area_reduce: '',\n      prec: '',\n      units: '',\n      meta: '',\n      output: '',\n      image: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    datastate = _useState2[0],\n    setDatastate = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    notdly = _useState4[0],\n    setNotdly = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    hasInterval = _useState6[0],\n    setHasInterval = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hasElemsError = _useState8[0],\n    setHasElemsError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    mapcontrols = _useState10[0],\n    setMapcontrols = _useState10[1];\n  var datafields = ['loc', 'state', 'bbox', 'sdate', 'edate', 'date', 'grid', 'elems', 'meta', 'output', 'image'];\n  var imagefields = ['info_only', 'proj', 'overlays', 'interp', 'cmap', 'width', 'height', 'levels'];\n  var elementKeys = Object.keys(datastate).filter(function (item) {\n    return ![].concat(datafields, imagefields).includes(item);\n  });\n  var updateParam = function updateParam(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n    props.updateInputParams(update);\n  };\n  var updateElemBuild = function updateElemBuild(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n  };\n  var addElement = function addElement(event) {\n    var action = event.currentTarget.id; //\"add\" or \"replace\"\n    var newElems = JSON.stringify(buildElement(elementKeys, datastate, action));\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      elems: newElems\n    }));\n    props.updateInputParams({\n      elems: newElems\n    });\n    props.updateHelpFor(\"\");\n  };\n  var clearElements = function clearElements() {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      elems: ''\n    }));\n    props.updateInputParams({\n      elems: \"\"\n    });\n    props.updateHelpFor(\"\");\n    setHasInterval(false);\n    setHasElemsError(false);\n  };\n  var updateElems = function updateElems(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n    var elemsError = checkElemsError(update.elems);\n    setHasElemsError(elemsError);\n    if (!elemsError) {\n      props.updateInputParams(update);\n    }\n  };\n  var updateImage = function updateImage(update) {\n    var updatedstate = _objectSpread(_objectSpread({}, datastate), update);\n    setDatastate(updatedstate);\n    var image = buildImage(imagefields, updatedstate);\n    props.updateInputParams({\n      image: image\n    });\n  };\n  var updateOutput = function updateOutput(update) {\n    if (update.output === 'image') {\n      var image = buildImage(imagefields, datastate);\n      updateParam({\n        output: \"image\",\n        image: image\n      });\n      setMapcontrols(true);\n    } else {\n      updateParam(update);\n    }\n  };\n  var handleMapControlClick = function handleMapControlClick(event) {\n    if (datastate.output !== 'image' || event.target.checked) {\n      var image = event.target.checked ? buildImage(imagefields, datastate) : \"\";\n      updateParam({\n        image: image\n      });\n      setMapcontrols(event.target.checked);\n    }\n  };\n\n  // Update local variable storage whenever input_params updates\n  useEffect(function () {\n    var newstate = {};\n    datafields.forEach(function (key) {\n      if (props.input_params.hasOwnProperty(key)) {\n        if (key === 'elems' && typeof props.input_params.elems === 'object') {\n          var strelems = JSON.stringify(props.input_params.elems);\n          newstate = _objectSpread(_objectSpread({}, newstate), _defineProperty({}, key, strelems));\n          setHasInterval(checkHasInterval(_defineProperty({}, key, strelems)));\n          setHasElemsError(checkElemsError(strelems));\n        } else {\n          newstate = _objectSpread(_objectSpread({}, newstate), _defineProperty({}, key, props.input_params[key]));\n        }\n      } else {\n        newstate = _objectSpread(_objectSpread({}, newstate), _defineProperty({}, key, ''));\n      }\n    });\n    setDatastate(_objectSpread(_objectSpread({}, datastate), newstate));\n    // eslint-disable-next-line\n  }, [props.input_params]);\n\n  // Check for change to notdly whenever duration or interval changes\n  useEffect(function () {\n    if (datastate.duration) {\n      setNotdly(datastate.duration.length === 3 && datastate.duration !== 'dly' || datastate.duration.length > 0 && !isNaN(Number(datastate.duration)) && (datastate.duration !== \"1\" || datastate.interval !== 'dly' && !(datastate.interval.includes('[') && datastate.interval.length === 7)));\n    }\n  }, [datastate.duration, datastate.interval]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Required input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \"Enter information for one of the grid selection types:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, _this), datastate.state.length === 0 && datastate.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"loc\",\n          fieldlabel: \"Point location\",\n          value: datastate.loc,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, _this), datastate.loc.length === 0 && datastate.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"state\",\n          fieldlabel: \"State\",\n          value: datastate.state,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, _this), datastate.loc.length === 0 && datastate.state.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"bbox\",\n          fieldlabel: \"Bounding box\",\n          value: datastate.bbox,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(DateSelection, {\n          sdate: datastate.sdate,\n          edate: datastate.edate,\n          date: datastate.date,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"grid\",\n          fieldlabel: \"Grid id\",\n          value: datastate.grid,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"elems\",\n          fieldlabel: \"Elements\",\n          value: datastate.elems,\n          options: {\n            width: 0.9,\n            multiline: true,\n            placeholder: \"Enter directly or build using Element setup\",\n            error: hasElemsError,\n            helperText: hasElemsError ? \"Error in elements encoding\" : \"\"\n          },\n          updateHelpFor: function updateHelpFor() {\n            return props.updateHelpFor(\"grid_elems\");\n          },\n          updateParam: updateElems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, _this), datastate.elems.includes(\"{\") && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          onMouseDown: clearElements,\n          children: \"Clear elements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(QueryExplain, {\n          input_params: props.input_params,\n          wstype: \"GridData\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Optional elements builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"name\",\n          fieldlabel: \"Name\",\n          value: datastate.name,\n          updateHelpFor: function updateHelpFor() {\n            return props.updateHelpFor(\"grid_elems\");\n          },\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, _this), datastate.name.includes(\"dd\") && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"base\",\n          fieldlabel: \"Base\",\n          value: datastate.base,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"interval\",\n          fieldlabel: \"Interval\",\n          value: datastate.interval,\n          options: {\n            disabled: hasInterval\n          },\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"duration\",\n          fieldlabel: \"Duration\",\n          value: datastate.duration,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, _this), datastate.duration === 'std' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"season_start\",\n          fieldlabel: \"Season start\",\n          value: datastate.season_start,\n          options: {\n            required: true\n          },\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, _this), notdly && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"reduce\",\n          fieldlabel: \"Reduce\",\n          value: datastate.reduce,\n          options: {\n            required: true\n          },\n          updateHelpFor: function updateHelpFor() {\n            return props.updateHelpFor(\"grid_reduce\");\n          },\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, _this), notdly && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"maxmissing\",\n          fieldlabel: \"Max missing\",\n          value: datastate.maxmissing,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"smry\",\n          fieldlabel: \"Summary\",\n          value: datastate.smry,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, _this), datastate.smry.length > 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"smry_only\",\n          fieldlabel: \"Summary only\",\n          value: datastate.smry_only,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"units\",\n          fieldlabel: \"Units\",\n          value: datastate.units,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, _this), datastate.loc.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"area_reduce\",\n          fieldlabel: \"Area reduction\",\n          value: datastate.area_reduce,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, _this), datastate.name.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n          id: \"add\",\n          size: \"small\",\n          variant: \"outlined\",\n          onMouseDown: addElement,\n          children: \"Add element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, _this), datastate.name.length > 0 && datastate.elems.includes(\"{\") && /*#__PURE__*/_jsxDEV(Button, {\n          id: \"replace\",\n          size: \"small\",\n          variant: \"outlined\",\n          sx: {\n            ml: 1\n          },\n          onMouseDown: addElement,\n          children: \"Replace elements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Optional input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"meta\",\n          fieldlabel: \"Meta options\",\n          value: datastate.meta,\n          options: {\n            width: 0.95\n          },\n          updateHelpFor: function updateHelpFor() {\n            return props.updateHelpFor(\"grid_meta\");\n          },\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"output\",\n          fieldlabel: \"Output type\",\n          value: datastate.output,\n          options: {\n            disabled: datastate.meta.length && datastate.output === 'json' ? true : false\n          },\n          updateHelpFor: function updateHelpFor() {\n            return props.updateHelpFor(\"grid_output\");\n          },\n          updateParam: updateOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            value: mapcontrols,\n            onChange: handleMapControlClick,\n            checked: mapcontrols\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, _this),\n          label: \"Map settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, _this), mapcontrols && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pl: \"1em\"\n          },\n          children: [datastate.output !== 'image' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"info_only\",\n            fieldlabel: \"Info only\",\n            value: datastate.info_only,\n            updateHelpFor: props.updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"proj\",\n            fieldlabel: \"Proj\",\n            value: datastate.proj,\n            updateHelpFor: props.updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"overlays\",\n            fieldlabel: \"Overlays\",\n            value: datastate.overlays,\n            updateHelpFor: props.updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"interp\",\n            fieldlabel: \"Interp\",\n            value: datastate.interp,\n            updateHelpFor: props.updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"cmap\",\n            fieldlabel: \"Cmap\",\n            value: datastate.cmap,\n            updateHelpFor: props.updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, _this), datastate.height.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"width\",\n            fieldlabel: \"Width\",\n            value: datastate.width,\n            options: {\n              equired: mapcontrols\n            },\n            updateHelpFor: props.updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, _this), datastate.width.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"height\",\n            fieldlabel: \"Height\",\n            value: datastate.height,\n            options: {\n              required: mapcontrols\n            },\n            updateHelpFor: props.updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"levels\",\n            fieldlabel: \"Levels\",\n            value: datastate.levels,\n            updateHelpFor: props.updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, _this);\n};\n_s(GridDataInput, \"Y+wVyk20ZKdZmbbLyD/dkXh9b70=\");\n_c = GridDataInput;\nexport default GridDataInput;\nvar _c;\n$RefreshReg$(_c, \"GridDataInput\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","Box","Button","FormControlLabel","Switch","RenderTextField","DateSelection","QueryExplain","buildElement","buildImage","checkHasInterval","checkElemsError","GridDataInput","props","loc","state","bbox","sdate","edate","date","grid","elems","name","base","interval","duration","season_start","reduce","maxmissing","smry","smry_only","area_reduce","prec","units","meta","output","image","info_only","proj","overlays","interp","cmap","width","height","levels","datastate","setDatastate","notdly","setNotdly","hasInterval","setHasInterval","hasElemsError","setHasElemsError","mapcontrols","setMapcontrols","datafields","imagefields","elementKeys","Object","keys","filter","item","includes","updateParam","update","updateInputParams","updateElemBuild","addElement","event","action","currentTarget","id","newElems","JSON","stringify","updateHelpFor","clearElements","updateElems","elemsError","updateImage","updatedstate","updateOutput","handleMapControlClick","target","checked","newstate","forEach","key","input_params","hasOwnProperty","strelems","length","isNaN","Number","multiline","placeholder","error","helperText","disabled","required","ml","pl","equired"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/GridDataInput.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Typography from '@mui/material/Typography'\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport QueryExplain from './QueryExplain'\nimport { buildElement, buildImage, checkHasInterval, checkElemsError } from './builders.js'\n\nconst GridDataInput = (props) => { \n  const [ datastate, setDatastate] = useState({\n    loc: '',\n    state: '',\n    bbox: '',\n    sdate: '',\n    edate: '',\n    date: '',\n    grid: '',\n    elems: '',\n    name: '',\n    base: '',\n    interval: '',\n    duration: '',\n    season_start: '',\n    reduce: '',\n    maxmissing: '',\n    smry: '',\n    smry_only: '',\n    area_reduce: '',\n    prec: '',\n    units: '',\n    meta: '',\n    output: '',\n    image: '',\n    info_only: '',\n    proj: '',\n    overlays: '',\n    interp: '',\n    cmap: '',\n    width: '',\n    height: '',\n    levels: '',\n  })\n\n  const [ notdly, setNotdly ] = useState(false)\n  const [ hasInterval, setHasInterval ] = useState(false)\n  const [ hasElemsError, setHasElemsError ] = useState(false)\n  const [ mapcontrols, setMapcontrols ] = useState(false)\n  \n  const datafields = ['loc','state','bbox','sdate','edate','date','grid','elems','meta','output','image']\n  const imagefields = ['info_only','proj','overlays','interp','cmap','width','height','levels']\n  const elementKeys = Object.keys(datastate).filter(\n    item => (![...datafields, ...imagefields].includes(item)\n  ))\n\n  const updateParam = (update) => {\n    setDatastate({...datastate, ...update})\n    props.updateInputParams(update)\n  }\n\n  const updateElemBuild = (update) => {\n    setDatastate({...datastate, ...update})\n  }\n\n  const addElement = (event) => {\n    const action = event.currentTarget.id   //\"add\" or \"replace\"\n    const newElems = JSON.stringify(buildElement(elementKeys, datastate, action))\n    setDatastate({...datastate, ...{elems: newElems}})\n    props.updateInputParams({elems: newElems})\n    props.updateHelpFor(\"\")\n  }\n\n  const clearElements = () => {\n    setDatastate({...datastate, ...{elems: ''}})\n    props.updateInputParams({elems: \"\"})\n    props.updateHelpFor(\"\")\n    setHasInterval(false)\n    setHasElemsError(false)\n  }\n\n  const updateElems = (update) => {\n    setDatastate({...datastate, ...update})\n    const elemsError = checkElemsError(update.elems)\n    setHasElemsError(elemsError)\n    if (!elemsError) {\n      props.updateInputParams(update)\n    }\n  }\n\n  const updateImage = (update) => {\n    const updatedstate = {...datastate, ...update}\n    setDatastate(updatedstate)\n    const image = buildImage(imagefields, updatedstate)\n    props.updateInputParams({image: image})\n  }\n\n  const updateOutput = (update) => {\n    if (update.output === 'image') {\n      const image = buildImage(imagefields, datastate)\n      updateParam({output:\"image\", image:image})\n      setMapcontrols(true)\n    } else {\n      updateParam(update)\n    }\n  }\n  \n  const handleMapControlClick = event => {\n    if (datastate.output !== 'image' || event.target.checked) {\n      const image = event.target.checked ? buildImage(imagefields, datastate) : \"\"\n      updateParam({image: image})\n      setMapcontrols(event.target.checked)\n    }\n  }\n\n  // Update local variable storage whenever input_params updates\n  useEffect(() => {\n    let newstate= {}\n    datafields.forEach((key) => {\n      if (props.input_params.hasOwnProperty(key)) {\n        if (key === 'elems' && typeof props.input_params.elems === 'object') {\n          const strelems = JSON.stringify(props.input_params.elems)\n          newstate= ({...newstate, ...{[key]: strelems}})\n          setHasInterval(checkHasInterval({[key]: strelems}))\n          setHasElemsError(checkElemsError(strelems))\n        } else {\n          newstate= ({...newstate, ...{[key]: props.input_params[key]}})\n        }\n      } else {\n        newstate = ({...newstate, ...{[key]: ''}})\n      }\n    })\n    setDatastate({...datastate, ...newstate})\n    // eslint-disable-next-line\n  }, [props.input_params])\n\n  // Check for change to notdly whenever duration or interval changes\n  useEffect(() => {\n    if (datastate.duration) {\n      setNotdly((datastate.duration.length === 3 && datastate.duration !== 'dly') || \n        (datastate.duration.length > 0 && !isNaN(Number(datastate.duration)) && \n        (datastate.duration !== \"1\" || (datastate.interval !== 'dly' && !(datastate.interval.includes('[') && datastate.interval.length === 7)))))\n    }\n  }, [datastate.duration, datastate.interval])\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Required input\n          </Typography>\n          <Typography variant=\"caption\">\n            Enter information for one of the grid selection types:\n          </Typography>\n          {datastate.state.length === 0 && \n            datastate.bbox.length === 0 && \n            <RenderTextField\n              id=\"loc\"\n              fieldlabel=\"Point location\"\n              value={datastate.loc}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {datastate.loc.length === 0 && \n            datastate.bbox.length === 0 && \n            <RenderTextField\n              id=\"state\"\n              fieldlabel=\"State\"\n              value={datastate.state}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {datastate.loc.length === 0 && \n            datastate.state.length === 0 && \n            <RenderTextField\n              id=\"bbox\"\n              fieldlabel=\"Bounding box\"\n              value={datastate.bbox}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          <DateSelection\n            sdate={datastate.sdate}\n            edate={datastate.edate}\n            date={datastate.date}\n            updateHelpFor={props.updateHelpFor}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"grid\"\n            fieldlabel=\"Grid id\"\n            value={datastate.grid}\n            updateHelpFor={props.updateHelpFor}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"elems\"\n            fieldlabel=\"Elements\"\n            value={datastate.elems}\n            options={{\n              width:0.9,\n              multiline: true, \n              placeholder: \"Enter directly or build using Element setup\",\n              error: hasElemsError,\n              helperText: hasElemsError ? \"Error in elements encoding\" : \"\",\n            }}\n            updateHelpFor={() => props.updateHelpFor(\"grid_elems\")}\n            updateParam={updateElems}\n          />\n          {datastate.elems.includes(\"{\") &&\n            <Button \n              size=\"small\"\n              variant=\"outlined\"\n              onMouseDown={clearElements}\n            >\n              Clear elements\n            </Button>\n          }\n          <QueryExplain\n            input_params={props.input_params}\n            wstype=\"GridData\"\n          />\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional elements builder\n          </Typography>\n          <RenderTextField\n            id=\"name\"\n            fieldlabel=\"Name\"\n            value={datastate.name}\n            updateHelpFor={() => props.updateHelpFor(\"grid_elems\")}\n            updateParam={updateElemBuild}\n          />\n          {datastate.name.includes(\"dd\") &&\n            <RenderTextField\n              id=\"base\"\n              fieldlabel=\"Base\"\n              value={datastate.base}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"interval\"\n            fieldlabel=\"Interval\"\n            value={datastate.interval}\n            options={{disabled:hasInterval}}\n            updateHelpFor={props.updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          <RenderTextField\n            id=\"duration\"\n            fieldlabel=\"Duration\"\n            value={datastate.duration}\n            updateHelpFor={props.updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {datastate.duration === 'std' &&\n            <RenderTextField\n              id=\"season_start\"\n              fieldlabel=\"Season start\"\n              value={datastate.season_start}\n              options={{required:true}}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          {notdly &&\n            <RenderTextField\n              id=\"reduce\"\n              fieldlabel=\"Reduce\"\n              value={datastate.reduce}\n              options={{required:true}}\n              updateHelpFor={() => props.updateHelpFor(\"grid_reduce\")}\n              updateParam={updateElemBuild}\n            />\n          }\n          {notdly &&\n            <RenderTextField\n              id=\"maxmissing\"\n              fieldlabel=\"Max missing\"\n              value={datastate.maxmissing}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"smry\"\n            fieldlabel=\"Summary\"\n            value={datastate.smry}\n            updateHelpFor={props.updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {datastate.smry.length > 0 &&\n            <RenderTextField\n              id=\"smry_only\"\n              fieldlabel=\"Summary only\"\n              value={datastate.smry_only}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"units\"\n            fieldlabel=\"Units\"\n            value={datastate.units}\n            updateHelpFor={props.updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {datastate.loc.length === 0 &&  \n            <RenderTextField\n              id=\"area_reduce\"\n              fieldlabel=\"Area reduction\"\n              value={datastate.area_reduce}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n\n          {datastate.name.length > 0 &&\n            <Button \n              id=\"add\"\n              size=\"small\"\n              variant=\"outlined\"\n              onMouseDown={addElement}\n            >\n              Add element\n            </Button>\n          }\n          {datastate.name.length > 0 && datastate.elems.includes(\"{\") &&\n            <Button \n              id=\"replace\"\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{ml:1}}\n              onMouseDown={addElement}\n            >\n              Replace elements\n            </Button>\n          }\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional input\n          </Typography>\n          <RenderTextField\n            id=\"meta\"\n            fieldlabel=\"Meta options\"\n            value={datastate.meta}\n            options={{width:0.95}}\n            updateHelpFor={() => props.updateHelpFor(\"grid_meta\")}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"output\"\n            fieldlabel=\"Output type\"\n            value={datastate.output}\n            options={{disabled: datastate.meta.length && datastate.output === 'json' ? true : false}}\n            updateHelpFor={() => props.updateHelpFor(\"grid_output\")}\n            updateParam={updateOutput}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                value={mapcontrols}\n                onChange={handleMapControlClick}\n                checked={mapcontrols}\n              />\n            }\n            label=\"Map settings\"\n          />\n          {mapcontrols &&\n            <Box sx={{pl:\"1em\"}}>\n              {datastate.output !== 'image' &&\n                <RenderTextField\n                  id=\"info_only\"\n                  fieldlabel=\"Info only\"\n                  value={datastate.info_only}\n                  updateHelpFor={props.updateHelpFor}\n                  updateParam={updateImage}\n                />\n              }\n              <RenderTextField\n                id=\"proj\"\n                fieldlabel=\"Proj\"\n                value={datastate.proj}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateImage}\n              />\n              <RenderTextField\n                id=\"overlays\"\n                fieldlabel=\"Overlays\"\n                value={datastate.overlays}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateImage}\n              />\n              <RenderTextField\n                id=\"interp\"\n                fieldlabel=\"Interp\"\n                value={datastate.interp}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateImage}\n              />\n              <RenderTextField\n                id=\"cmap\"\n                fieldlabel=\"Cmap\"\n                value={datastate.cmap}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateImage}\n              />\n              {datastate.height.length === 0 &&\n                <RenderTextField\n                  id=\"width\"\n                  fieldlabel=\"Width\"\n                  value={datastate.width}\n                  options={{equired: mapcontrols}}\n                  updateHelpFor={props.updateHelpFor}\n                  updateParam={updateImage}\n                />\n              }\n              {datastate.width.length === 0 &&\n                <RenderTextField\n                  id=\"height\"\n                  fieldlabel=\"Height\"\n                  value={datastate.height}\n                  options={{required: mapcontrols}}\n                  updateHelpFor={props.updateHelpFor}\n                  updateParam={updateImage}\n                />\n              }\n              <RenderTextField\n                id=\"levels\"\n                fieldlabel=\"Levels\"\n                value={datastate.levels}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateImage}\n              />\n            </Box>\n          }\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default GridDataInput"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}