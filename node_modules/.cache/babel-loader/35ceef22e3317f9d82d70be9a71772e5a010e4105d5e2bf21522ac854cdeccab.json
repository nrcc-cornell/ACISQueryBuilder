{"ast":null,"code":"import _slicedToArray from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/QuerySelector.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    // classes for ToggleButton\n    root: {\n      background: \"white\",\n      color: \"darkblue\",\n      textTransform: \"none\",\n      borderRight: \"1pt solid lightgray\",\n      '& .selected': {\n        backgroundColor: 'primary.main',\n        color: 'text.white'\n      }\n    },\n    // class for selected query type\n    selected: {\n      background: \"blue !important\",\n      color: \"white !important\"\n    },\n    // class for Paper\n    paperRoot: {\n      margin: \"0 0 2em\"\n    },\n    // class for page title typography\n    titleRoot: {\n      color: \"darkblue\"\n    }\n  };\n});\nvar QuerySelector = function QuerySelector(props) {\n  _s();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    wstype = _useState2[0],\n    setWstype = _useState2[1];\n  useEffect(function () {\n    setWstype(props.wstype);\n    // eslint-disable-next-line\n  }, []);\n  var handleChange = function handleChange(event, value) {\n    if (value) {\n      setWstype(value);\n      props.handleChange(value);\n    }\n  };\n  var classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 0,\n    className: classes.paperRoot,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          className: classes.titleRoot,\n          children: \"ACIS Query Builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: wstype,\n          exclusive: true,\n          onChange: handleChange,\n          children: props.query_types.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: item,\n              className: classes.root,\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this);\n};\n_s(QuerySelector, \"W4ACjfv3nxFzyWhkHJsNE2PcJxs=\", false, function () {\n  return [useStyles];\n});\n_c = QuerySelector;\nexport default QuerySelector;\nvar _c;\n$RefreshReg$(_c, \"QuerySelector\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Grid","Typography","ToggleButton","ToggleButtonGroup","makeStyles","useStyles","theme","root","background","color","textTransform","borderRight","backgroundColor","selected","paperRoot","margin","titleRoot","QuerySelector","props","wstype","setWstype","handleChange","event","value","classes","query_types","map","item"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/QuerySelector.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Paper from '@mui/material/Paper'\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport { makeStyles } from '@mui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  // classes for ToggleButton\n  root: {\n    background:\"white\",\n    color:\"darkblue\",\n    textTransform:\"none\",\n    borderRight:\"1pt solid lightgray\",\n    '& .selected': {\n      backgroundColor: 'primary.main',\n      color: 'text.white'\n  }\n  },\n  // class for selected query type\n  selected: {\n    background: \"blue !important\",\n    color:\"white !important\"\n  },\n  // class for Paper\n  paperRoot: {\n    margin: \"0 0 2em\"\n  },\n  // class for page title typography\n  titleRoot: {\n    color: \"darkblue\"\n  },\n}))\n\nconst QuerySelector = (props) => {\n  const [wstype, setWstype] = useState('')\n\n  useEffect(() => {\n    setWstype(props.wstype)\n    // eslint-disable-next-line\n  }, [])\n\n  const handleChange = (event, value) => {\n    if (value) {\n      setWstype(value)\n      props.handleChange(value)\n    }\n  }\n\n  const classes = useStyles()\n  return (\n    <Paper elevation={0} className={classes.paperRoot}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={4}>\n          <Typography variant=\"h5\" className={classes.titleRoot}>\n            ACIS Query Builder\n          </Typography>\n        </Grid>\n        <Grid item>\n          <ToggleButtonGroup value={wstype} exclusive onChange={handleChange}>\n            {props.query_types.map((item) => (\n              <ToggleButton \n                key={item} \n                value={item}\n                className={classes.root}\n              >\n                {item}\n              </ToggleButton>                  \n            ))}\n          </ToggleButtonGroup>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default QuerySelector"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,SAASC,UAAU,QAAQ,aAAa;AAAA;AAExC,IAAMC,SAAS,GAAGD,UAAU,CAAC,UAACE,KAAK;EAAA,OAAM;IACvC;IACAC,IAAI,EAAE;MACJC,UAAU,EAAC,OAAO;MAClBC,KAAK,EAAC,UAAU;MAChBC,aAAa,EAAC,MAAM;MACpBC,WAAW,EAAC,qBAAqB;MACjC,aAAa,EAAE;QACbC,eAAe,EAAE,cAAc;QAC/BH,KAAK,EAAE;MACX;IACA,CAAC;IACD;IACAI,QAAQ,EAAE;MACRL,UAAU,EAAE,iBAAiB;MAC7BC,KAAK,EAAC;IACR,CAAC;IACD;IACAK,SAAS,EAAE;MACTC,MAAM,EAAE;IACV,CAAC;IACD;IACAC,SAAS,EAAE;MACTP,KAAK,EAAE;IACT;EACF,CAAC;AAAA,CAAC,CAAC;AAEH,IAAMQ,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAK,EAAK;EAAA;EAC/B,gBAA4BrB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjCsB,MAAM;IAAEC,SAAS;EAExBtB,SAAS,CAAC,YAAM;IACdsB,SAAS,CAACF,KAAK,CAACC,MAAM,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAME,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAEC,KAAK,EAAK;IACrC,IAAIA,KAAK,EAAE;MACTH,SAAS,CAACG,KAAK,CAAC;MAChBL,KAAK,CAACG,YAAY,CAACE,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,IAAMC,OAAO,GAAGnB,SAAS,EAAE;EAC3B,oBACE,QAAC,KAAK;IAAC,SAAS,EAAE,CAAE;IAAC,SAAS,EAAEmB,OAAO,CAACV,SAAU;IAAA,uBAChD,QAAC,IAAI;MAAC,SAAS;MAAC,OAAO,EAAE,CAAE;MAAA,wBACzB,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAA,uBACvB,QAAC,UAAU;UAAC,OAAO,EAAC,IAAI;UAAC,SAAS,EAAEU,OAAO,CAACR,SAAU;UAAA,UAAC;QAEvD;UAAA;UAAA;UAAA;QAAA;MAAa;QAAA;QAAA;QAAA;MAAA,SACR,eACP,QAAC,IAAI;QAAC,IAAI;QAAA,uBACR,QAAC,iBAAiB;UAAC,KAAK,EAAEG,MAAO;UAAC,SAAS;UAAC,QAAQ,EAAEE,YAAa;UAAA,UAChEH,KAAK,CAACO,WAAW,CAACC,GAAG,CAAC,UAACC,IAAI;YAAA,oBAC1B,QAAC,YAAY;cAEX,KAAK,EAAEA,IAAK;cACZ,SAAS,EAAEH,OAAO,CAACjB,IAAK;cAAA,UAEvBoB;YAAI,GAJAA,IAAI;cAAA;cAAA;cAAA;YAAA,SAKI;UAAA,CAChB;QAAC;UAAA;UAAA;UAAA;QAAA;MACgB;QAAA;QAAA;QAAA;MAAA,SACf;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,SACD;AAEZ,CAAC;AAAA,GAxCKV,aAAa;EAAA,QAeDZ,SAAS;AAAA;AAAA,KAfrBY,aAAa;AA0CnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}