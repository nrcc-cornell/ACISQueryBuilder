{"ast":null,"code":"import _classCallCheck from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder2/src/HelpTable.jsx\";\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nvar tabledata = {\n  nohelp: {\n    heads: [],\n    contents: [[]],\n    foots: \"No help available for this item\"\n  },\n  sids: {\n    heads: [\"Type\", \"Code \", \"Description\", \"Example\"],\n    contents: [[\"WBAN\", \"1\", \"5-digit WBAN id\", \"14742\"], [\"COOP\", \"2\", \"6-digit COOP id\", \"304174\"], [\"FAA\", \"3\", \"3-character FAA id\", \"LAX\"], [\"WMO\", \"4\", \"5-digit WMO id\", \"72223\"], [\"ICAO\", \"5\", \"4-character ICAO id\", \"KGRR\"], [\"GHCN\", \"6\", \"11-character GHCN id\", \"USW00003927\"], [\"NWSLI\", \"7\", \"5-character NWSLI\", \"AURN6\"], [\"THRDX\", \"9\", \"6-character ThreadEx id\", \"HSVthr\"], [\"COCORAHS\", \"10\", \"8-character CoCoRaHS id\", \"NYTM0004\"], [\"SCAN\", \"17\", \"SCAN\", \"15\"], [\"TSCAN\", \"19\", \"TSCAN\", \"3001\"]],\n    foots: \"To avoid ambiguity, station id should be specified by station id and id code (or type) separated by a space (e.g. 'KGRR 5')\"\n  },\n  hrly_sid: {\n    heads: [\"Type\", \"Code \", \"Description\", \"Example\"],\n    contents: [[\"WBAN\", \"1\", \"5-digit WBAN id\", \"14742\"], [\"COOP\", \"2\", \"6-digit COOP id\", \"304174\"], [\"FAA\", \"3\", \"3-character FAA id\", \"LAX\"], [\"WMO\", \"4\", \"5-digit WMO id\", \"72223\"], [\"ICAO\", \"5\", \"4-character ICAO id\", \"KGRR\"], [\"GHCN\", \"6\", \"11-character GHCN id\", \"USW00003927\"], [\"NWSLI\", \"7\", \"5-character NWSLI\", \"AURN6\"], [\"DEOS\", \"11\", \"Delaware DEOS id\", \"DAGF\"], [\"MIWX\", \"13\", \"Michigan Enviroweather\", \"KZO\"], [\"SCAN\", \"17\", \"SCAN\", \"2011\"], [\"TSCAN\", \"19\", \"TSCAN\", \"3052\"], [\"OARDC\", \"22\", \"Ohio OARDC id\", \"ASHT\"], [\"NEWA\", \"26\", \"NEWA id\", \"GEN\"], [\"CU_LOG\", \"27\", \"Cornell WxNet id\", \"CU_GFR\"], [\"NJWX\", \"28\", \"NJ WxNet id\", \"1101\"]],\n    foots: \"To avoid ambiguity, station id should be specified by station id and id type (or code) separated by a space (e.g. 'KGRR icao')\"\n  },\n  county: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"One or more county FIPS codes \", \"09001\"]]\n  },\n  climdiv: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"One or more climate division (2-digits or combined with state) \", \"10 or NY10\"]]\n  },\n  cwa: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"One or more NWS County Warning Areas\", \"BOI\"]]\n  },\n  basin: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"One or more drainage basins (8-digit HUC) \", \"01080205\"]]\n  },\n  state: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"One or more 2-letter state postal abbreviations\", \"AK\"]]\n  },\n  bbox: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"Bounding box in decimal degrees (W,S,E,N) \", \"-90, 40, -88, 41\"]]\n  },\n  grid2_bbox: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"Bounding box in decimal degrees (W,S,E,N) \", \"-90, 40, -88, 41\"]],\n    foots: \"An empty bounding box, [], will return the entire grid array\"\n  },\n  meta: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"name\", \"Station name *\"], [\"state\", \"2-letter state abbrev *\"], [\"sids\", \"Array of station ids/types *\"], [\"sid_dates\", \"Date range for each sid\"], [\"ll\", \"Longitude and latitude *\"], [\"elev\", \"Elevation *\"], [\"uid\", \"ACIS id *\"], [\"county\", \"5-digit FIPS id\"], [\"climdiv\", \"4-character climate division id\"], [\"valid_daterange\", \"Valid date range (by element) - must specify Elements\"], [\"tzo\", \"Time zone offset from GMT\"], [\"network\", \"Station networks\"]],\n    foots: \"Values with an asterisk (*) indicate defaults used if 'meta' is not explicityly specified.\"\n  },\n  elems: {\n    heads: [\"Abbreviation\", \"Var Major\", \"Description\"],\n    contents: [[\"maxt\", \"1\", \"Maximum temperature (&deg;F)\"], [\"mint\", \"2\", \"Minimum temperature (&deg;F)\"], [\"avgt\", \"43\", \"Average temperature (&deg;F)\"], [\"obst\", \"3\", \"Obs time temperature (&deg;F)\"], [\"pcpn\", \"4\", \"Precipitation (inches)\"], [\"snow\", \"10\", \"Snowfall (inches)\"], [\"snwd\", \"11\", \"Snow Depth (inches)\"], [\"(not available)\", \"7\", \"Pan evaporation (inches)\"], [\"cdd\", \"\", \"Cooling degree days (default base 65)\"], [\"hdd\", \"45\", \"Degree days below base (default base 65)\"], [\"gdd\", \"44\", \"Degree days above base (default base 50)\"]]\n  },\n  vX: {\n    heads: [\"Variable\", \"vX\", \"Networks found\"],\n    contents: [[\"Precipitation\", \"5\", \"newa, icao, cu_log, njwx, miwx, oardc, scan, tscan\"], [\"Temperature\", \"23\", \"newa, icao, njwx, oardc, deos, scan, tscan\"], [\"Average temperature\", \"126\", \"newa, cu_log, njwx, miwx\"], [\"Max temperature\", \"124\", \"newa, cu_log, njwx, scan, tscan\"], [\"Min temperature\", \"125\", \"newa, cu_log, njwx, scan, tscan\"], [\"Relative humidity\", \"24\", \"newa, icao, njwx, oardc, cu_log, deos, scan, tscan\"], [\"Average relative humidity\", \"143\", \"newa, njwx, miwx\"], [\"Max relative humidity\", \"141\", \"newa, njwx\"], [\"Min relative humidity\", \"143\", \"newa, njwx\"], [\"Dewpoint temperature\", \"22\", \"icao, newa, deos\"], [\"Average dewpoint temperature\", \"140\", \"njwx\"], [\"Max dewpoint temperature\", \"138\", \"njwx\"], [\"Min dewpoint temperature\", \"139\", \"njwx\"], [\"Wet-bulb temperature\", \"25\", \"icao\"], [\"Wind speed\", \"28\", \"icao, njwx, oardc, deos\"], [\"Average wind speed\", \"128\", \"newa, njwx, cu_log, scan, tscan\"], [\"Resultant wind speed\", \"129\", \"cu_log\"], [\"Max wind speed\", \"42\", \"icao, cu_log, njwx, scan, tscan\"], [\"Wind gust\", \"85\", \"icao\"], [\"Wind direction\", \"27\", \"icao, njwx, oardc, deos\"], [\"Average wind direction\", \"130\", \"newa, cu_log, scan, tscan\"], [\"Peak wind direction\", \"41\", \"njwx, icao\"], [\"Total sky cover\", \"33\", \"icao\"], [\"Solar radiation total\", \"132\", \"newa, cu_log, miwx, oardc, deos\"], [\"Solar radiation rate\", \"119\", \"njwx\"], [\"Average solar radiation rate\", \"149\", \"njwx, scan, tscan\"], [\"Max solar radiation rate\", \"147\", \"njwx\"], [\"Min solar radiation rate\", \"148\", \"njwx\"], [\"Leaf wetness\", \"118\", \"newa, cu_log, njwx, miwx, oardc, deos\"], [\"Soil temperature\", \"120\", \"newa, oardc, deos, scan, tscan\"], [\"Average soil temperature\", \"123\", \"cu_log\"], [\"Max soil temperature\", \"121\", \"newa, deos, oardc, cu_log\"], [\"Min soil temperature\", \"122\", \"newa, deos, oardc, cu_log\"], [\"Soil moisture\", \"104\", \"deos, scan, tscan\"], [\"Soil tension\", \"65\", \"newa\"], [\"Station pressure\", \"18\", \"icao, newa, njwx, deos\"], [\"Average station pressure\", \"146\", \"newa, njwx\"], [\"Max station pressure\", \"144\", \"newa, njwx\"], [\"Min station pressure\", \"145\", \"newa, njwx\"], [\"Sea level pressure\", \"19\", \"icao\"], [\"Altimeter setting\", \"17\", \"icao\"], [\"Visibility\", \"26\", \"icao\"], [\"Ceiling height\", \"35\", \"icao\"], [\"3-hour precipitation\", \"36\", \"icao\"], [\"6-hour precipitation\", \"37\", \"icao\"], [\"6-hour max temperature\", \"39\", \"icao\"], [\"6-hour min temperature\", \"40\", \"icao\"]]\n  },\n  vN: {\n    contents: [[\"Some elements require a var minor (vN). A list of vN can be found at https://github.com/rcc-acis/metadata/blob/master/data/global_variable_maj_min.load.\"]]\n  },\n  hrly_elems: {\n    contents: [[\"Elements are specified by var major (vX) with an optional var minor (vN).\"]]\n  },\n  base: {\n    heads: [],\n    contents: [[\"Degree day base temperature in degrees F.\"]]\n  },\n  output: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"json\", \"JavaScript Object Notation (default)\"], [\"csv\", \"Comma-Separated Values (unavailable for some requests, such as those including 'add', 'smry' or 'meta' and MultiStnData requests for a day range\"]]\n  },\n  grid_output: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"json\", \"JavaScript Object Notation (default)\"], [\"image\", \"png image only\"]]\n  },\n  grid2_output: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"json\", \"JavaScript Object Notation (default)\"], [\"png\", \"png image (display not implemented in this tool)\"], [\"geotiff\", \"geotiff output (display not implemented in this tool)\"]]\n  },\n  date: {\n    heads: [\"Options\", \"Example\"],\n    contents: [[\"yyyy-mm-dd\", \"2010-01-31\"], [\"yyyymmdd\", \"20100131\"], [\"por (period of record)\", \"por\"]],\n    foots: \"Can also use only yyyy or yyyymm when appropriate.\"\n  },\n  reduce_add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"mcnt\", \"Count of missing values in the reduction period\"], [\"date\", \"Date of occurrence (for max, min, run)\"], [\"value\", \"Value on date of occurrence (for first and last)\"], [\"rmcnt\", \"Count of missing values in the run period (for run only)\"]]\n  },\n  smry_add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"mcnt\", \"Count of missing values in the reduction period\"], [\"date\", \"Date of occurrence (for max, min, run)\"], [\"value\", \"Value on date of occurrence (for first and last)\"], [\"rmcnt\", \"Count of missing values in the run period (for run only)\"]]\n  },\n  smry_only: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"1\", \"Return only the summary value (no intermediate results). If used, must be specified for each element.\"]]\n  },\n  reduce_n: {\n    heads: [\"Value\", \"Description\"],\n    contents: [[\"integer\", \"Used with run reduction to specify max number of results returned per interval.\"]]\n  },\n  smry_n: {\n    heads: [\"Value\", \"Description\"],\n    contents: [[\"integer\", \"Count of number of values to be returned. Maximum value is 100. Can only be used with smry reduce of 'max', 'min' or 'run'.\"]]\n  },\n  reduce_run_maxmissing: {\n    heads: [\"Value\", \"Description\"],\n    contents: [[\"integer\", \"Used with run reduction to specify max number of missing days to allow before terminating run.\"]]\n  },\n  smry_run_maxmissing: {\n    heads: [\"Value\", \"Description\"],\n    contents: [[\"integer\", \"Used with run reduction to specify max number of missing days to allow before terminating run.\"]]\n  },\n  add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"f\", \"Flags\"], [\"t\", \"Time of observation\"], [\"i\", \"Station ID associated with data\"], [\"v\", \"Var minor associated with data\"], [\"n\", \"Network associated with data\"], [\"s\", \"Source flag (for GHCN-Daily data)\"]],\n    foots: \"Enter one or more codes separated by commas.\"\n  },\n  normal: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"1\", \"Return default normals (1991-2020)\"], [\"departure\", \"Return default departure from normal (1991-2020)\"], [\"91\", \"Return 1991-2020 normals\"], [\"departure91\", \"Return departure from 1991-2020 normal\"], [\"81\", \"Return 1981-2010 normals\"], [\"departure81\", \"Return departure from 1981-2010 normal\"]],\n    foots: \"1991-2020 added as default effective 2021-05-04.\"\n  },\n  interval: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"dly\", \"results consist of a daily value for each day; shortcut for [0,0,1].\"], [\"mly\", \"results consist of a monthly value for each calendar month; shortcut for [0,1]\"], [\"yly\", \"results consist of an annual value for each calendar year; shortcut for [1]\"], [\"array\", \"An array containing a single positive integer and zeros. The \" + \"array can have a length of either 1, 2 or 3, with the length indicating the temporal \" + \"precision of the returned values. A length of 1 indicates annual precision, 2 monthly \" + \"precision and 3 daily precision. The position of non-zero integers within the array signifies \" + \"the frequency of the values returned. The strings dly, mly and yly are just shortcuts \" + \"for commonly used intervals. \" + \"Using an array facilitates a number of more complex requests. The \" + \"following examples demonstrate some of these capabilities:\"], [\"subhead:Example\", \"subhead:Explanation\"], [\"[1,0,0]\", \"Return a daily value once per year. For instance, daily rainfall for June 20  in each of a series of years.\"], [\"[0,1,0]\", \"Return a daily value once per month. For instance, max temperature on the 15th of each month for a series of years.\"], [\"[0,0,7]\", \"Return a daily value every seven days.\"], [\"[0,3,0]\", \"Return a daily value every third month.\"], [\"[0,3]\", \"Return a monthly value every third month.\"], [\"[30]\", \"Return an annual value every thirty years.\"]],\n    foots: \"Note: 'interval' must be the same for all objects in an 'elems' array.\"\n  },\n  duration: {\n    heads: [\"Code\", \"Description\", \"Valid with intervals or list representations\"],\n    contents: [[\"integer\", \"Length of period to be analyzed in units specified by length of 'interval'\", \"dly, mly, yly, [x,x,x], [x,x], [x]\"], [\"mtd\", \"Month-to-date; must specify 'reduce'\", \"dly, [x,x,x]\"], [\"ytd\", \"Year-to-date; must specify 'reduce'\", \"dly, mly, [x,x,x], [x,x]\"], [\"std\", \"Season-to-date; must specify 'reduce' and 'season_start'\", \"dly, mly, [x,x,x], [x,x]\"], [\"dly\", \"Daily (NOT RECOMMENDED, use 1 instead)\", \"dly\"], [\"mly\", \"Monthly (NOT RECOMMENDED, use 1 instead)); must specify 'reduce'\", \"mly\"], [\"yly\", \"Yearly (NOT RECOMMENDED, use 1 instead); must specify 'reduce'\", \"yly\"]]\n  },\n  reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"max\", \"Maximum value for the period\"], [\"min\", \"Minimum value for the period\"], [\"sum\", \"Sum of the values for the period\"], [\"mean\", \"Average of the values for the period\"], [\"list\", \"Array of daily values for the period\"], [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"], [\"pct_xx_yyy\", \"Percent (integer) of daily values passing threshold\"], [\"fct_xx_yyy\", \"Fraction (float) of daily values passing threshold\"], [\"first_xx_yyy\", \"First occurrence of daily value passing threshold\"], [\"last_xx_yyy\", \"Last occurrence of daily value passing threshold\"], [\"run_xx_yyy\", \"Consecutive daily values passing threshold\"], [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"]]\n  },\n  grid_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"max\", \"Maximum value for the period\"], [\"min\", \"Minimum value for the period\"], [\"sum\", \"Sum of the values for the period\"], [\"mean\", \"Average of the values for the period\"], [\"stddev\", \"Standard deviation of the values\"], [\"list\", \"Array of daily values for the period\"], [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"], [\"pct_xx_yyy\", \"Percent (integer) of daily values passing threshold\"], [\"fct_xx_yyy\", \"Fraction (float) of daily values passing threshold\"], [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"]]\n  },\n  grid2_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"max\", \"Maximum value for the period\"], [\"min\", \"Minimum value for the period\"], [\"sum\", \"Sum of the values for the period\"], [\"mean\", \"Average of the values for the period\"], [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"], [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"]],\n    foots: \"Only certain cnt thresholds are available for LOCA pre-computed models (i.e. allmax, allmin, allmedian, wmean\"\n  },\n  smry: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"max\", \"Maximum value for the column\"], [\"min\", \"Minimum value for the column\"], [\"sum\", \"Sum of values in the column\"], [\"mean\", \"Average of values in the column\"], [\"cnt_xx_yyy\", \"Count of number of values in column passing threshold\"], [\"pct_xx_yyy\", \"Percent (integer) of values in column passing threshold\"], [\"fct_xx_yyy\", \"Fraction (float) of values in columnn passing threshold\"], [\"run_xx_yyy\", \"Consecutive column values passing threshold\"], [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, run_le_32\"]],\n    foots: \"More than one smry code can be specified by an array of strings or an array of objects.\"\n  },\n  season_start: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"For interval of dly or [x,x,x] - month and day\", \"[12,21] or 06-20\"], [\"For interval of mly or [x,x] - just month\", \"3\"]]\n  },\n  maxmissing: {\n    heads: [\"Description \"],\n    contents: [[\"Integer value indicating the number missing daily values to allow before a reduction is reported as missing.\"]]\n  },\n  prec: {\n    heads: [\"Description \"],\n    contents: [[\"Integer value indicating the number of decimal places of precision displayed in the results for this element. Not available for some elements.\"]]\n  },\n  groupby: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"year\", \"Results will be returned with all data for a year in a list.\"], [\"year, mm-dd, mm-dd\", \"Results will be returned with all daily data between specified start date and end date in a list identified by ending year.\"], [\"year, mm, mm\", \"Monthly summarized data will be returned for all months between specified start month and end month in a list identified by ending year.\"]]\n  },\n  loc: {\n    heads: [\"Description\", \"Example\"],\n    contents: [[\"Point location defined in decimal degrees (longitude, latitude); negative values for South latitude and West longitude\", \"-77.7, 41.8\"]]\n  },\n  grid: {\n    heads: [\"ID\", \"Description\", \"Area\", \"Period\"],\n    contents: [[\" 1\", \"NRCC Interpolated\", \"Continental US\", \"1950-present\"], [\" 2\", \"Multi-Sensor Precipitation Estimates\", \"Continental US\", \"2006-present\"], [\" 3\", \"NRCC Hi-Res\", \"East of Rockies\", \"Temp: 1998-present; Pcpn: 2002-present\"], [\" 21\", \"PRISM (http://www.prism.oregonstate.edu)\", \"Continental US\", \"Daily: 1981-present; Monthly/Yearly: 1895-present\"], [\" 4-16\", \"NARCCAP (to be deprecated) *\", \"Continental US\", \"1970-2000, 2040-2070\"], [\"4\", \"CRCM + NCEP (historical only)\"], [\"5\", \"CRCM + CCSM\"], [\"6\", \"CRCM + CGCM3\"], [\"9\", \"MM5I + NCEP (historical only)\"], [\"10\", \"MM5I + CCSM\"], [\"11\", \"RCM3 + NCEP (historical only)\"], [\"12\", \"RCM3 + CGCM3\"], [\"13\", \"RCM3 + GFDL\"], [\"14\", \"WRFG + NCEP (historical only)\"], [\"15\", \"WRFG + CCSM\"], [\"16\", \"WRFG + CGCM3\"]],\n    foots: \"* Be aware of idiosyncrasies before using NARCCAP grid sets.\"\n  },\n  grid2: {\n    heads: [\"Name\", \"Description\", \"Area\", \"Period\"],\n    contents: [[\"nrcc-nn\", \"NRCC Interpolated\", \"Continental US\", \"1950-present\"], [\"nrcc-model\", \"NRCC Hi-Res\", \"East of Rockies\", \"Temp: 1998-present; Pcpn: 2002-present\"], [\"ncei-norm:91-20\", \"NCEI Gridded Monthly 1991-2020 Normals\", \"Continental US\", \"1991\"][(\"prism\", \"PRISM (http://www.prism.oregonstate.edu)\", \"Continental US\", \"Daily: 1981-present; Monthly/Yearly: 1895-present\")], [\"livneh\", \"Livneh (https://www.esrl.noaa.gov/psd/\", \"Continental US\", \"1950-2012\"], [\"loca\", \"LOCA downscaled data (http://loca.ucsd.edu/)\", \"Continental US\", \"1950-2099\"], [\"snap\", \"SNAP (https://www.snap.uaf.edu)\", \"Alaska\", \"1970-2099\"], [\" \"], [\"subhead:Model-LOCA precomputed:\", \"subhead:Description\", \"\", \"\"], [\"allmax\", \"Highest of 32 LOCA models (monthly only)\", \"\", \"\"], [\"allmin\", \"Lowest of 32 LOCA models (monthly only)\", \"\", \"\"], [\"allmedian\", \"Median of 32 LOCA models (monthly only)\", \"\", \"\"], [\"wmean\", \"Weighted mean of 32 LOCA models (monthly only)\", \"\", \"\"], [\"subhead:Model-LOCA individual:\"], [\"ACCESS1-0, ACCESS1-3, CCSM4, CESM1-BGC, CESM1-CAM5, CMCC-CM, CMCC-CMS, CNRM-CM5, CSIRO-Mk3-6-0, \" + \"CanESM2, EC-EARTH, FGOALS-g2, GFDL-CM3, GFDL-ESM2G, GFDL-ESM2M,, GISS-E2-H, GISS-E2-R, HadGEM2-AO, \" + \"HadGEM2-CC, HadGEM2-ES, IPSL-CM5A-LR, IPSL-CM5A-MR,, MIROC-ESM, MIROC-ESM-CHEM, MIROC5, MPI-ESM-LR, \" + \"MPI-ESM-MR, MRI-CGCM3, NorESM1-M, bcc-csm1-1, bcc-csm1-1-m, inmcm4\"], [\"subhead:Model-SNAP individual:\"], [\"GFDL-CM3, NCAR-CCSM4\"], [\" \"], [\"subhead:Scenarios\", \"subhead:Description\", \"subhead:Valid for\", \"\"], [\"rcp85\", \"High greenhouse gas and aerosol emissions scenario\", \"loca and snap\", \"\"], [\"rcp45\", \"Medium greenhouse gas and aerosol emissions scenario\", \"loca only\", \"\"]],\n    foots: \"LOCA and SNAP datasets are specified in the form 'name:model:scenario', e.g. 'loca:wmean:rcp85'.\"\n  },\n  units: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"degreeC\", \"Temperatures degrees C\"], [\"degreeF\", \"Temperatures degrees F\"], [\"degreeK\", \"Temperatures degrees K\"], [\"inch\", \"Precipitation inches\"], [\"mm\", \"Precipitation millimeters\"]]\n  },\n  area_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"aaaa_max\", \"Maximum grid value in area\"], [\"aaaa_min\", \"Minimum grid value in area\"], [\"aaaa_mean\", \"Average of all grid values in the area\"]],\n    foots: \"aaaa is area type ('county' ,'climdiv', 'basin', 'state'); Example: county_max\"\n  },\n  grid_meta: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"ll\", \"Longitude and latitude of grid points (implementation pending in GridData2)\"], [\"elev\", \"Elevation of grid points (implementation pending in GridData2)\"]]\n  },\n  grid_elems: {\n    heads: [\"Abbreviation\", \"Var Major\", \"Description\"],\n    contents: [[\"maxt\", \"1\", \"Maximum temperature (&deg;F)\"], [\"mint\", \"2\", \"Minimum temperature (&deg;F)\"], [\"avgt\", \"43\", \"Average temperature (&deg;F)\"], [\"pcpn\", \"4\", \"Precipitation (inches)\"], [\"cdd\", \"\", \"Cooling degree days (default base 65)\"], [\"hdd\", \"45\", \"Degree days below base (default base 65)\"], [\"gdd\", \"44\", \"Degree days above base (default base 50)\"], [\"cddXX\", \"-\", \"Cooling Degree Days; where XX is base temperature\"], [\"hddXX\", \"-\", \"Heating Degree Days; where XX is base temperature\"], [\"gddXX\", \"-\", \"Growing Degree Days; where XX is base temperature\"], [\"gddXX\", \"-\", \"Growing Degree Days; where XX is base temperature\"], [\"subhead:Additional Element Codes for Monthly/Yearly PRISM Data\"], [\"mly_maxt\", \"91\", \"Monthly mean maximum temperature (&deg;F)\"], [\"mly_mint\", \"92\", \"Monthly mean minimum temperature (&deg;F)\"], [\"mly_avgt\", \"99\", \"Monthly mean average temperature (&deg;F)\"], [\"mly_pcpn\", \"94\", \"Monthly precipitation sum (inches)\"], [\"yly_maxt\", \"95\", \"Yearly mean maximum temperature (&deg;F)\"], [\"yly_mint\", \"96\", \"Yearly mean minimum temperature (&deg;F)\"], [\"yly_avgt\", \"100\", \"Yearly mean average temperature (&deg;F)\"], [\"yly_pcpn\", \"98\", \"Yearly precipitation sum (inches)\"]],\n    foots: \"Degree days can also be specified with the keys 'name' (or 'vX') and 'base'. \" + \"The PRISM mly and yly codes are used to access monthly/yearly PRISM gridded datasets directly, not derived monthly/yearly values reduced from daily gridded data.\"\n  },\n  grid2_name: {\n    heads: [\"Abbreviation\", \"Var Major\", \"Description\"],\n    contents: [[\"maxt\", \"1\", \"Maximum temperature (&deg;F)\"], [\"mint\", \"2\", \"Minimum temperature (&deg;F)\"], [\"avgt\", \"43\", \"Average temperature (&deg;F)\"], [\"pcpn\", \"4\", \"Precipitation (inches)\"], [\"cdd\", \"\", \"Cooling degree days (default base 65)\"], [\"hdd\", \"45\", \"Degree days below base (default base 65)\"], [\"gdd\", \"44\", \"Degree days above base (default base 50)\"], [\"cddXX\", \"-\", \"Cooling Degree Days; where XX is base temperature\"], [\"hddXX\", \"-\", \"Heating Degree Days; where XX is base temperature\"], [\"gddXX\", \"-\", \"Growing Degree Days; where XX is base temperature\"], [\"gddXX\", \"-\", \"Growing Degree Days; where XX is base temperature\"]],\n    foots: \"Degree days can also be specified with the keys 'name' (or 'vX') and 'base'. \"\n  },\n  grid2_elems: {\n    heads: [],\n    contents: [[\"Elements must be specified as an object or list of objects.\"]]\n  },\n  info_only: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"1\", \"Only information about the map is returned, not png image\"], [\"\", \"If not specified, png image is returned in data portion of JSON object\"]]\n  },\n  proj: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"lcc\", \"Lambert conformal conic centered on selected area\"]],\n    foots: \"Default is Lambert conformal conic centered on the continental US.\"\n  },\n  overlays: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"state\", \"State borders\"], [\"county\", \"County borders\"]],\n    foots: \"Line width and color can also be specified, separated by colons. For example, ['state:1:red','county:1:blue']\"\n  },\n  interp: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"cspline\", \"Cubic spline (default)\"], [\"none\", \"No interpolation\"]]\n  },\n  cmap: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"Blues\", \"Shades of blue\"], [\"Reds\", \"Shades of red\"], [\"jet\", \"Blue to red\"], [\"...\", \"Other color maps as defined in matplotlib: http://matplotlib.sourceforge.net/mpl_examples/pylab_examples/show_colormaps.pdf\"]]\n  },\n  width: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"integer\", \"Specify width of png image in pixels\"]],\n    foots: \"Only specify 'width' or 'height, not both.\"\n  },\n  height: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"integer\", \"Specify height of png image in pixels\"]],\n    foots: \"Only specify 'height' or 'width, not both.\"\n  },\n  levels: {\n    heads: [\"Description\", \"Example\"],\n    contents: [[\"Comma-separated list of contour levels\", \"0,5,10,15,20\"]],\n    foots: \"Will be determined by server if not specified.\"\n  },\n  general_id: {\n    heads: [\"Area\", \"ID Type\", \"Example\"],\n    contents: [[\"state\", \"Postal\", \"NY\"], [\"county\", \"FIPS\", \"36109\"], [\"climdiv\", \"Divison number\", \"NY10\"], [\"cwa\", \"NWS CWA\", \"BGM\"], [\"basin\", \"8-digit HUC\", \"01080205\"]]\n  },\n  general_meta: {\n    heads: [\"Area\", \"Available Meta Options\"],\n    contents: [[\"state\", \"id, name, bbox, geojson, state\"], [\"county\", \"id, name, bbox, geojson, state\"], [\"climdiv\", \"id, name, bbox, geojson, state\"], [\"cwa\", \"id, name, bbox, geojson\"], [\"basin\", \"id, name, bbox, geojson\"]],\n    foots: \"If not specified, default is id and name.\"\n  },\n  network: {\n    heads: [\"Code\", \"Network Name\"],\n    contents: [[\"0\", \"Unknown\"], [\"1\", \"TD3200\"], [\"2\", \"TD3210\"], [\"4\", \"SHEF\"], [\"5\", \"AWDN\"], [\"7\", \"CF6\"], [\"8\", \"RCC keyed\"], [\"9\", \"NRCC local\"], [\"13\", \"WRCC local\"], [\"14\", \"SRCC local\"], [\"15\", \"DSM\"], [\"16\", \"TD3206\"], [\"17\", \"GHCN-D\"], [\"19\", \"CF6 overriding GHCN-D\"], [\"52\", \"TD3205\"], [\"53\", \"NWS Supplied\"], [\"54\", \"ThreadEx\"], [\"56\", \"CRB\"]],\n    foots: \"Additional networks are available with only hourly data.\"\n  }\n};\n\nvar HelpTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HelpTable, _Component);\n\n  function HelpTable() {\n    _classCallCheck(this, HelpTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HelpTable).apply(this, arguments));\n  }\n\n  _createClass(HelpTable, [{\n    key: \"render\",\n    value: function render() {\n      var helpid = this.props.id;\n\n      if (helpid.includes('date')) {\n        helpid = 'date';\n      } else if (helpid === 'sid') {\n        helpid = 'sids';\n      } else if (helpid === 'name') {\n        helpid = 'elems';\n      }\n\n      var helpdata = tabledata.hasOwnProperty(helpid) ? tabledata[helpid] : tabledata.nohelp;\n      var ncols = helpdata.hasOwnProperty(\"contents\") ? helpdata.contents[0].length : 1;\n      return React.createElement(Paper, {\n        elevation: 1,\n        style: {\n          border: \"1px solid gray\",\n          margin: \"1em 10%\",\n          padding: \"5px\",\n          backgroundColor: \"lightcyan\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, React.createElement(Table, {\n        padding: \"dense\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }, helpdata.hasOwnProperty(\"heads\") && helpdata.heads.length > 0 && React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        style: {\n          height: \"1em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        },\n        __self: this\n      }, helpdata.heads.map(function (cell, i) {\n        return React.createElement(TableCell, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 681\n          },\n          __self: this\n        }, cell);\n      }))), helpdata.hasOwnProperty(\"contents\") && helpdata.contents.length > 0 && React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, helpdata.contents.map(function (row, i) {\n        return React.createElement(TableRow, {\n          hover: true,\n          key: i,\n          style: {\n            height: \"1em\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 689\n          },\n          __self: this\n        }, row.map(function (cell, j) {\n          return React.createElement(TableCell, {\n            variant: cell.includes(\"subhead:\") ? \"head\" : \"body\",\n            colSpan: row.length === 1 ? ncols : 1,\n            key: j,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 691\n            },\n            __self: this\n          }, cell.replace(\"subhead:\", \"\"));\n        }));\n      })), helpdata.hasOwnProperty('foots') && helpdata.foots.length > 0 && React.createElement(TableFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        style: {\n          height: \"1em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: ncols,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700\n        },\n        __self: this\n      }, helpdata.foots)))));\n    }\n  }]);\n\n  return HelpTable;\n}(Component);\n\nexport { HelpTable as default };","map":{"version":3,"sources":["/Users/kle1/progs/React/QueryBuilder2/src/HelpTable.jsx"],"names":["React","Component","Table","TableBody","TableCell","TableHead","TableFooter","TableRow","Paper","tabledata","nohelp","heads","contents","foots","sids","hrly_sid","county","climdiv","cwa","basin","state","bbox","grid2_bbox","meta","elems","vX","vN","hrly_elems","base","output","grid_output","grid2_output","date","reduce_add","smry_add","smry_only","reduce_n","smry_n","reduce_run_maxmissing","smry_run_maxmissing","add","normal","interval","duration","reduce","grid_reduce","grid2_reduce","smry","season_start","maxmissing","prec","groupby","loc","grid","grid2","units","area_reduce","grid_meta","grid_elems","grid2_name","grid2_elems","info_only","proj","overlays","interp","cmap","width","height","levels","general_id","general_meta","network","HelpTable","helpid","props","id","includes","helpdata","hasOwnProperty","ncols","length","border","margin","padding","backgroundColor","map","cell","i","row","j","replace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nconst tabledata = {\n  nohelp: {\n    heads: [],\n    contents: [[]],\n    foots: \"No help available for this item\"\n  },\n  sids: {\n    heads: [\"Type\", \"Code \", \"Description\", \"Example\"],\n\t  contents: [\n      [\"WBAN\", \"1\", \"5-digit WBAN id\", \"14742\"],\n      [\"COOP\", \"2\", \"6-digit COOP id\", \"304174\"],\n      [\"FAA\", \"3\", \"3-character FAA id\", \"LAX\"],\n      [\"WMO\", \"4\", \"5-digit WMO id\", \"72223\"],\n      [\"ICAO\", \"5\", \"4-character ICAO id\", \"KGRR\"],\n      [\"GHCN\", \"6\", \"11-character GHCN id\", \"USW00003927\"],\n      [\"NWSLI\", \"7\", \"5-character NWSLI\", \"AURN6\"],\n      [\"THRDX\", \"9\", \"6-character ThreadEx id\", \"HSVthr\"],\n      [\"COCORAHS\", \"10\", \"8-character CoCoRaHS id\", \"NYTM0004\"],\n      [\"SCAN\", \"17\", \"SCAN\", \"15\"],\n      [\"TSCAN\", \"19\", \"TSCAN\", \"3001\"],\n    ],\n    foots: \"To avoid ambiguity, station id should be specified by station id and id code (or type) separated by a space (e.g. 'KGRR 5')\"\n  },\n  hrly_sid: {\n    heads: [\"Type\", \"Code \", \"Description\", \"Example\"],\n\t  contents: [\n      [\"WBAN\", \"1\", \"5-digit WBAN id\", \"14742\"],\n      [\"COOP\", \"2\", \"6-digit COOP id\", \"304174\"],\n      [\"FAA\", \"3\", \"3-character FAA id\", \"LAX\"],\n      [\"WMO\", \"4\", \"5-digit WMO id\", \"72223\"],\n      [\"ICAO\", \"5\", \"4-character ICAO id\", \"KGRR\"],\n      [\"GHCN\", \"6\", \"11-character GHCN id\", \"USW00003927\"],\n      [\"NWSLI\", \"7\", \"5-character NWSLI\", \"AURN6\"],\n      [\"DEOS\", \"11\", \"Delaware DEOS id\", \"DAGF\"],\n      [\"MIWX\", \"13\", \"Michigan Enviroweather\", \"KZO\"],\n      [\"SCAN\", \"17\", \"SCAN\", \"2011\"],\n      [\"TSCAN\", \"19\", \"TSCAN\", \"3052\"],\n      [\"OARDC\", \"22\", \"Ohio OARDC id\", \"ASHT\"],\n      [\"NEWA\", \"26\", \"NEWA id\", \"GEN\"],\n      [\"CU_LOG\", \"27\", \"Cornell WxNet id\", \"CU_GFR\"],\n      [\"NJWX\", \"28\", \"NJ WxNet id\", \"1101\"],\n    ],\n    foots: \"To avoid ambiguity, station id should be specified by station id and id type (or code) separated by a space (e.g. 'KGRR icao')\"\n  },\n  county: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more county FIPS codes \", \"09001\"],\n    ]\n  },\n  climdiv: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more climate division (2-digits or combined with state) \", \"10 or NY10\"],\n    ]\n  },\n  cwa: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more NWS County Warning Areas\", \"BOI\"],\n    ]\n  },\n  basin: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more drainage basins (8-digit HUC) \", \"01080205\"],\n    ]\n  },\n  state: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [ \"One or more 2-letter state postal abbreviations\", \"AK\"],\n    ]\n  },\n  bbox: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"Bounding box in decimal degrees (W,S,E,N) \", \"-90, 40, -88, 41\"]\n    ]\n  },\n  grid2_bbox: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"Bounding box in decimal degrees (W,S,E,N) \", \"-90, 40, -88, 41\"]\n    ],\n    foots: \"An empty bounding box, [], will return the entire grid array\",\n  },\n  meta: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"name\",\"Station name *\"],\n      [\"state\",\"2-letter state abbrev *\"],\n      [\"sids\",\"Array of station ids/types *\"],\n      [\"sid_dates\",\"Date range for each sid\"],\n      [\"ll\",\"Longitude and latitude *\"],\n      [\"elev\",\"Elevation *\"],\n      [\"uid\",\"ACIS id *\"],\n      [\"county\",\"5-digit FIPS id\"],\n      [\"climdiv\",\"4-character climate division id\"],\n      [\"valid_daterange\",\"Valid date range (by element) - must specify Elements\"],\n      [\"tzo\",\"Time zone offset from GMT\"],\n      [\"network\",\"Station networks\"],\n    ],\n  foots: \"Values with an asterisk (*) indicate defaults used if 'meta' is not explicityly specified.\"\n  },\n  elems: {\n    heads: [\"Abbreviation\",\"Var Major\",\"Description\"],\n    contents: [\n      [\"maxt\",\"1\",\"Maximum temperature (&deg;F)\"],\n      [\"mint\",\"2\",\"Minimum temperature (&deg;F)\"],\n      [\"avgt\",\"43\",\"Average temperature (&deg;F)\"],\n      [\"obst\",\"3\",\"Obs time temperature (&deg;F)\"],\n      [\"pcpn\",\"4\",\"Precipitation (inches)\"],\n      [\"snow\",\"10\",\"Snowfall (inches)\"],\n      [\"snwd\",\"11\",\"Snow Depth (inches)\"],\n      [\"(not available)\",\"7\",\"Pan evaporation (inches)\"],\n      [\"cdd\",\"\",\"Cooling degree days (default base 65)\"],\n      [\"hdd\",\"45\",\"Degree days below base (default base 65)\"],\n      [\"gdd\",\"44\",\"Degree days above base (default base 50)\"],\n    ],\n  },\n  vX: {\n    heads: [\"Variable\", \"vX\", \"Networks found\"],\n    contents: [\n      [\"Precipitation\", \"5\", \"newa, icao, cu_log, njwx, miwx, oardc, scan, tscan\"],\n      [\"Temperature\", \"23\", \"newa, icao, njwx, oardc, deos, scan, tscan\"],\n      [\"Average temperature\", \"126\", \"newa, cu_log, njwx, miwx\"],\n      [\"Max temperature\", \"124\", \"newa, cu_log, njwx, scan, tscan\"],\n      [\"Min temperature\", \"125\", \"newa, cu_log, njwx, scan, tscan\"],\n      [\"Relative humidity\", \"24\", \"newa, icao, njwx, oardc, cu_log, deos, scan, tscan\"],\n      [\"Average relative humidity\", \"143\", \"newa, njwx, miwx\"],\n      [\"Max relative humidity\", \"141\", \"newa, njwx\"],\n      [\"Min relative humidity\", \"143\", \"newa, njwx\"],\n      [\"Dewpoint temperature\", \"22\", \"icao, newa, deos\"],\n      [\"Average dewpoint temperature\", \"140\", \"njwx\"],\n      [\"Max dewpoint temperature\", \"138\", \"njwx\"],\n      [\"Min dewpoint temperature\", \"139\", \"njwx\"],\n      [\"Wet-bulb temperature\", \"25\", \"icao\"],\n      [\"Wind speed\", \"28\", \"icao, njwx, oardc, deos\"],\n      [\"Average wind speed\", \"128\", \"newa, njwx, cu_log, scan, tscan\"],\n      [\"Resultant wind speed\", \"129\", \"cu_log\"],\n      [\"Max wind speed\", \"42\", \"icao, cu_log, njwx, scan, tscan\"],\n      [\"Wind gust\", \"85\", \"icao\"],\n      [\"Wind direction\", \"27\", \"icao, njwx, oardc, deos\"],\n      [\"Average wind direction\", \"130\", \"newa, cu_log, scan, tscan\"],\n      [\"Peak wind direction\", \"41\", \"njwx, icao\"],\n      [\"Total sky cover\", \"33\", \"icao\"],\n      [\"Solar radiation total\", \"132\", \"newa, cu_log, miwx, oardc, deos\"],\n      [\"Solar radiation rate\", \"119\", \"njwx\"],\n      [\"Average solar radiation rate\", \"149\", \"njwx, scan, tscan\"],\n      [\"Max solar radiation rate\", \"147\", \"njwx\"],\n      [\"Min solar radiation rate\", \"148\", \"njwx\"],\n      [\"Leaf wetness\", \"118\", \"newa, cu_log, njwx, miwx, oardc, deos\"],\n      [\"Soil temperature\", \"120\", \"newa, oardc, deos, scan, tscan\"],\n      [\"Average soil temperature\", \"123\", \"cu_log\"],\n      [\"Max soil temperature\", \"121\", \"newa, deos, oardc, cu_log\"],\n      [\"Min soil temperature\", \"122\", \"newa, deos, oardc, cu_log\"],\n      [\"Soil moisture\", \"104\", \"deos, scan, tscan\"],\n      [\"Soil tension\", \"65\", \"newa\"],\n      [\"Station pressure\", \"18\", \"icao, newa, njwx, deos\"],\n      [\"Average station pressure\", \"146\", \"newa, njwx\"],\n      [\"Max station pressure\", \"144\", \"newa, njwx\"],\n      [\"Min station pressure\", \"145\", \"newa, njwx\"],\n      [\"Sea level pressure\", \"19\", \"icao\"],\n      [\"Altimeter setting\", \"17\", \"icao\"],\n      [\"Visibility\", \"26\", \"icao\"],\n      [\"Ceiling height\", \"35\", \"icao\"],\n      [\"3-hour precipitation\", \"36\", \"icao\"],\n      [\"6-hour precipitation\", \"37\", \"icao\"],\n      [\"6-hour max temperature\", \"39\", \"icao\"],\n      [\"6-hour min temperature\", \"40\", \"icao\"],\n    ],\n  },\n  vN: {\n    contents: [\n      [\"Some elements require a var minor (vN). A list of vN can be found at https://github.com/rcc-acis/metadata/blob/master/data/global_variable_maj_min.load.\"],\n    ],\n  },\n  hrly_elems: {\n    contents: [\n      [\"Elements are specified by var major (vX) with an optional var minor (vN).\"],\n    ],\n  },\n  base: {\n    heads: [],\n    contents: [[\"Degree day base temperature in degrees F.\"]],\n  },\n  output: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"json\",\"JavaScript Object Notation (default)\"],\n      [\"csv\",\"Comma-Separated Values (unavailable for some requests, such as those including 'add', 'smry' or 'meta' and MultiStnData requests for a day range\"],\n    ],\n  },\n  grid_output: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"json\",\"JavaScript Object Notation (default)\"],\n      [\"image\",\"png image only\"]\n    ],\n  },\n  grid2_output: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"json\",\"JavaScript Object Notation (default)\"],\n      [\"png\",\"png image (display not implemented in this tool)\"],\n      [\"geotiff\",\"geotiff output (display not implemented in this tool)\"],\n    ],\n  },\n  date: {\n    heads: [\"Options\",\"Example\"],\n    contents: [\n      [\"yyyy-mm-dd\",\"2010-01-31\"],\n      [\"yyyymmdd\",\"20100131\"],\n      [\"por (period of record)\",\"por\"],\n    ],\n    foots: \"Can also use only yyyy or yyyymm when appropriate.\",\n  },\n  reduce_add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"mcnt\", \"Count of missing values in the reduction period\"],\n      [\"date\", \"Date of occurrence (for max, min, run)\"],\n      [\"value\", \"Value on date of occurrence (for first and last)\"],\n      [\"rmcnt\", \"Count of missing values in the run period (for run only)\"],\n    ],\n  },\n  smry_add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"mcnt\", \"Count of missing values in the reduction period\"],\n      [\"date\", \"Date of occurrence (for max, min, run)\"],\n      [\"value\", \"Value on date of occurrence (for first and last)\"],\n      [\"rmcnt\", \"Count of missing values in the run period (for run only)\"],\n    ],\n  },\n  smry_only: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"1\", \"Return only the summary value (no intermediate results). If used, must be specified for each element.\"],\n    ]\n  },\n  reduce_n: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Used with run reduction to specify max number of results returned per interval.\"],\n    ],\n  },\n  smry_n: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Count of number of values to be returned. Maximum value is 100. Can only be used with smry reduce of 'max', 'min' or 'run'.\"],\n    ],\n  },\n  reduce_run_maxmissing: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Used with run reduction to specify max number of missing days to allow before terminating run.\"],\n    ],\n  },\n  smry_run_maxmissing: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Used with run reduction to specify max number of missing days to allow before terminating run.\"],\n    ],\n  },\n  add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"f\", \"Flags\"],\n      [\"t\", \"Time of observation\"],\n      [\"i\", \"Station ID associated with data\"],\n      [\"v\", \"Var minor associated with data\"],\n      [\"n\", \"Network associated with data\"],\n      [\"s\", \"Source flag (for GHCN-Daily data)\"],\n    ],\n    foots: \"Enter one or more codes separated by commas.\"\n  },\n  normal: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"1\", \"Return default normals (1991-2020)\"],\n      [\"departure\", \"Return default departure from normal (1991-2020)\"],\n      [\"91\", \"Return 1991-2020 normals\"],\n      [\"departure91\", \"Return departure from 1991-2020 normal\"],\n      [\"81\", \"Return 1981-2010 normals\"],\n      [\"departure81\", \"Return departure from 1981-2010 normal\"],\n    ],\n    foots: \"1991-2020 added as default effective 2021-05-04.\",\n  },\n  interval: {\n    heads: [\"Code\", \"Description\"],\n    contents: [\n      [\"dly\", \"results consist of a daily value for each day; shortcut for [0,0,1].\"],\n      [\"mly\", \"results consist of a monthly value for each calendar month; shortcut for [0,1]\"],\n      [\"yly\", \"results consist of an annual value for each calendar year; shortcut for [1]\"],\n      [\"array\", \"An array containing a single positive integer and zeros. The \" + \n        \"array can have a length of either 1, 2 or 3, with the length indicating the temporal \" + \n  \t\t\t\"precision of the returned values. A length of 1 indicates annual precision, 2 monthly \" + \n  \t\t\t\"precision and 3 daily precision. The position of non-zero integers within the array signifies \" + \n  \t\t\t\"the frequency of the values returned. The strings dly, mly and yly are just shortcuts \" + \n        \"for commonly used intervals. \" + \n        \"Using an array facilitates a number of more complex requests. The \" + \n        \"following examples demonstrate some of these capabilities:\"],\n      [\"subhead:Example\", \"subhead:Explanation\"],\n      [\"[1,0,0]\", \"Return a daily value once per year. For instance, daily rainfall for June 20  in each of a series of years.\"],\n      [\"[0,1,0]\", \"Return a daily value once per month. For instance, max temperature on the 15th of each month for a series of years.\"],\n      [\"[0,0,7]\", \"Return a daily value every seven days.\"],\n      [\"[0,3,0]\", \"Return a daily value every third month.\"],\n      [\"[0,3]\", \"Return a monthly value every third month.\"],\n      [\"[30]\", \"Return an annual value every thirty years.\"],\n    ],\n    foots: \"Note: 'interval' must be the same for all objects in an 'elems' array.\",\n  },\n  duration: {\n    heads: [\"Code\", \"Description\", \"Valid with intervals or list representations\"],\n    contents: [\n      [\"integer\", \"Length of period to be analyzed in units specified by length of 'interval'\", \"dly, mly, yly, [x,x,x], [x,x], [x]\"],\n      [\"mtd\", \"Month-to-date; must specify 'reduce'\", \"dly, [x,x,x]\"],\n      [\"ytd\", \"Year-to-date; must specify 'reduce'\", \"dly, mly, [x,x,x], [x,x]\"],\n      [\"std\", \"Season-to-date; must specify 'reduce' and 'season_start'\", \"dly, mly, [x,x,x], [x,x]\"],\n      [\"dly\", \"Daily (NOT RECOMMENDED, use 1 instead)\", \"dly\"],\n      [\"mly\", \"Monthly (NOT RECOMMENDED, use 1 instead)); must specify 'reduce'\", \"mly\"],\n      [\"yly\", \"Yearly (NOT RECOMMENDED, use 1 instead); must specify 'reduce'\", \"yly\"],\n    ],\n  },\n  reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the period\"],\n      [\"min\", \"Minimum value for the period\"],\n      [\"sum\", \"Sum of the values for the period\"],\n      [\"mean\", \"Average of the values for the period\"],\n      [\"list\", \"Array of daily values for the period\"],\n      [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"],\n      [\"pct_xx_yyy\", \"Percent (integer) of daily values passing threshold\"],\n      [\"fct_xx_yyy\", \"Fraction (float) of daily values passing threshold\"],\n      [\"first_xx_yyy\", \"First occurrence of daily value passing threshold\"],\n      [\"last_xx_yyy\", \"Last occurrence of daily value passing threshold\"],\n      [\"run_xx_yyy\", \"Consecutive daily values passing threshold\"],\n      [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"],\n    ],\n  },\n  grid_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the period\"],\n      [\"min\", \"Minimum value for the period\"],\n      [\"sum\", \"Sum of the values for the period\"],\n      [\"mean\", \"Average of the values for the period\"],\n      [\"stddev\", \"Standard deviation of the values\"],\n      [\"list\", \"Array of daily values for the period\"],\n      [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"],\n      [\"pct_xx_yyy\", \"Percent (integer) of daily values passing threshold\"],\n      [\"fct_xx_yyy\", \"Fraction (float) of daily values passing threshold\"],\n     [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"],\n    ],\n  },\n  grid2_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the period\"],\n      [\"min\", \"Minimum value for the period\"],\n      [\"sum\", \"Sum of the values for the period\"],\n      [\"mean\", \"Average of the values for the period\"],\n      [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"],\n      [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"],\n    ],\n    foots: \"Only certain cnt thresholds are available for LOCA pre-computed models (i.e. allmax, allmin, allmedian, wmean\",\n  },\n  smry: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the column\"],\n      [\"min\", \"Minimum value for the column\"],\n      [\"sum\", \"Sum of values in the column\"],\n      [\"mean\", \"Average of values in the column\"],\n      [\"cnt_xx_yyy\", \"Count of number of values in column passing threshold\"],\n      [\"pct_xx_yyy\", \"Percent (integer) of values in column passing threshold\"],\n      [\"fct_xx_yyy\", \"Fraction (float) of values in columnn passing threshold\"],\n      [\"run_xx_yyy\", \"Consecutive column values passing threshold\"],\n      [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, run_le_32\"],\n    ],\n    foots: \"More than one smry code can be specified by an array of strings or an array of objects.\",\n  },\n  season_start: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [ \n      [\"For interval of dly or [x,x,x] - month and day\", \"[12,21] or 06-20\"],\n      [\"For interval of mly or [x,x] - just month\", \"3\"],\n    ],\n  },\n  maxmissing: {\n    heads: [\"Description \"],\n    contents: [ \n      [\"Integer value indicating the number missing daily values to allow before a reduction is reported as missing.\"],\n    ],\n  },\n  prec: {\n    heads: [\"Description \"],\n    contents: [ \n      [\"Integer value indicating the number of decimal places of precision displayed in the results for this element. Not available for some elements.\"],\n    ],\n  },\n  groupby: {\n    heads: [\"Code\", \"Description\"],\n    contents: [\n      [\"year\", \"Results will be returned with all data for a year in a list.\"],\n      [\"year, mm-dd, mm-dd\", \"Results will be returned with all daily data between specified start date and end date in a list identified by ending year.\"],\n      [\"year, mm, mm\", \"Monthly summarized data will be returned for all months between specified start month and end month in a list identified by ending year.\"],\n    ],\n  },\n  loc: {\n    heads: [\"Description\",\"Example\"],\n    contents: [\n\t    [\"Point location defined in decimal degrees (longitude, latitude); negative values for South latitude and West longitude\",\"-77.7, 41.8\"],\n    ],\n  },\n  grid: {\n    heads: [\"ID\",\"Description\",\"Area\",\"Period\"],\n    contents: [\n      [\" 1\",\"NRCC Interpolated\",\"Continental US\",\"1950-present\"],\n      [\" 2\",\"Multi-Sensor Precipitation Estimates\",\"Continental US\",\"2006-present\"],\n      [\" 3\",\"NRCC Hi-Res\",\"East of Rockies\",\"Temp: 1998-present; Pcpn: 2002-present\"],\n      [\" 21\",\"PRISM (http://www.prism.oregonstate.edu)\",\"Continental US\",\"Daily: 1981-present; Monthly/Yearly: 1895-present\"],\n      [\" 4-16\",\"NARCCAP (to be deprecated) *\",\"Continental US\",\"1970-2000, 2040-2070\"],\n      [\"4\", \"CRCM + NCEP (historical only)\"],\n      [\"5\", \"CRCM + CCSM\"],\n      [\"6\", \"CRCM + CGCM3\"],\n      [\"9\", \"MM5I + NCEP (historical only)\"],\n      [\"10\", \"MM5I + CCSM\"],\n      [\"11\", \"RCM3 + NCEP (historical only)\"],\n      [\"12\", \"RCM3 + CGCM3\"],\n      [\"13\", \"RCM3 + GFDL\"],\n      [\"14\", \"WRFG + NCEP (historical only)\"],\n      [\"15\", \"WRFG + CCSM\"],\n      [\"16\", \"WRFG + CGCM3\"],\n    ],\n    foots: \"* Be aware of idiosyncrasies before using NARCCAP grid sets.\",\n  },\n  grid2: {\n    heads: [\"Name\",\"Description\",\"Area\",\"Period\"],\n    contents: [\n      [\"nrcc-nn\",\"NRCC Interpolated\",\"Continental US\",\"1950-present\"],\n      [\"nrcc-model\",\"NRCC Hi-Res\",\"East of Rockies\",\"Temp: 1998-present; Pcpn: 2002-present\"],\n      [\"ncei-norm:91-20\",\"NCEI Gridded Monthly 1991-2020 Normals\",\"Continental US\",\"1991\"]\n      [\"prism\",\"PRISM (http://www.prism.oregonstate.edu)\",\"Continental US\",\"Daily: 1981-present; Monthly/Yearly: 1895-present\"],\n      [\"livneh\",\"Livneh (https://www.esrl.noaa.gov/psd/\",\"Continental US\",\"1950-2012\"],\n      [\"loca\",\"LOCA downscaled data (http://loca.ucsd.edu/)\",\"Continental US\",\"1950-2099\"],\n      [\"snap\",\"SNAP (https://www.snap.uaf.edu)\",\"Alaska\",\"1970-2099\"],\n      [\" \"],\n      [\"subhead:Model-LOCA precomputed:\",\"subhead:Description\",\"\",\"\"],\n      [\"allmax\", \"Highest of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"allmin\", \"Lowest of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"allmedian\", \"Median of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"wmean\", \"Weighted mean of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"subhead:Model-LOCA individual:\"],\n      [\"ACCESS1-0, ACCESS1-3, CCSM4, CESM1-BGC, CESM1-CAM5, CMCC-CM, CMCC-CMS, CNRM-CM5, CSIRO-Mk3-6-0, \" +\n       \"CanESM2, EC-EARTH, FGOALS-g2, GFDL-CM3, GFDL-ESM2G, GFDL-ESM2M,, GISS-E2-H, GISS-E2-R, HadGEM2-AO, \" +\n       \"HadGEM2-CC, HadGEM2-ES, IPSL-CM5A-LR, IPSL-CM5A-MR,, MIROC-ESM, MIROC-ESM-CHEM, MIROC5, MPI-ESM-LR, \" +\n       \"MPI-ESM-MR, MRI-CGCM3, NorESM1-M, bcc-csm1-1, bcc-csm1-1-m, inmcm4\"],\n      [\"subhead:Model-SNAP individual:\"],\n      [\"GFDL-CM3, NCAR-CCSM4\"],\n      [\" \"],\n      [\"subhead:Scenarios\",\"subhead:Description\",\"subhead:Valid for\",\"\"],\n      [\"rcp85\",\"High greenhouse gas and aerosol emissions scenario\",\"loca and snap\",\"\"],\n      [\"rcp45\",\"Medium greenhouse gas and aerosol emissions scenario\",\"loca only\",\"\"],\n    ],\n    foots: \"LOCA and SNAP datasets are specified in the form 'name:model:scenario', e.g. 'loca:wmean:rcp85'.\",\n  },\n  units: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"degreeC\",\"Temperatures degrees C\"],\n      [\"degreeF\",\"Temperatures degrees F\"],\n      [\"degreeK\",\"Temperatures degrees K\"],\n      [\"inch\",\"Precipitation inches\"],\n      [\"mm\",\"Precipitation millimeters\"],\n    ],\n  },\n\tarea_reduce: {\n\t\theads: [\"Code\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"aaaa_max\",\"Maximum grid value in area\"],\n\t\t\t[\"aaaa_min\",\"Minimum grid value in area\"],\n\t\t\t[\"aaaa_mean\",\"Average of all grid values in the area\"],\n\t\t],\n\t\tfoots: \"aaaa is area type ('county' ,'climdiv', 'basin', 'state'); Example: county_max\",\n\t},\t\n\tgrid_meta: {\n\t\theads: [\"Code\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"ll\",\"Longitude and latitude of grid points (implementation pending in GridData2)\"],\n\t\t\t[\"elev\",\"Elevation of grid points (implementation pending in GridData2)\"],\n\t\t],\n  },\n  grid_elems: {\n\t\theads: [\"Abbreviation\",\"Var Major\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"maxt\",\"1\",\"Maximum temperature (&deg;F)\"],\n\t\t\t[\"mint\",\"2\",\"Minimum temperature (&deg;F)\"],\n\t\t\t[\"avgt\",\"43\",\"Average temperature (&deg;F)\"],\n\t\t\t[\"pcpn\",\"4\",\"Precipitation (inches)\"],\n\t\t\t[\"cdd\",\"\",\"Cooling degree days (default base 65)\"],\n\t\t\t[\"hdd\",\"45\",\"Degree days below base (default base 65)\"],\n\t\t\t[\"gdd\",\"44\",\"Degree days above base (default base 50)\"],\n\t\t\t[\"cddXX\",\"-\",\"Cooling Degree Days; where XX is base temperature\"],\n\t\t\t[\"hddXX\",\"-\",\"Heating Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t\t[\"subhead:Additional Element Codes for Monthly/Yearly PRISM Data\"],\n\t\t\t[\"mly_maxt\",\"91\",\"Monthly mean maximum temperature (&deg;F)\"],\n\t\t\t[\"mly_mint\",\"92\",\"Monthly mean minimum temperature (&deg;F)\"],\n\t\t\t[\"mly_avgt\",\"99\",\"Monthly mean average temperature (&deg;F)\"],\n\t\t\t[\"mly_pcpn\",\"94\",\"Monthly precipitation sum (inches)\"],\n\t\t\t[\"yly_maxt\",\"95\",\"Yearly mean maximum temperature (&deg;F)\"],\n\t\t\t[\"yly_mint\",\"96\",\"Yearly mean minimum temperature (&deg;F)\"],\n\t\t\t[\"yly_avgt\",\"100\",\"Yearly mean average temperature (&deg;F)\"],\n\t\t\t[\"yly_pcpn\",\"98\",\"Yearly precipitation sum (inches)\"],\n\t\t],\n    foots: \"Degree days can also be specified with the keys 'name' (or 'vX') and 'base'. \" +\n            \"The PRISM mly and yly codes are used to access monthly/yearly PRISM gridded datasets directly, not derived monthly/yearly values reduced from daily gridded data.\",\n  },\n  grid2_name: {\n\t\theads: [\"Abbreviation\",\"Var Major\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"maxt\",\"1\",\"Maximum temperature (&deg;F)\"],\n\t\t\t[\"mint\",\"2\",\"Minimum temperature (&deg;F)\"],\n\t\t\t[\"avgt\",\"43\",\"Average temperature (&deg;F)\"],\n\t\t\t[\"pcpn\",\"4\",\"Precipitation (inches)\"],\n\t\t\t[\"cdd\",\"\",\"Cooling degree days (default base 65)\"],\n\t\t\t[\"hdd\",\"45\",\"Degree days below base (default base 65)\"],\n\t\t\t[\"gdd\",\"44\",\"Degree days above base (default base 50)\"],\n\t\t\t[\"cddXX\",\"-\",\"Cooling Degree Days; where XX is base temperature\"],\n\t\t\t[\"hddXX\",\"-\",\"Heating Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t],\n    foots: \"Degree days can also be specified with the keys 'name' (or 'vX') and 'base'. \",\n  },\n  grid2_elems: {\n\t\theads: [],\n\t\tcontents: [\n\t\t\t[\"Elements must be specified as an object or list of objects.\"],\n\t\t],\n\t},\n  info_only: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"1\",\"Only information about the map is returned, not png image\"],\n      [\"\", \"If not specified, png image is returned in data portion of JSON object\"],\n    ],\n  },\n  proj: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"lcc\",\"Lambert conformal conic centered on selected area\"],\n    ],\n    foots: \"Default is Lambert conformal conic centered on the continental US.\",\n  },\n  overlays: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"state\",\"State borders\"],\n      [\"county\",\"County borders\"],\n    ],\n    foots: \"Line width and color can also be specified, separated by colons. For example, ['state:1:red','county:1:blue']\",\n  },\n  interp: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"cspline\",\"Cubic spline (default)\"],\n      [\"none\",\"No interpolation\"],\n    ],\n  },\n  cmap: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"Blues\",\"Shades of blue\"],\n      [\"Reds\",\"Shades of red\"],\n      [\"jet\",\"Blue to red\"],\n      [\"...\",\"Other color maps as defined in matplotlib: http://matplotlib.sourceforge.net/mpl_examples/pylab_examples/show_colormaps.pdf\"],\n    ],\n  },\n  width: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"integer\",\"Specify width of png image in pixels\"],\n    ],\n    foots: \"Only specify 'width' or 'height, not both.\",\n  },\n  height: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"integer\",\"Specify height of png image in pixels\"],\n    ],\n    foots: \"Only specify 'height' or 'width, not both.\",\n  },\n  levels: {\n    heads: [\"Description\",\"Example\"],\n    contents: [\n      [\"Comma-separated list of contour levels\",\"0,5,10,15,20\"],\n    ],\n    foots: \"Will be determined by server if not specified.\",\n  },\n  general_id: {\n    heads: [\"Area\",\"ID Type\",\"Example\"],\n    contents: [\n      [\"state\",\"Postal\",\"NY\"],\n      [\"county\",\"FIPS\",\"36109\"],\n      [\"climdiv\",\"Divison number\",\"NY10\"],\n      [\"cwa\",\"NWS CWA\",\"BGM\"],\n      [\"basin\",\"8-digit HUC\",\"01080205\"],\n    ],\n  },\n  general_meta: {\n    heads: [\"Area\",\"Available Meta Options\"],\n    contents: [\n      [\"state\",\"id, name, bbox, geojson, state\"],\n      [\"county\",\"id, name, bbox, geojson, state\"],\n      [\"climdiv\",\"id, name, bbox, geojson, state\"],\n      [\"cwa\",\"id, name, bbox, geojson\"],\n      [\"basin\",\"id, name, bbox, geojson\"],\n    ],\n    foots: \"If not specified, default is id and name.\",\n  },\n  network: {\n\t\theads: [\"Code\",\"Network Name\"],\n\t\tcontents: [\n      [\"0\",\"Unknown\"],\n      [\"1\",\"TD3200\"],\n      [\"2\",\"TD3210\"],\n      [\"4\",\"SHEF\"],\n      [\"5\",\"AWDN\"],\n      [\"7\",\"CF6\"],\n      [\"8\",\"RCC keyed\"],\n      [\"9\",\"NRCC local\"],\n      [\"13\",\"WRCC local\"],\n      [\"14\",\"SRCC local\"],\n      [\"15\",\"DSM\"],\n      [\"16\",\"TD3206\"],\n      [\"17\",\"GHCN-D\"],\n      [\"19\",\"CF6 overriding GHCN-D\"],\n      [\"52\",\"TD3205\"],\n      [\"53\",\"NWS Supplied\"],\n      [\"54\",\"ThreadEx\"],\n      [\"56\",\"CRB\"],\n\t\t],\n    foots: \"Additional networks are available with only hourly data.\",\n  },\n}\n\nexport default class HelpTable extends Component { \n  render() {\n    let helpid = this.props.id\n    if (helpid.includes('date')) {\n      helpid = 'date'\n    } else if (helpid === 'sid') {\n      helpid = 'sids'\n    } else if (helpid === 'name') {\n      helpid = 'elems'\n    }\n    const helpdata = tabledata.hasOwnProperty(helpid) ? tabledata[helpid] : tabledata.nohelp\n    const ncols = (helpdata.hasOwnProperty(\"contents\")) ? helpdata.contents[0].length : 1\n    return (\n      <Paper elevation={1} style={{border:\"1px solid gray\", margin:\"1em 10%\", padding:\"5px\", backgroundColor:\"lightcyan\"}}>\n        <Table padding=\"dense\">\n          {helpdata.hasOwnProperty(\"heads\") && helpdata.heads.length > 0 &&\n            <TableHead>\n              <TableRow style={{height:\"1em\"}}>\n                {helpdata.heads.map((cell, i) => (\n                  <TableCell key={i}>{cell}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n          }\n          {helpdata.hasOwnProperty(\"contents\") && helpdata.contents.length > 0 &&\n            <TableBody>\n            {helpdata.contents.map((row, i) => (\n              <TableRow hover={true} key={i} style={{height:\"1em\"}}>\n                {row.map((cell, j) => (\n                  <TableCell variant={cell.includes(\"subhead:\") ? \"head\" : \"body\"} colSpan={row.length === 1 ? ncols : 1} key={j}>{cell.replace(\"subhead:\",\"\")}</TableCell>\n                ))}\n              </TableRow>\n            ))}\n            </TableBody>\n          }\n          {helpdata.hasOwnProperty('foots') && helpdata.foots.length > 0 && \n            <TableFooter>\n              <TableRow style={{height:\"1em\"}}>\n                <TableCell colSpan={ncols}>{helpdata.foots}</TableCell>\n              </TableRow>\n            </TableFooter>\n          }\n        </Table>\n      </Paper>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}