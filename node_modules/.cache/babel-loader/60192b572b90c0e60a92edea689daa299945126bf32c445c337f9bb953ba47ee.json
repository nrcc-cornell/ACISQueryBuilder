{"ast":null,"code":"var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n  // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});","map":{"version":3,"names":["global","require","hide","has","SRC","$toString","TO_STRING","TPL","split","inspectSource","it","call","module","exports","O","key","val","safe","isFunction","join","String","Function","prototype","toString"],"sources":["/Users/kle1/progs/React/QueryBuilder3/node_modules/core-js/modules/_redefine.js"],"sourcesContent":["var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAW,CAAC;AACjC,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAS,CAAC;AAC7B,IAAIE,GAAG,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC3B,IAAIG,GAAG,GAAGH,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;AAClC,IAAII,SAAS,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AAChD,IAAIK,SAAS,GAAG,UAAU;AAC1B,IAAIC,GAAG,GAAG,CAAC,EAAE,GAAGF,SAAS,EAAEG,KAAK,CAACF,SAAS,CAAC;AAE3CL,OAAO,CAAC,SAAS,CAAC,CAACQ,aAAa,GAAG,UAAUC,EAAE,EAAE;EAC/C,OAAOL,SAAS,CAACM,IAAI,CAACD,EAAE,CAAC;AAC3B,CAAC;AAED,CAACE,MAAM,CAACC,OAAO,GAAG,UAAUC,CAAC,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;EAC7C,IAAIC,UAAU,GAAG,OAAOF,GAAG,IAAI,UAAU;EACzC,IAAIE,UAAU,EAAEf,GAAG,CAACa,GAAG,EAAE,MAAM,CAAC,IAAId,IAAI,CAACc,GAAG,EAAE,MAAM,EAAED,GAAG,CAAC;EAC1D,IAAID,CAAC,CAACC,GAAG,CAAC,KAAKC,GAAG,EAAE;EACpB,IAAIE,UAAU,EAAEf,GAAG,CAACa,GAAG,EAAEZ,GAAG,CAAC,IAAIF,IAAI,CAACc,GAAG,EAAEZ,GAAG,EAAEU,CAAC,CAACC,GAAG,CAAC,GAAG,EAAE,GAAGD,CAAC,CAACC,GAAG,CAAC,GAAGR,GAAG,CAACY,IAAI,CAACC,MAAM,CAACL,GAAG,CAAC,CAAC,CAAC;EAC7F,IAAID,CAAC,KAAKd,MAAM,EAAE;IAChBc,CAAC,CAACC,GAAG,CAAC,GAAGC,GAAG;EACd,CAAC,MAAM,IAAI,CAACC,IAAI,EAAE;IAChB,OAAOH,CAAC,CAACC,GAAG,CAAC;IACbb,IAAI,CAACY,CAAC,EAAEC,GAAG,EAAEC,GAAG,CAAC;EACnB,CAAC,MAAM,IAAIF,CAAC,CAACC,GAAG,CAAC,EAAE;IACjBD,CAAC,CAACC,GAAG,CAAC,GAAGC,GAAG;EACd,CAAC,MAAM;IACLd,IAAI,CAACY,CAAC,EAAEC,GAAG,EAAEC,GAAG,CAAC;EACnB;EACF;AACA,CAAC,EAAEK,QAAQ,CAACC,SAAS,EAAEhB,SAAS,EAAE,SAASiB,QAAQ,GAAG;EACpD,OAAO,OAAO,IAAI,IAAI,UAAU,IAAI,IAAI,CAACnB,GAAG,CAAC,IAAIC,SAAS,CAACM,IAAI,CAAC,IAAI,CAAC;AACvE,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}