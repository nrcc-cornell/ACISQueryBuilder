{"ast":null,"code":"import _defineProperty from\"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Typography from'@mui/material/Typography';import Grid from'@mui/material/Grid';import RenderTextField from'./RenderTextField';import DateSelection from'./DateSelection';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StnMetaInput=function StnMetaInput(props){var _useState=useState({sids:'',county:'',climdiv:'',cwa:'',basin:'',state:'',bbox:'',sdate:'',edate:'',date:'',meta:'',elems:'',output:'',network:''}),_useState2=_slicedToArray(_useState,2),metastate=_useState2[0],setMetastate=_useState2[1];var updateParam=function updateParam(update){setMetastate(_objectSpread(_objectSpread({},metastate),update));props.updateInputParams(update);};useEffect(function(){var newmeta={};Object.keys(metastate).forEach(function(key){if(props.input_params.hasOwnProperty(key)){newmeta=_objectSpread(_objectSpread({},newmeta),_defineProperty({},key,props.input_params[key]));}else{newmeta=_objectSpread(_objectSpread({},newmeta),_defineProperty({},key,''));}});setMetastate(newmeta);// eslint-disable-next-line\n},[props.input_params]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Required input\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"Enter at least one of the following:\"}),metastate.county.length===0&&metastate.climdiv.length===0&&metastate.cwa.length===0&&metastate.basin.length===0&&metastate.state.length===0&&metastate.bbox.length===0&&/*#__PURE__*/_jsx(RenderTextField,{id:\"sids\",fieldlabel:\"Station ID(s)\",value:metastate.sids,updateHelpFor:props.updateHelpFor,updateParam:updateParam}),metastate.sids.length===0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RenderTextField,{id:\"state\",fieldlabel:\"State\",value:metastate.state,updateHelpFor:props.updateHelpFor,updateParam:updateParam}),/*#__PURE__*/_jsx(RenderTextField,{id:\"county\",fieldlabel:\"County\",value:metastate.county,updateHelpFor:props.updateHelpFor,updateParam:updateParam}),/*#__PURE__*/_jsx(RenderTextField,{id:\"climdiv\",fieldlabel:\"Climate Division\",value:metastate.climdiv,updateHelpFor:props.updateHelpFor,updateParam:updateParam}),/*#__PURE__*/_jsx(RenderTextField,{id:\"cwa\",fieldlabel:\"CWA\",value:metastate.cwa,updateHelpFor:props.updateHelpFor,updateParam:updateParam}),/*#__PURE__*/_jsx(RenderTextField,{id:\"basin\",fieldlabel:\"Basin\",value:metastate.basin,updateHelpFor:props.updateHelpFor,updateParam:updateParam}),/*#__PURE__*/_jsx(RenderTextField,{id:\"bbox\",fieldlabel:\"Bounding box\",value:metastate.bbox,updateHelpFor:props.updateHelpFor,updateParam:updateParam})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Optional input\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"Enter any or all of the following:\"}),/*#__PURE__*/_jsx(RenderTextField,{id:\"meta\",fieldlabel:\"Meta options\",value:metastate.meta,options:{width:0.95},updateHelpFor:props.updateHelpFor,updateParam:updateParam}),(metastate.sids.length===0||metastate.meta.includes('valid_daterange'))&&/*#__PURE__*/_jsx(RenderTextField,{id:\"elems\",fieldlabel:\"Elements\",value:metastate.elems,options:{required:metastate.meta.includes('valid_daterange')?true:false},updateHelpFor:props.updateHelpFor,updateParam:updateParam}),/*#__PURE__*/_jsx(RenderTextField,{id:\"output\",fieldlabel:\"Output type\",value:metastate.output,options:{disabled:metastate.meta.length&&metastate.output==='json'?true:false},updateHelpFor:props.updateHelpFor,updateParam:updateParam}),metastate.sids.length===0&&/*#__PURE__*/_jsx(DateSelection,{sdate:metastate.sdate,edate:metastate.edate,date:metastate.date,updateHelpFor:props.updateHelpFor,updateParam:updateParam})]})]})});};export default StnMetaInput;","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","RenderTextField","DateSelection","StnMetaInput","props","sids","county","climdiv","cwa","basin","state","bbox","sdate","edate","date","meta","elems","output","network","metastate","setMetastate","updateParam","update","updateInputParams","newmeta","Object","keys","forEach","key","input_params","hasOwnProperty","length","updateHelpFor","width","includes","required","disabled"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/StnMetaInput.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Typography from '@mui/material/Typography'\nimport Grid from '@mui/material/Grid'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\n\nconst StnMetaInput = (props) => { \n  const [metastate, setMetastate] = useState({\n    sids: '',\n    county: '',\n    climdiv: '',\n    cwa: '',\n    basin: '',\n    state: '',\n    bbox: '',\n    sdate: '',\n    edate: '',\n    date: '',\n    meta: '',\n    elems: '',\n    output: '',\n    network: '',\n  })\n \n  const updateParam = (update) => {\n    setMetastate({...metastate, ...update})\n    props.updateInputParams(update)\n  }\n\n  useEffect(() => {\n    let newmeta = {}\n    Object.keys(metastate).forEach((key) => {\n      if (props.input_params.hasOwnProperty(key)) {\n        newmeta = ({...newmeta, ...{[key]: props.input_params[key]}})\n      } else {\n        newmeta = ({...newmeta, ...{[key]: ''}})\n      }\n    })\n    setMetastate(newmeta)\n    // eslint-disable-next-line\n  }, [props.input_params])\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Required input\n          </Typography>\n          <Typography variant=\"caption\">\n            Enter at least one of the following:\n          </Typography>\n          {metastate.county.length === 0 && \n            metastate.climdiv.length === 0 && \n            metastate.cwa.length === 0 && \n            metastate.basin.length === 0 && \n            metastate.state.length === 0 &&\n            metastate.bbox.length === 0 &&\n            <RenderTextField\n              id=\"sids\"\n              fieldlabel=\"Station ID(s)\"\n              value={metastate.sids}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {metastate.sids.length === 0 &&\n            <div>\n              <RenderTextField\n                id=\"state\"\n                fieldlabel=\"State\"\n                value={metastate.state}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateParam}\n              />\n              <RenderTextField\n                id=\"county\"\n                fieldlabel=\"County\"\n                value={metastate.county}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateParam}\n              />\n              <RenderTextField\n                id=\"climdiv\"\n                fieldlabel=\"Climate Division\"\n                value={metastate.climdiv}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateParam}\n              />\n              <RenderTextField\n                id=\"cwa\"\n                fieldlabel=\"CWA\"\n                value={metastate.cwa}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateParam}\n              />\n              <RenderTextField\n                id=\"basin\"\n                fieldlabel=\"Basin\"\n                value={metastate.basin}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateParam}\n              />\n              <RenderTextField\n                id=\"bbox\"\n                fieldlabel=\"Bounding box\"\n                value={metastate.bbox}\n                updateHelpFor={props.updateHelpFor}\n                updateParam={updateParam}\n              />\n            </div>\n          }\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional input\n          </Typography>\n          <Typography variant=\"caption\">\n            Enter any or all of the following:\n          </Typography>\n          <RenderTextField\n            id=\"meta\"\n            fieldlabel=\"Meta options\"\n            value={metastate.meta}\n            options={{width:0.95}}\n            updateHelpFor={props.updateHelpFor}\n            updateParam={updateParam}\n          />\n          {(metastate.sids.length === 0 || metastate.meta.includes('valid_daterange')) &&\n            <RenderTextField\n              id=\"elems\"\n              fieldlabel=\"Elements\"\n              value={metastate.elems}\n              options={{required: metastate.meta.includes('valid_daterange') ? true : false}}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          <RenderTextField\n            id=\"output\"\n            fieldlabel=\"Output type\"\n            value={metastate.output}\n            options={{disabled: metastate.meta.length && metastate.output === 'json' ? true : false}}\n            updateHelpFor={props.updateHelpFor}\n            updateParam={updateParam}\n          />\n\n          {metastate.sids.length === 0 &&\n            <DateSelection\n              sdate={metastate.sdate}\n              edate={metastate.edate}\n              date={metastate.date}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default StnMetaInput"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}