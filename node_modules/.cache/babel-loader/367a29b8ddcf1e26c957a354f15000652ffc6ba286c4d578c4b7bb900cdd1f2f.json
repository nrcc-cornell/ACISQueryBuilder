{"ast":null,"code":"import _defineProperty from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/GridData2Input.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport RenderTextField from './RenderTextField';\nimport DateSelection from './DateSelection';\nimport { buildElement, buildImage, checkHasInterval } from './Builders.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GridData2Input = function GridData2Input(props) {\n  _s();\n  var _useState = useState({\n      loc: '',\n      state: '',\n      county: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      meta: '',\n      output: '',\n      image: '',\n      elem: '',\n      elem_string: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      area_reduce: '',\n      elem_sdate: '',\n      elem_edate: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    datastate = _useState2[0],\n    setDatastate = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    notdly = _useState4[0],\n    setNotdly = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    hasInterval = _useState6[0],\n    setHasInterval = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hasElemsError = _useState8[0],\n    setHasElemsError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    mapcontrols = _useState10[0],\n    setMapcontrols = _useState10[1];\n\n  // images are currently disabled\n  var includeImageControls = false;\n  var datafields = ['loc', 'state', 'bbox', 'sdate', 'edate', 'date', 'grid', 'elems', 'meta', 'output', 'image'];\n  var imagefields = ['info_only', 'proj', 'overlays', 'interp', 'cmap', 'width', 'height', 'levels'];\n  var elementKeys = Object.keys(datastate).filter(function (item) {\n    return ![\"elem_string\"].concat(datafields, imagefields).includes(item);\n  });\n  var updateParam = function updateParam(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n    props.updateInputParams(update);\n  };\n  var updateElemBuild = function updateElemBuild(update) {\n    console.log(update);\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n  };\n  var addElement = function addElement(event) {\n    var action = event.currentTarget.id; //\"add\" or \"replace\"\n    var newElems = JSON.stringify(buildElement(elementKeys, datastate, action));\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      elems: newElems\n    }));\n    props.updateInputParams({\n      elems: newElems\n    });\n    props.updateHelpFor(\"\");\n  };\n  var clearElements = function clearElements() {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      elems: ''\n    }));\n    props.updateInputParams({\n      elems: \"\"\n    });\n    props.updateHelpFor(\"\");\n    setHasInterval(false);\n    setHasElemsError(false);\n  };\n  var updateElems = function updateElems(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n    try {\n      JSON.parse(update.elems);\n      setHasElemsError(false);\n      props.updateInputParams(update);\n    } catch (_unused) {\n      setHasElemsError(true);\n    }\n  };\n\n  // images are currently disabled (includeImageControls: false)\n  var updateImage = function updateImage(update) {\n    var updatedstate = _objectSpread(_objectSpread({}, datastate), update);\n    setDatastate(updatedstate);\n    var image = buildImage(imagefields, updatedstate);\n    props.updateInputParams({\n      image: image\n    });\n  };\n\n  // images are currently disabled (includeImageControls: false)\n  var updateOutput = function updateOutput(update) {\n    if (update.output === 'image') {\n      var image = buildImage(imagefields, datastate);\n      updateParam({\n        output: \"image\",\n        image: image\n      });\n      setMapcontrols(true);\n    } else {\n      updateParam(update);\n    }\n  };\n\n  // images are currently disabled (includeImageControls: false)\n  var handleMapControlClick = function handleMapControlClick(event) {\n    if (datastate.output !== 'image' || event.target.checked) {\n      var image = event.target.checked ? buildImage(imagefields, datastate) : \"\";\n      updateParam({\n        image: image\n      });\n      setMapcontrols(event.target.checked);\n    }\n  };\n  var updateHelpFor = function updateHelpFor(helpFor) {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta';\n    } else if (helpFor === 'output') {\n      helpFor = 'grid2_output';\n    } else if (helpFor === 'elems') {\n      helpFor = 'grid2_elems';\n    } else if (helpFor === 'name') {\n      helpFor = 'grid2_name';\n    } else if (helpFor === 'reduce') {\n      helpFor = 'grid2_reduce';\n    } else if (helpFor === 'grid') {\n      helpFor = 'grid2';\n    } else if (helpFor === 'bbox') {\n      helpFor = 'grid2_bbox';\n    } else if (helpFor === 'elem_sdate' || helpFor === 'elem_edate') {\n      helpFor = 'date';\n    }\n    props.updateHelpFor(helpFor);\n  };\n  var nestElement = function nestElement() {\n    var newElems = buildElement(elementKeys, datastate, \"add\");\n    var newElemString = JSON.stringify(newElems[0]);\n    console.log(newElems);\n    console.log(typeof newElems);\n    console.log(newElemString);\n    console.log(typeof newElemString);\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      elem: newElems[0],\n      elem_string: newElemString,\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      elem_sdate: '',\n      elem_edate: ''\n    }));\n  };\n\n  // Update local variable storage whenever input_params updates\n  useEffect(function () {\n    var newstate = {};\n    datafields.forEach(function (key) {\n      if (props.input_params.hasOwnProperty(key)) {\n        if (key === 'elems' && typeof props.input_params.elems === 'object') {\n          newstate = _objectSpread(_objectSpread({}, newstate), _defineProperty({}, key, JSON.stringify(props.input_params.elems)));\n          setHasInterval(checkHasInterval(_defineProperty({}, key, JSON.stringify(props.input_params.elems))));\n        } else {\n          newstate = _objectSpread(_objectSpread({}, newstate), _defineProperty({}, key, props.input_params[key]));\n        }\n      } else {\n        newstate = _objectSpread(_objectSpread({}, newstate), _defineProperty({}, key, ''));\n      }\n    });\n    setDatastate(_objectSpread(_objectSpread({}, datastate), newstate));\n    // eslint-disable-next-line\n  }, [props.input_params]);\n\n  // Check for change to notdly whenever duration or interval changes\n  useEffect(function () {\n    if (datastate.duration) {\n      setNotdly(datastate.duration.length === 3 && datastate.duration !== 'dly' || datastate.duration.length > 0 && !isNaN(Number(datastate.duration)) && (datastate.duration !== \"1\" || datastate.interval !== 'dly' && !(datastate.interval.includes('[') && datastate.interval.length === 7)));\n    }\n  }, [datastate.duration, datastate.interval]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Required input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \"Enter information for one of the grid selection types:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, _this), datastate.state.length === 0 && datastate.county.length === 0 && datastate.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"loc\",\n          fieldlabel: \"Point location\",\n          value: datastate.loc,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, _this), datastate.loc.length === 0 && datastate.county.length === 0 && datastate.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"state\",\n          fieldlabel: \"State\",\n          value: datastate.state,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, _this), datastate.loc.length === 0 && datastate.state.length === 0 && datastate.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"county\",\n          fieldlabel: \"County\",\n          value: datastate.county,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, _this), datastate.loc.length === 0 && datastate.county.length === 0 && datastate.state.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"bbox\",\n          fieldlabel: \"Bounding box\",\n          value: datastate.bbox,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(DateSelection, {\n          sdate: datastate.sdate,\n          edate: datastate.edate,\n          date: datastate.date,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"grid\",\n          fieldlabel: \"Grid id\",\n          value: datastate.grid,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"elems\",\n          fieldlabel: \"Elements\",\n          value: datastate.elems,\n          options: {\n            style: {\n              width: \"90%\"\n            },\n            multiline: true,\n            placeholder: \"Build using Element setup\",\n            error: hasElemsError,\n            helperText: hasElemsError ? \"Error in elements encoding\" : \"\"\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, _this), datastate.elems.includes(\"{\") && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            marginTop: \"0.5em\",\n            backgroundColor: \"lightcyan\"\n          },\n          onMouseDown: clearElements,\n          children: \"Clear elements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Optional elements builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, _this), datastate.elem_string.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"name\",\n          fieldlabel: \"Name\",\n          value: datastate.name,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, _this), datastate.elem_string.length > 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"elem\",\n          fieldlabel: \"Elem\",\n          value: datastate.elem_string,\n          options: {\n            style: {\n              width: \"90%\"\n            },\n            multiline: true\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, _this), datastate.name.includes(\"dd\") && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"base\",\n          fieldlabel: \"Base\",\n          value: datastate.base,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"interval\",\n          fieldlabel: \"Interval\",\n          value: datastate.interval,\n          options: {\n            disabled: hasInterval\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"duration\",\n          fieldlabel: \"Duration\",\n          value: datastate.duration,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, _this), datastate.duration === 'std' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"season_start\",\n          fieldlabel: \"Season start\",\n          value: datastate.season_start,\n          options: {\n            required: true\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, _this), notdly && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"reduce\",\n          fieldlabel: \"Reduce\",\n          value: datastate.reduce,\n          options: {\n            required: true\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, _this), notdly && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"maxmissing\",\n          fieldlabel: \"Max missing\",\n          value: datastate.maxmissing,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"elem_sdate\",\n          fieldlabel: \"Start date\",\n          value: datastate.elem_sdate,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"elem_edate\",\n          fieldlabel: \"End date\",\n          value: datastate.elem_edate,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, _this), datastate.loc.length === 0 && datastate.county.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"area_reduce\",\n          fieldlabel: \"Area reduction\",\n          value: datastate.area_reduce,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, _this), (datastate.name.length > 0 || datastate.elem_string.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"outlined\",\n            style: {\n              marginTop: \"0.5em\",\n              backgroundColor: \"lightcyan\"\n            },\n            onMouseDown: nestElement,\n            children: \"Nest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"add\",\n            size: \"small\",\n            variant: \"outlined\",\n            style: {\n              marginTop: \"0.5em\",\n              marginLeft: \"1em\",\n              backgroundColor: \"lightcyan\"\n            },\n            onMouseDown: addElement,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, _this), datastate.name.length > 0 && datastate.elems.includes(\"{\") && /*#__PURE__*/_jsxDEV(Button, {\n          id: \"replace\",\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            marginTop: \"0.5em\",\n            backgroundColor: \"lightcyan\"\n          },\n          onMouseDown: addElement,\n          children: \"Replace elements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Optional input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"meta\",\n          fieldlabel: \"Meta options\",\n          value: datastate.meta,\n          options: {\n            style: {\n              width: \"95%\"\n            }\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"output\",\n          fieldlabel: \"Output type\",\n          value: datastate.output,\n          options: {\n            disabled: datastate.meta.length && datastate.output === 'json' ? true : false\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, _this), datastate.includeImageControls && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              value: datastate.mapcontrols,\n              onChange: handleMapControlClick,\n              checked: datastate.mapcontrols,\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 19\n            }, _this),\n            label: \"Map settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, _this), datastate.mapcontrols && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [datastate.output !== 'image' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"info_only\",\n              fieldlabel: \"Info only\",\n              value: datastate.info_only,\n              options: {\n                style: {\n                  marginLeft: \"2em\"\n                }\n              },\n              updateHelpFor: updateHelpFor,\n              updateParam: updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"proj\",\n              fieldlabel: \"Proj\",\n              value: datastate.proj,\n              options: {\n                style: {\n                  marginLeft: \"2em\"\n                }\n              },\n              updateHelpFor: updateHelpFor,\n              updateParam: updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"overlays\",\n              fieldlabel: \"Overlays\",\n              value: datastate.overlays,\n              options: {\n                style: {\n                  marginLeft: \"2em\"\n                }\n              },\n              updateHelpFor: updateHelpFor,\n              updateParam: updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"interp\",\n              fieldlabel: \"Interp\",\n              value: datastate.interp,\n              options: {\n                style: {\n                  marginLeft: \"2em\"\n                }\n              },\n              updateHelpFor: updateHelpFor,\n              updateParam: updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"cmap\",\n              fieldlabel: \"Cmap\",\n              value: datastate.cmap,\n              options: {\n                style: {\n                  marginLeft: \"2em\"\n                }\n              },\n              updateHelpFor: updateHelpFor,\n              updateParam: updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 19\n            }, _this), datastate.height.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"width\",\n              fieldlabel: \"Width\",\n              value: datastate.width,\n              options: {\n                style: {\n                  marginLeft: \"2em\"\n                },\n                required: datastate.mapcontrols\n              },\n              updateHelpFor: updateHelpFor,\n              updateParam: updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 21\n            }, _this), datastate.width.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"height\",\n              fieldlabel: \"Height\",\n              value: datastate.height,\n              options: {\n                style: {\n                  marginLeft: \"2em\"\n                },\n                required: datastate.mapcontrols\n              },\n              updateHelpFor: updateHelpFor,\n              updateParam: updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"levels\",\n              fieldlabel: \"Levels\",\n              value: datastate.levels,\n              options: {\n                style: {\n                  marginLeft: \"2em\"\n                }\n              },\n              updateHelpFor: updateHelpFor,\n              updateParam: updateImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, _this);\n};\n_s(GridData2Input, \"biFH/gbG4I4jP8aa01pa42C0bIs=\");\n_c = GridData2Input;\nexport default GridData2Input;\nvar _c;\n$RefreshReg$(_c, \"GridData2Input\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","Button","FormControlLabel","Switch","RenderTextField","DateSelection","buildElement","buildImage","checkHasInterval","GridData2Input","props","loc","state","county","bbox","sdate","edate","date","grid","elems","meta","output","image","elem","elem_string","name","base","interval","duration","season_start","reduce","maxmissing","area_reduce","elem_sdate","elem_edate","info_only","proj","overlays","interp","cmap","width","height","levels","datastate","setDatastate","notdly","setNotdly","hasInterval","setHasInterval","hasElemsError","setHasElemsError","mapcontrols","setMapcontrols","includeImageControls","datafields","imagefields","elementKeys","Object","keys","filter","item","includes","updateParam","update","updateInputParams","updateElemBuild","console","log","addElement","event","action","currentTarget","id","newElems","JSON","stringify","updateHelpFor","clearElements","updateElems","parse","updateImage","updatedstate","updateOutput","handleMapControlClick","target","checked","helpFor","nestElement","newElemString","newstate","forEach","key","input_params","hasOwnProperty","length","isNaN","Number","style","multiline","placeholder","error","helperText","marginTop","backgroundColor","disabled","required","marginLeft"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/GridData2Input.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Typography from '@mui/material/Typography'\nimport Grid from '@mui/material/Grid'\nimport Button from '@mui/material/Button'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport { buildElement, buildImage, checkHasInterval } from './Builders.jsx'\n\nconst GridData2Input = (props) => { \n\n  const [ datastate, setDatastate ] = useState({\n    loc: '',\n    state: '',\n    county: '',\n    bbox: '',\n    sdate: '',\n    edate: '',\n    date: '',\n    grid: '',\n    elems: '',\n    meta: '',\n    output: '',\n    image: '',\n    elem: '',\n    elem_string: '',\n    name: '',\n    base: '',\n    interval: '',\n    duration: '',\n    season_start: '',\n    reduce: '',\n    maxmissing: '',\n    area_reduce: '',\n    elem_sdate: '',\n    elem_edate: '',\n    info_only: '',\n    proj: '',\n    overlays: '',\n    interp: '',\n    cmap: '',\n    width: '',\n    height: '',\n    levels: '',\n  })\n  \n  const [ notdly, setNotdly ] = useState(false)\n  const [ hasInterval, setHasInterval ] = useState(false)\n  const [ hasElemsError, setHasElemsError ] = useState(false)\n  const [ mapcontrols, setMapcontrols ] = useState(false)\n  \n  // images are currently disabled\n  const includeImageControls = false\n  \n  const datafields = ['loc','state','bbox','sdate','edate','date','grid','elems','meta','output','image']\n  const imagefields = ['info_only','proj','overlays','interp','cmap','width','height','levels']\n  const elementKeys = Object.keys(datastate).filter(\n    item => (![\"elem_string\", ...datafields, ...imagefields].includes(item)\n  ))  \n\n  const updateParam = (update) => {\n    setDatastate({...datastate, ...update})\n    props.updateInputParams(update)\n  }\n\n  const updateElemBuild = (update) => {\n    console.log(update)\n    setDatastate({...datastate, ...update})\n  }\n\n  const addElement = (event) => {\n    const action = event.currentTarget.id   //\"add\" or \"replace\"\n    const newElems = JSON.stringify(buildElement(elementKeys, datastate, action))\n    setDatastate({...datastate, ...{elems: newElems}})\n    props.updateInputParams({elems: newElems})\n    props.updateHelpFor(\"\")\n  }\n\n  const clearElements = () => {\n    setDatastate({...datastate, ...{elems: ''}})\n    props.updateInputParams({elems: \"\"})\n    props.updateHelpFor(\"\")\n    setHasInterval(false)\n    setHasElemsError(false)\n  }\n\n  const updateElems = (update) => {\n    setDatastate({...datastate, ...update})\n    try {\n      JSON.parse(update.elems)\n      setHasElemsError(false)\n      props.updateInputParams(update)\n    } catch {\n      setHasElemsError(true)\n    }\n  }\n\n  // images are currently disabled (includeImageControls: false)\n  const updateImage = (update) => {\n    const updatedstate = {...datastate, ...update}\n    setDatastate(updatedstate)\n    const image = buildImage(imagefields, updatedstate)\n    props.updateInputParams({image: image})\n  }\n\n  // images are currently disabled (includeImageControls: false)\n  const updateOutput = (update) => {\n    if (update.output === 'image') {\n      const image = buildImage(imagefields, datastate)\n      updateParam({output:\"image\", image:image})\n      setMapcontrols(true)\n    } else {\n      updateParam(update)\n    }\n  }\n\n  // images are currently disabled (includeImageControls: false)\n  const handleMapControlClick = event => {\n    if (datastate.output !== 'image' || event.target.checked) {\n      const image = event.target.checked ? buildImage(imagefields, datastate) : \"\"\n      updateParam({image: image})\n      setMapcontrols(event.target.checked)\n    }\n  }\n  \n  const updateHelpFor = (helpFor) => {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta'\n    } else if (helpFor === 'output') {\n      helpFor = 'grid2_output'\n    } else if (helpFor === 'elems') {\n      helpFor = 'grid2_elems'\n    } else if (helpFor === 'name') {\n      helpFor = 'grid2_name'\n    } else if (helpFor === 'reduce') { \n      helpFor = 'grid2_reduce'\n    } else if (helpFor === 'grid') {\n      helpFor = 'grid2'\n    } else if (helpFor === 'bbox') {\n      helpFor = 'grid2_bbox'\n    } else if (helpFor === 'elem_sdate' || helpFor === 'elem_edate') {\n      helpFor = 'date'\n    }\n    props.updateHelpFor(helpFor)\n  }\n\n  const nestElement = () => {\n    const newElems = buildElement(elementKeys, datastate, \"add\")\n    const newElemString = JSON.stringify(newElems[0])\n    console.log(newElems)\n    console.log(typeof newElems)\n    console.log(newElemString)\n    console.log(typeof newElemString)\n    setDatastate({...datastate, ...{\n      elem: newElems[0],\n      elem_string: newElemString,\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      elem_sdate: '',\n      elem_edate: '',\n    }})\n  }\n\n  // Update local variable storage whenever input_params updates\n  useEffect(() => {\n    let newstate= {}\n    datafields.forEach((key) => {\n      if (props.input_params.hasOwnProperty(key)) {\n        if (key === 'elems' && typeof props.input_params.elems === 'object') {\n          newstate= ({...newstate, ...{[key]: JSON.stringify(props.input_params.elems)}})\n          setHasInterval(checkHasInterval({[key]: JSON.stringify(props.input_params.elems)}))\n        } else {\n          newstate= ({...newstate, ...{[key]: props.input_params[key]}})\n        }\n      } else {\n        newstate = ({...newstate, ...{[key]: ''}})\n      }\n    })\n    setDatastate({...datastate, ...newstate})\n    // eslint-disable-next-line\n  }, [props.input_params])\n\n  // Check for change to notdly whenever duration or interval changes\n  useEffect(() => {\n    if (datastate.duration) {\n      setNotdly((datastate.duration.length === 3 && datastate.duration !== 'dly') || \n        (datastate.duration.length > 0 && !isNaN(Number(datastate.duration)) && \n        (datastate.duration !== \"1\" || (datastate.interval !== 'dly' && !(datastate.interval.includes('[') && datastate.interval.length === 7)))))\n    }\n  }, [datastate.duration, datastate.interval])\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Required input\n          </Typography>\n          <Typography variant=\"caption\">\n            Enter information for one of the grid selection types:\n          </Typography>\n          {datastate.state.length === 0 && \n            datastate.county.length === 0 && \n            datastate.bbox.length === 0 && \n            <RenderTextField\n              id=\"loc\"\n              fieldlabel=\"Point location\"\n              value={datastate.loc}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {datastate.loc.length === 0 && \n            datastate.county.length === 0 && \n            datastate.bbox.length === 0 && \n            <RenderTextField\n              id=\"state\"\n              fieldlabel=\"State\"\n              value={datastate.state}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {datastate.loc.length === 0 &&\n            datastate.state.length === 0 && \n            datastate.bbox.length === 0 && \n            <RenderTextField\n              id=\"county\"\n              fieldlabel=\"County\"\n              value={datastate.county}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {datastate.loc.length === 0 && \n            datastate.county.length === 0 && \n            datastate.state.length === 0 && \n            <RenderTextField\n              id=\"bbox\"\n              fieldlabel=\"Bounding box\"\n              value={datastate.bbox}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          <DateSelection\n            sdate={datastate.sdate}\n            edate={datastate.edate}\n            date={datastate.date}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"grid\"\n            fieldlabel=\"Grid id\"\n            value={datastate.grid}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"elems\"\n            fieldlabel=\"Elements\"\n            value={datastate.elems}\n            options={{\n              style: {width:\"90%\"}, \n              multiline: true, \n              placeholder: \"Build using Element setup\",\n              error: hasElemsError,\n              helperText: hasElemsError ? \"Error in elements encoding\" : \"\",\n            }}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElems}\n          />\n          {datastate.elems.includes(\"{\") &&\n            <Button \n              size=\"small\"\n              variant=\"outlined\"\n              style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n              onMouseDown={clearElements}\n            >\n              Clear elements\n            </Button>\n          }\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional elements builder\n          </Typography>\n          {datastate.elem_string.length === 0 &&\n            <RenderTextField\n              id=\"name\"\n              fieldlabel=\"Name\"\n              value={datastate.name}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          {datastate.elem_string.length > 0 &&\n            <RenderTextField\n              id=\"elem\"\n              fieldlabel=\"Elem\"\n              value={datastate.elem_string}\n              options={{style: {width:\"90%\"}, multiline: true}}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          {datastate.name.includes(\"dd\") &&\n            <RenderTextField\n              id=\"base\"\n              fieldlabel=\"Base\"\n              value={datastate.base}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"interval\"\n            fieldlabel=\"Interval\"\n            value={datastate.interval}\n            options={{disabled:hasInterval}}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          <RenderTextField\n            id=\"duration\"\n            fieldlabel=\"Duration\"\n            value={datastate.duration}\n\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {datastate.duration === 'std' &&\n            <RenderTextField\n              id=\"season_start\"\n              fieldlabel=\"Season start\"\n              value={datastate.season_start}\n              options={{required:true}}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          {notdly &&\n            <RenderTextField\n              id=\"reduce\"\n              fieldlabel=\"Reduce\"\n              value={datastate.reduce}\n              options={{required:true}}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          {notdly &&\n            <RenderTextField\n              id=\"maxmissing\"\n              fieldlabel=\"Max missing\"\n              value={datastate.maxmissing}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"elem_sdate\"\n            fieldlabel=\"Start date\"\n            value={datastate.elem_sdate}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          <RenderTextField\n            id=\"elem_edate\"\n            fieldlabel=\"End date\"\n            value={datastate.elem_edate}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {(datastate.loc.length === 0 && datastate.county.length === 0) && \n            <RenderTextField\n              id=\"area_reduce\"\n              fieldlabel=\"Area reduction\"\n              value={datastate.area_reduce}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n\n          {(datastate.name.length > 0 || datastate.elem_string.length > 0) &&\n            <div>\n              <Button \n                size=\"small\"\n                variant=\"outlined\"\n                style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                onMouseDown={nestElement}\n              >\n                Nest\n              </Button>\n              <Button \n                id=\"add\"\n                size=\"small\"\n                variant=\"outlined\"\n                style={{marginTop:\"0.5em\", marginLeft:\"1em\", backgroundColor:\"lightcyan\"}}\n                onMouseDown={addElement}\n              >\n                Add\n              </Button>\n            </div>\n          }\n          {datastate.name.length > 0 && datastate.elems.includes(\"{\") &&\n            <Button \n              id=\"replace\"\n              size=\"small\"\n              variant=\"outlined\"\n              style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n              onMouseDown={addElement}\n            >\n              Replace elements\n            </Button>\n          }\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional input\n          </Typography>\n          <RenderTextField\n            id=\"meta\"\n            fieldlabel=\"Meta options\"\n            value={datastate.meta}\n            options={{style: {width:\"95%\"}}}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"output\"\n            fieldlabel=\"Output type\"\n            value={datastate.output}\n            options={{disabled: datastate.meta.length && datastate.output === 'json' ? true : false}}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateParam}\n          />\n          {datastate.includeImageControls &&\n            <div>\n              <FormControlLabel\n                control={\n                  <Switch\n                    value={datastate.mapcontrols}\n                    onChange={handleMapControlClick}\n                    checked={datastate.mapcontrols}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Map settings\"\n              />\n              {datastate.mapcontrols &&\n                <div>\n                  {datastate.output !== 'image' &&\n                    <RenderTextField\n                      id=\"info_only\"\n                      fieldlabel=\"Info only\"\n                      value={datastate.info_only}\n                      options={{style: {marginLeft:\"2em\"}}}\n                      updateHelpFor={updateHelpFor}\n                      updateParam={updateImage}\n                    />\n                  }\n                  <RenderTextField\n                    id=\"proj\"\n                    fieldlabel=\"Proj\"\n                    value={datastate.proj}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={updateHelpFor}\n                    updateParam={updateImage}\n                  />\n                  <RenderTextField\n                    id=\"overlays\"\n                    fieldlabel=\"Overlays\"\n                    value={datastate.overlays}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={updateHelpFor}\n                    updateParam={updateImage}\n                  />\n                  <RenderTextField\n                    id=\"interp\"\n                    fieldlabel=\"Interp\"\n                    value={datastate.interp}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={updateHelpFor}\n                    updateParam={updateImage}\n                  />\n                  <RenderTextField\n                    id=\"cmap\"\n                    fieldlabel=\"Cmap\"\n                    value={datastate.cmap}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={updateHelpFor}\n                    updateParam={updateImage}\n                  />\n                  {datastate.height.length === 0 &&\n                    <RenderTextField\n                      id=\"width\"\n                      fieldlabel=\"Width\"\n                      value={datastate.width}\n                      options={{style: {marginLeft:\"2em\"}, required: datastate.mapcontrols}}\n                      updateHelpFor={updateHelpFor}\n                      updateParam={updateImage}\n                    />\n                  }\n                  {datastate.width.length === 0 &&\n                    <RenderTextField\n                      id=\"height\"\n                      fieldlabel=\"Height\"\n                      value={datastate.height}\n                      options={{style: {marginLeft:\"2em\"}, required: datastate.mapcontrols}}\n                      updateHelpFor={updateHelpFor}\n                      updateParam={updateImage}\n                    />\n                  }\n                  <RenderTextField\n                    id=\"levels\"\n                    fieldlabel=\"Levels\"\n                    value={datastate.levels}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={updateHelpFor}\n                    updateParam={updateImage}\n                  />\n                </div>\n              }\n            </div>\n          }\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default GridData2Input"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}