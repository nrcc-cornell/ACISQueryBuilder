{"ast":null,"code":"import _toConsumableArray from\"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export function buildElement(elementKeys,elementValues){var action=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"add\";var elem={};var subelems=[];var mustBeNumber=['duration','vX','vN','prec','base'];elementKeys.forEach(function(item){if(elementValues[item]!==''){if(mustBeNumber.includes(item)&&!isNaN(Number(elementValues[item]))){elem[item]=Number(elementValues[item]);}else{elem[item]=elementValues[item];}}});// if interval is a list, make it an array (not a string)\nif(elem.hasOwnProperty('interval')&&(elem.interval.includes(\",\")||elem.interval.includes(\"[\"))){elem.interval=elem.interval.replace(/[[\\]]/g,\"\").split(\",\").map(function(item){return Number(item);});}// figure out whether or not selection is for single day\nvar notdly=typeof elem.duration===\"string\"&&elem.duration!=='dly'||typeof elem.duration==='number'&&(elem.duration!==1||elem.interval!=='dly'&&!(Array.isArray(elem.interval)&&elem.interval.length===3));// can only have add for dly/dly; can only have reduce and max_missing if not dly/dly\nif(notdly){delete elem.add;}else{delete elem.reduce;delete elem.maxmissing;}// can only have groupby if interval is not yly\nif(elem.hasOwnProperty('interval')&&(elem.interval==='yly'||Array.isArray(elem.interval)&&elem.interval.length===1)){delete elem.groupby;}// can only have base for degree days\nif(elem.hasOwnProperty('name')&&!elem.name.includes(\"dd\")){delete elem.base;}// can only have season_start for std\nif(elem.hasOwnProperty('duration')&&elem.duration!=='std'){delete elem.season_start;}// if season_start is a list, make it an array (not a string)\nif(elem.hasOwnProperty('season_start')&&(elem.season_start.includes(\",\")||elem.season_start.includes(\"[\"))){elem.season_start=elem.season_start.replace(/[[\\]]/g,\"\").split(\",\").map(function(item){return Number(item);});}// convert name of element sdate and edate\nif(elem.hasOwnProperty('elem_sdate')){elem.sdate=elem.elem_sdate;delete elem.elem_sdate;}if(elem.hasOwnProperty('elem_edate')){elem.edate=elem.elem_edate;delete elem.elem_edate;}// build reduce object, if necessary\nsubelems=elementKeys.filter(function(item){return item.includes('reduce_');});if(elem.hasOwnProperty('reduce')){// can only have reduce_run_maxmissing if reduce is 'run'\nif(!elem.reduce.includes('run')){delete elem.reduce_run_maxmissing;}var newObject={};subelems.forEach(function(item){if(elem.hasOwnProperty(item)){newObject[item.replace('reduce_','')]=elem[item];delete elem[item];}});if(Object.keys(newObject).length>0){elem.reduce=_objectSpread(_objectSpread({},newObject),{},{reduce:elem.reduce});}}else{subelems.forEach(function(item){if(elem.hasOwnProperty(item)){delete elem[item];}});}// build smry object, if necessary\nsubelems=elementKeys.filter(function(item){return item.includes('smry_')&&item!=='smry_only';});if(elem.hasOwnProperty('smry')){// can only have smry_run_maxmissing if smry is 'run'\nif(!elem.smry.includes('run')){delete elem.smry_run_maxmissing;}var _newObject={};subelems.forEach(function(item){if(elem.hasOwnProperty(item)){_newObject[item.replace('smry_','')]=elem[item];delete elem[item];}});if(Object.keys(_newObject).length>0){elem.smry=_objectSpread(_objectSpread({},_newObject),{},{reduce:elem.smry});}}else{subelems.forEach(function(item){if(elem.hasOwnProperty(item)){delete elem[item];}});delete elem.smry_only;}return elementValues.elems.includes(\"{\")&&action!==\"replace\"?[].concat(_toConsumableArray(JSON.parse(elementValues.elems)),[elem]):[elem];}export function buildImage(imageKeys,imageValues){var image={};imageKeys.forEach(function(item){if(imageValues[item]!==''){// width and height must be an integer (not a string)\nimage[item]=item==='width'||item==='height'?Number(imageValues[item]):imageValues[item];}});// levels must be an array (not a string)\nif(image.hasOwnProperty('levels')){image.levels=image.levels.replace(/[[\\]]/g,'').split(\",\").map(function(item){return Number(item);});}// overlays must be an array if more than one are specified\nif(image.hasOwnProperty('overlays')&&image.overlays.includes(\",\")){image.overlays=image.overlays.replace(/[[\\]]/g,'').split(\",\").map(function(item){return item.replace(/[\"']/g,'');});}return image;}export function buildExplanation(params){var explanation=\"\";var elems=null;var monthName=['January','February','March','April','May','June','July','August','September','October','November','December'];var formatDate=function formatDate(date,rlen){var ymd=[];if(date.includes(\"-\")){ymd=date.split(\"-\").map(function(item){return Number(item);});}else if(rlen===\"day\"&&date.length===8||rlen===\"month\"&&date.length===6||rlen===\"year\"&&date.length===4){ymd=[Number(date.substr(0,4)),Number(date.substr(4,2)),Number(date.substr(6,2))];}else if(date==='por'){return'period of record';}else{return null;}if(rlen===\"year\"){return ymd[0];}else if(rlen===\"month\"){return monthName[ymd[1]-1]+\" \"+ymd[0];}else if(rlen===\"day\"){return monthName[ymd[1]-1]+\" \"+ymd[2]+\", \"+ymd[0];}return null;};var badintervalMessage=\"Not a valid interval. Clear this element and add again with a valid interval.\";var baddurationlMessage=\"Not a valid duration. Clear this element and add again with a valid duration.\";var noreduceMessage=\"You need to specify a reduction for this request. Clear this element and add again with a reduction.\";var noseasonstartMessage=\"You need to specify a 'season start' for a duration of 'std'. Clear this element and add again with a season start.\";var baddateMessage=\"Invalid date specifications.\";var durationText={mtd:\"month-to-date\",std:\"season-to-date\",ytd:\"year-to-date\"};var ymd=['year','month','day'];if(!params.hasOwnProperty('elems')){return null;}//process last element\ntry{elems=typeof params.elems===\"string\"?JSON.parse(params.elems).slice(-1)[0]:params.elems.slice(-1)[0];}catch(_unused){return null;}// interpret the interval portion of the request\nif(!elems.hasOwnProperty('interval')){return null;}var interval=elems.interval;if(typeof interval==='string'){if(interval==='dly'){interval=[0,0,1];}else if(interval==='mly'){interval=[0,1];}else if(interval==='yly'){interval=[1];}else{return badintervalMessage;}}var intcnt=Math.max.apply(Math,_toConsumableArray(interval));var intpos=interval.indexOf(intcnt);if(interval.length<1||interval.length>3||intpos<0){return badintervalMessage;}var intfreq=ymd[interval.length-1];var inttype=ymd[intpos];// preocess duration/reduce portion\nvar duration=elems.hasOwnProperty('duration')?elems.duration:1;var reduce=elems.hasOwnProperty('reduce')?typeof elems.reduce==='object'?elems.reduce.reduce:elems.reduce:null;if(duration==='dly'||duration==='mly'||duration==='yly'){duration=1;}else if(!isNaN(Number(duration))){duration=Number(duration);}if((duration!==1||intfreq!=='day')&&!reduce){return noreduceMessage;}else if(typeof duration==='string'&&!durationText.hasOwnProperty(duration)){return baddurationlMessage;}else if(duration==='std'&&!elems.hasOwnProperty(\"season_start\")){return noseasonstartMessage;}else if(duration!==1||intfreq!=='day'){var durphrase=typeof duration==='string'?durationText[duration]:duration+\"-\"+intfreq;explanation+=\"Each data value returned for this query element will be a \"+durphrase+\" \"+reduce;// include season_start when appropriate\nif(duration==='std'){if(typeof elems.season_start===\"string\"){elems.season_start=elems.season_start.split(\"-\").map(function(item){return Number(item);});}if(elems.season_start.length===1){elems.season_start.push(1);}var season_start=monthName[elems.season_start[0]-1]+\" \"+elems.season_start[1];explanation+=\" since \"+season_start;}explanation+=\". \";}var intphrase=intcnt===1?inttype:intcnt+\" \"+inttype+\"s\";explanation+=\"Results will consist of one value every \"+intphrase;// date portion\nif(params.hasOwnProperty('sdate')&&params.hasOwnProperty('edate')||params.hasOwnProperty('date')||elems.hasOwnProperty('sdate')&&elems.hasOwnProperty('edate')){var sdate=elems.sdate||params.sdate||params.date;var edate=elems.edate||params.edate||null;var sdatestr=formatDate(sdate,intfreq);var edatestr=edate?formatDate(edate,intfreq):'na';if(!sdatestr||!edatestr){return baddateMessage;}if(intfreq==='day'&&intpos<2){var sdparts=sdatestr.split(\", \");var edparts=edatestr.split(\", \");edatestr=sdparts[0]+\", \"+edparts[1];}else if(intfreq==='month'&&intpos<1){var _sdparts=sdatestr.split(\" \");var _edparts=edatestr.split(\" \");edatestr=_sdparts[0]+\" \"+_edparts[1];}var datephrase=elems.hasOwnProperty('reduce')?\"the periods ending \":\"\";explanation+=\" for \"+datephrase+sdatestr+(edatestr!=='na'?\" through \"+edatestr:\"\");}explanation+=\". \";return explanation;}export function checkHasInterval(update){if(update.elems.length>0){try{var updateElems=JSON.parse(update.elems);var cond=false;updateElems.forEach(function(ue){if(ue.hasOwnProperty('interval')&&ue.interval.length){cond=true;}});return cond;}catch(_unused2){console.log('Error parsing elems update: '+update.elems);return false;}}else{return false;}}export function basicFormat(results_json){var results_string=\"\";var dataimage=\"\";Object.keys(results_json).forEach(function(key){if(key==='data'&&results_json[key].includes(\"image/png;base64\")){dataimage=results_json[key];}else if(Array.isArray(results_json[key])){results_string+=key+\":\\n\";results_json[key].forEach(function(item){results_string+=\" \"+JSON.stringify(item)+\"\\n\";});}else{results_string+=key+\":\\n\";results_string+=\" \"+JSON.stringify(results_json[key])+\"\\n\";}});return{results_string:results_string,dataimage:dataimage};}","map":{"version":3,"names":["buildElement","elementKeys","elementValues","action","elem","subelems","mustBeNumber","forEach","item","includes","isNaN","Number","hasOwnProperty","interval","replace","split","map","notdly","duration","Array","isArray","length","add","reduce","maxmissing","groupby","name","base","season_start","sdate","elem_sdate","edate","elem_edate","filter","reduce_run_maxmissing","newObject","Object","keys","smry","smry_run_maxmissing","smry_only","elems","JSON","parse","buildImage","imageKeys","imageValues","image","levels","overlays","buildExplanation","params","explanation","monthName","formatDate","date","rlen","ymd","substr","badintervalMessage","baddurationlMessage","noreduceMessage","noseasonstartMessage","baddateMessage","durationText","mtd","std","ytd","slice","intcnt","Math","max","intpos","indexOf","intfreq","inttype","durphrase","push","intphrase","sdatestr","edatestr","sdparts","edparts","datephrase","checkHasInterval","update","updateElems","cond","ue","console","log","basicFormat","results_json","results_string","dataimage","key","stringify"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/builders.js"],"sourcesContent":["export function buildElement(elementKeys, elementValues, action=\"add\") {\n  let elem = {}\n  let subelems = []\n  const mustBeNumber = ['duration','vX','vN','prec','base']\n  elementKeys.forEach((item) => {\n    if (elementValues[item] !== '') {\n      if (mustBeNumber.includes(item) && !isNaN(Number(elementValues[item]))) {\n        elem[item] = Number(elementValues[item])\n      } else {\n        elem[item] = elementValues[item]\n      }\n    }\n  })\n  // if interval is a list, make it an array (not a string)\n  if (elem.hasOwnProperty('interval') && (elem.interval.includes(\",\") || elem.interval.includes(\"[\"))) {\n    elem.interval = elem.interval.replace(/[[\\]]/g,\"\").split(\",\").map((item) => {return Number(item)})\n  }\n  // figure out whether or not selection is for single day\n  const notdly = (typeof elem.duration === \"string\" && elem.duration !== 'dly') || \n    (typeof elem.duration === 'number' && (elem.duration !== 1 || (elem.interval !== 'dly' && !(Array.isArray(elem.interval) && elem.interval.length === 3))))\n  // can only have add for dly/dly; can only have reduce and max_missing if not dly/dly\n  if (notdly) {\n    delete elem.add\n  } else {\n    delete elem.reduce\n    delete elem.maxmissing\n  }\n  // can only have groupby if interval is not yly\n  if (elem.hasOwnProperty('interval') && (elem.interval === 'yly' || (Array.isArray(elem.interval) && elem.interval.length === 1))) {\n    delete elem.groupby\n  }\n  // can only have base for degree days\n  if (elem.hasOwnProperty('name') && !elem.name.includes(\"dd\")) {\n    delete elem.base\n  }\n  // can only have season_start for std\n  if (elem.hasOwnProperty('duration') && elem.duration !== 'std') {\n    delete elem.season_start\n  }\n  // if season_start is a list, make it an array (not a string)\n  if (elem.hasOwnProperty('season_start') && (elem.season_start.includes(\",\") || elem.season_start.includes(\"[\"))) {\n    elem.season_start = elem.season_start.replace(/[[\\]]/g,\"\").split(\",\").map((item) => {return Number(item)})\n  }\n  // convert name of element sdate and edate\n  if (elem.hasOwnProperty('elem_sdate')) {\n    elem.sdate = elem.elem_sdate\n    delete elem.elem_sdate\n  }\n  if (elem.hasOwnProperty('elem_edate')) {\n    elem.edate = elem.elem_edate\n    delete elem.elem_edate\n  }\n  // build reduce object, if necessary\n  subelems = elementKeys.filter(item => item.includes('reduce_'))\n  if (elem.hasOwnProperty('reduce')) {\n    // can only have reduce_run_maxmissing if reduce is 'run'\n    if (!elem.reduce.includes('run')) {\n      delete elem.reduce_run_maxmissing\n    }\n    let newObject = {}\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n        newObject[item.replace('reduce_','')] = elem[item]\n        delete elem[item]\n      }\n    })\n    if (Object.keys(newObject).length > 0) {\n      elem.reduce = {...newObject, reduce:elem.reduce}\n    }\n  } else {\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n          delete elem[item]\n      }\n    })\n  }\n  // build smry object, if necessary\n  subelems = elementKeys.filter(item => item.includes('smry_') && item !== 'smry_only')\n  if (elem.hasOwnProperty('smry')) {\n    // can only have smry_run_maxmissing if smry is 'run'\n    if (!elem.smry.includes('run')) {\n      delete elem.smry_run_maxmissing\n    }\n    let newObject = {}\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n        newObject[item.replace('smry_','')] = elem[item]\n        delete elem[item]\n      }\n    })\n    if (Object.keys(newObject).length > 0) {\n      elem.smry = {...newObject, reduce:elem.smry}\n    }\n  } else {\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n        delete elem[item]\n      }\n    })\n    delete elem.smry_only\n  }\n  return elementValues.elems.includes(\"{\") && action !== \"replace\"  ? [...JSON.parse(elementValues.elems), elem] : [elem]\n}\n\nexport function buildImage(imageKeys, imageValues) {\n  let image = {}\n  imageKeys.forEach((item) => {\n    if (imageValues[item] !== '') {\n      // width and height must be an integer (not a string)\n      image[item] = (item === 'width' || item === 'height') ? Number(imageValues[item]) : imageValues[item]\n    }\n  })\n  // levels must be an array (not a string)\n  if (image.hasOwnProperty('levels')) {\n    image.levels = image.levels.replace(/[[\\]]/g,'').split(\",\").map((item) => {return Number(item)})\n  }\n  // overlays must be an array if more than one are specified\n  if (image.hasOwnProperty('overlays') && image.overlays.includes(\",\")) {\n    image.overlays = image.overlays.replace(/[[\\]]/g,'').split(\",\").map((item) => {return item.replace(/[\"']/g,'')})\n  }\n  return image\n}\n\nexport function buildExplanation(params) {\n  let explanation = \"\"\n  let elems = null\n  const monthName = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  const formatDate = (date, rlen) => {\n    let ymd = []\n    if (date.includes(\"-\")) {\n      ymd = date.split(\"-\").map(item => {return Number(item)})\n    } else if ((rlen === \"day\" && date.length === 8) || (rlen === \"month\" && date.length === 6) || (rlen === \"year\" && date.length === 4)) {\n      ymd = [Number(date.substr(0,4)), Number(date.substr(4,2)), Number(date.substr(6,2))]\n    } else if (date === 'por') {\n      return 'period of record'\n    } else {\n      return null\n    }\n    if (rlen === \"year\") {\n      return ymd[0]\n    } else if (rlen === \"month\") {\n      return monthName[ymd[1]-1] + \" \" + ymd[0]\n    } else if (rlen === \"day\") {\n      return monthName[ymd[1]-1] + \" \" + ymd[2] + \", \" + ymd[0]\n    }\n    return null\n  }\n  const badintervalMessage = \"Not a valid interval. Clear this element and add again with a valid interval.\"\n  const baddurationlMessage = \"Not a valid duration. Clear this element and add again with a valid duration.\"\n  const noreduceMessage = \"You need to specify a reduction for this request. Clear this element and add again with a reduction.\"\n  const noseasonstartMessage = \"You need to specify a 'season start' for a duration of 'std'. Clear this element and add again with a season start.\"\n  const baddateMessage = \"Invalid date specifications.\"\n   const durationText = {mtd:\"month-to-date\", std:\"season-to-date\", ytd:\"year-to-date\"}\n  const ymd = ['year','month','day']\n  if (!params.hasOwnProperty('elems')) {\n    return null\n  }\n  //process last element\n  try {\n    elems = typeof params.elems === \"string\" ? JSON.parse(params.elems).slice(-1)[0]: params.elems.slice(-1)[0]\n  } catch {\n    return null\n  }\n  // interpret the interval portion of the request\n  if (!elems.hasOwnProperty('interval')) {\n    return null\n  }\n  let interval = elems.interval\n  if (typeof interval === 'string') {\n    if (interval === 'dly') {\n      interval = [0,0,1]\n    } else if (interval === 'mly') {\n      interval = [0,1]\n    } else if (interval === 'yly') {\n      interval = [1]\n    } else {\n      return badintervalMessage\n    }\n  }\n  const intcnt = Math.max(...interval)\n  const intpos = interval.indexOf(intcnt)\n  if (interval.length < 1 || interval.length > 3 || intpos < 0) {\n    return badintervalMessage\n  }\n  const intfreq = ymd[interval.length-1]\n  const inttype = ymd[intpos]\n  \n  // preocess duration/reduce portion\n  let duration = elems.hasOwnProperty('duration') ? elems.duration : 1\n  const reduce = elems.hasOwnProperty('reduce') ? (typeof elems.reduce === 'object' ? elems.reduce.reduce : elems.reduce) : null\n  if (duration === 'dly' || duration === 'mly' || duration === 'yly') {\n    duration = 1\n  } else if (!isNaN(Number(duration))) {\n    duration = Number(duration)\n  }\n  if ((duration !== 1 || intfreq !== 'day') && !reduce) {\n    return noreduceMessage\n  } else if (typeof duration === 'string' && !durationText.hasOwnProperty(duration)) {\n    return baddurationlMessage\n  } else if (duration === 'std' && !elems.hasOwnProperty(\"season_start\")) {\n    return noseasonstartMessage\n  } else if (duration !== 1 || intfreq !== 'day') {\n    const durphrase = typeof duration === 'string' ? durationText[duration] : (duration + \"-\" + intfreq)\n    explanation += \"Each data value returned for this query element will be a \" + durphrase + \" \" + reduce\n    // include season_start when appropriate\n    if (duration === 'std') {\n      if (typeof elems.season_start === \"string\") {\n        elems.season_start = elems.season_start.split(\"-\").map(item => { return Number(item) })\n      }\n      if (elems.season_start.length === 1) {\n        elems.season_start.push(1)\n      }\n      const season_start = monthName[elems.season_start[0]-1] + \" \" + elems.season_start[1]\n      explanation += \" since \" + season_start\n    }\n    explanation += \". \"\n  }\n  const intphrase = intcnt === 1 ? inttype : (intcnt + \" \" + inttype + \"s\")\n  explanation += \"Results will consist of one value every \" + intphrase\n  // date portion\n  if ((params.hasOwnProperty('sdate') && params.hasOwnProperty('edate')) || \n      params.hasOwnProperty('date') ||\n      (elems.hasOwnProperty('sdate') && elems.hasOwnProperty('edate'))) {\n    const sdate = elems.sdate || params.sdate || params.date\n    const edate = elems.edate || params.edate || null\n    let sdatestr = formatDate(sdate, intfreq)\n    let edatestr = edate ? formatDate(edate, intfreq) : 'na'\n    if (!sdatestr || !edatestr) {\n      return baddateMessage\n    }\n    if (intfreq === 'day' && intpos < 2) {\n      const sdparts = sdatestr.split(\", \")\n      const edparts = edatestr.split(\", \")\n      edatestr = sdparts[0] + \", \" + edparts[1]\n    } else if (intfreq === 'month' && intpos < 1) {\n      const sdparts = sdatestr.split(\" \")\n      const edparts = edatestr.split(\" \")\n      edatestr = sdparts[0] + \" \" + edparts[1]\n    }\n    const datephrase = elems.hasOwnProperty('reduce') ? \"the periods ending \" : \"\"\n    explanation += \" for \" + datephrase + sdatestr + (edatestr !== 'na' ? \" through \" + edatestr : \"\")\n  }\n  explanation += \". \" \n    \n  return explanation\n}\n\nexport function checkHasInterval(update) {\n  if (update.elems.length > 0) {\n    try {\n      let updateElems = JSON.parse(update.elems)\n      let cond = false\n      updateElems.forEach((ue) => {\n        if (ue.hasOwnProperty('interval') && ue.interval.length) {\n          cond = true\n        }\n      })\n      return cond\n    } catch {\n      console.log('Error parsing elems update: ' + update.elems)\n      return false\n    }\n  } else {\n    return false\n  }\n}\n\nexport function basicFormat(results_json) {\n  let results_string = \"\"\n  let dataimage = \"\"\n  Object.keys(results_json).forEach(key => {\n    if (key === 'data' && results_json[key].includes(\"image/png;base64\")) {\n      dataimage = results_json[key]\n    } else if (Array.isArray(results_json[key])) {\n      results_string += key + \":\\n\"\n      results_json[key].forEach(item => {\n        results_string += \" \" + JSON.stringify(item) + \"\\n\"\n      }) \n    } else {\n      results_string += key + \":\\n\"\n      results_string += \" \" + JSON.stringify(results_json[key]) + \"\\n\"\n    }\n  })\n  return {results_string: results_string, dataimage: dataimage}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}