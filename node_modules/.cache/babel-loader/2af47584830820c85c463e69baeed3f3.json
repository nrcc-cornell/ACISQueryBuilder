{"ast":null,"code":"import _defineProperty from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder2/src/GridData2Input.jsx\";\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport RenderTextField from './RenderTextField';\nimport DateSelection from './DateSelection';\nimport { buildElement, buildImage } from './Builders.jsx';\n\nvar GridData2Input =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GridData2Input, _Component);\n\n  function GridData2Input(props) {\n    var _this;\n\n    _classCallCheck(this, GridData2Input);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GridData2Input).call(this, props));\n\n    _this.addElement = function () {\n      var newElems = JSON.stringify(buildElement(_this.elementKeys, _this.state));\n\n      _this.setState({\n        elems: newElems,\n        haveInterval: true\n      });\n\n      _this.props.updateInputParams({\n        elems: newElems\n      });\n    };\n\n    _this.nestElement = function () {\n      var elem = buildElement(_this.elementKeys, _this.state);\n\n      _this.setState({\n        elem: elem[0],\n        elem_string: JSON.stringify(elem[0]),\n        name: '',\n        base: '',\n        interval: '',\n        duration: '',\n        season_start: '',\n        reduce: '',\n        maxmissing: '',\n        elem_sdate: '',\n        elem_edate: ''\n      });\n    };\n\n    _this.clearElements = function () {\n      _this.setState({\n        elems: '',\n        haveInterval: false\n      });\n\n      _this.props.updateInputParams({\n        elems: \"\"\n      });\n    };\n\n    _this.updateHelpFor = function (helpFor) {\n      if (helpFor === 'meta') {\n        helpFor = 'grid_meta';\n      } else if (helpFor === 'output') {\n        helpFor = 'grid2_output';\n      } else if (helpFor === 'elems') {\n        helpFor = 'grid2_elems';\n      } else if (helpFor === 'name') {\n        helpFor = 'grid2_name';\n      } else if (helpFor === 'reduce') {\n        helpFor = 'grid2_reduce';\n      } else if (helpFor === 'grid') {\n        helpFor = 'grid2';\n      } else if (helpFor === 'bbox') {\n        helpFor = 'grid2_bbox';\n      } else if (helpFor === 'elem_sdate' || helpFor === 'elem_edate') {\n        helpFor = 'date';\n      }\n\n      _this.props.updateAppState({\n        helpFor: helpFor\n      });\n    };\n\n    _this.updateParam = function (update) {\n      _this.setState(update);\n\n      _this.props.updateInputParams(update);\n    };\n\n    _this.updateElems = function (update) {\n      if (update.elems.length === 0) {\n        _this.setState({\n          haveInterval: false\n        });\n      }\n\n      _this.updateParam(update);\n    };\n\n    _this.updateElemBuild = function (update) {\n      _this.setState(update);\n    };\n\n    _this.updateImage = function (update) {\n      _this.setState(update, function () {\n        var image = buildImage(_this.imagefields, _this.state);\n\n        _this.updateParam({\n          image: image\n        });\n      });\n    };\n\n    _this.updateOutput = function (update) {\n      if (update.output === 'image') {\n        var image = buildImage(_this.imagefields, _this.state);\n\n        _this.updateParam({\n          output: \"image\",\n          image: image\n        });\n\n        _this.setState({\n          mapcontrols: true\n        });\n      } else {\n        _this.updateParam(update);\n      }\n    };\n\n    _this.handleMapControlClick = function (event) {\n      if (_this.state.output !== 'image' || event.target.checked) {\n        var image = event.target.checked ? buildImage(_this.imagefields, _this.state) : \"\";\n\n        _this.updateParam({\n          image: image\n        });\n\n        _this.setState({\n          mapcontrols: event.target.checked\n        });\n      }\n    };\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      if (_this.state !== nextState) {\n        return true;\n      } else if (_this.props !== nextProps) {\n        return _this.datafields.some(function (key) {\n          return nextProps.input_params.hasOwnProperty(key) && _this.state[key] !== nextProps.input_params[key] || !nextProps.input_params.hasOwnProperty(key) && _this.state[key] !== '';\n        });\n      } else {\n        return false;\n      }\n    };\n\n    _this.state = {\n      loc: '',\n      state: '',\n      county: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      elem: '',\n      elem_string: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      area_reduce: '',\n      elem_sdate: '',\n      elem_edate: '',\n      meta: '',\n      output: '',\n      image: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: '',\n      mapcontrols: '',\n      haveInterval: false,\n      includeImageControls: false\n    };\n    _this.datafields = ['loc', 'state', 'bbox', 'sdate', 'edate', 'date', 'grid', 'elems', 'meta', 'output', 'image'];\n    _this.imagefields = ['info_only', 'proj', 'overlays', 'interp', 'cmap', 'width', 'height', 'levels'];\n    _this.elementKeys = [\"elem\", \"name\", \"base\", \"interval\", \"duration\", \"season_start\", \"reduce\", \"maxmissing\", \"area_reduce\", \"elem_sdate\", \"elem_edate\"];\n    return _this;\n  }\n\n  _createClass(GridData2Input, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (this.props.input_params !== prevProps.input_params) {\n        this.datafields.forEach(function (key) {\n          if (_this2.props.input_params.hasOwnProperty(key) && _this2.state[key] !== _this2.props.input_params[key]) {\n            if (key === 'elems' && typeof _this2.props.input_params.elems === 'object') {\n              _this2.setState(_defineProperty({}, key, JSON.stringify(_this2.props.input_params[key])));\n            } else {\n              _this2.setState(_defineProperty({}, key, _this2.props.input_params[key]));\n            }\n          } else if (!_this2.props.input_params.hasOwnProperty(key) && _this2.state[key] !== '') {\n            _this2.setState(_defineProperty({}, key, ''));\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var notdly = this.state.duration.length === 3 && this.state.duration !== 'dly' || this.state.duration.length > 0 && !isNaN(Number(this.state.duration)) && (this.state.duration !== \"1\" || this.state.interval !== 'dly' && !(this.state.interval.includes('[') && this.state.interval.length === 7));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Required input\"), React.createElement(Typography, {\n        variant: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Enter information for one of the grid selection types:\"), this.state.state.length === 0 && this.state.county.length === 0 && this.state.bbox.length === 0 && React.createElement(RenderTextField, {\n        id: \"loc\",\n        fieldlabel: \"Point location\",\n        value: this.state.loc,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), this.state.loc.length === 0 && this.state.county.length === 0 && this.state.bbox.length === 0 && React.createElement(RenderTextField, {\n        id: \"state\",\n        fieldlabel: \"State\",\n        value: this.state.state,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), this.state.loc.length === 0 && this.state.state.length === 0 && this.state.bbox.length === 0 && React.createElement(RenderTextField, {\n        id: \"county\",\n        fieldlabel: \"County\",\n        value: this.state.county,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), this.state.loc.length === 0 && this.state.county.length === 0 && this.state.state.length === 0 && React.createElement(RenderTextField, {\n        id: \"bbox\",\n        fieldlabel: \"Bounding box\",\n        value: this.state.bbox,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(DateSelection, {\n        sdate: this.state.sdate,\n        edate: this.state.edate,\n        date: this.state.date,\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"grid\",\n        fieldlabel: \"Grid id\",\n        value: this.state.grid,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"elems\",\n        fieldlabel: \"Elements\",\n        value: this.state.elems,\n        options: {\n          style: {\n            width: \"90%\"\n          },\n          multiline: true,\n          placeholder: \"Build using Element setup\"\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), this.state.elems.includes(\"{\") && React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        style: {\n          marginTop: \"0.5em\",\n          backgroundColor: \"lightcyan\"\n        },\n        onMouseDown: this.clearElements,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Clear elements\")), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Element setup\"), this.state.elem_string.length === 0 && React.createElement(RenderTextField, {\n        id: \"name\",\n        fieldlabel: \"Name\",\n        value: this.state.name,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), this.state.elem_string.length > 0 && React.createElement(RenderTextField, {\n        id: \"elem\",\n        fieldlabel: \"Elem\",\n        value: this.state.elem_string,\n        options: {\n          style: {\n            width: \"90%\"\n          },\n          multiline: true\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), this.state.name.includes(\"dd\") && React.createElement(RenderTextField, {\n        id: \"base\",\n        fieldlabel: \"Base\",\n        value: this.state.base,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"interval\",\n        fieldlabel: \"Interval\",\n        value: this.state.interval,\n        options: {\n          disabled: this.state.haveInterval\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"duration\",\n        fieldlabel: \"Duration\",\n        value: this.state.duration,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), this.state.duration === 'std' && React.createElement(RenderTextField, {\n        id: \"season_start\",\n        fieldlabel: \"Season start\",\n        value: this.state.season_start,\n        options: {\n          required: true\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), notdly && React.createElement(RenderTextField, {\n        id: \"reduce\",\n        fieldlabel: \"Reduce\",\n        value: this.state.reduce,\n        options: {\n          required: true\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }), notdly && React.createElement(RenderTextField, {\n        id: \"maxmissing\",\n        fieldlabel: \"Max missing\",\n        value: this.state.maxmissing,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"elem_sdate\",\n        fieldlabel: \"Start date\",\n        value: this.state.elem_sdate,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"elem_edate\",\n        fieldlabel: \"End date\",\n        value: this.state.elem_edate,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }), this.state.loc.length === 0 && this.state.county.length === 0 && React.createElement(RenderTextField, {\n        id: \"area_reduce\",\n        fieldlabel: \"Area reduction\",\n        value: this.state.area_reduce,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }), (this.state.name.length > 0 || this.state.elem_string.length > 0) && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        style: {\n          marginTop: \"0.5em\",\n          backgroundColor: \"lightcyan\"\n        },\n        onMouseDown: this.nestElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, \"Nest\"), React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        style: {\n          marginTop: \"0.5em\",\n          marginLeft: \"1em\",\n          backgroundColor: \"lightcyan\"\n        },\n        onMouseDown: this.addElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"Optional input\"), React.createElement(RenderTextField, {\n        id: \"meta\",\n        fieldlabel: \"Meta options\",\n        value: this.state.meta,\n        options: {\n          style: {\n            width: \"95%\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"output\",\n        fieldlabel: \"Output type\",\n        value: this.state.output,\n        options: {\n          disabled: this.state.meta.length && this.state.output === 'json' ? true : false\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }), this.state.includeImageControls && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          value: this.state.mapcontrols,\n          onChange: this.handleMapControlClick,\n          checked: this.state.mapcontrols,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }),\n        label: \"Map settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }), this.state.mapcontrols && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, this.state.output !== 'image' && React.createElement(RenderTextField, {\n        id: \"info_only\",\n        fieldlabel: \"Info only\",\n        value: this.state.info_only,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"proj\",\n        fieldlabel: \"Proj\",\n        value: this.state.proj,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"overlays\",\n        fieldlabel: \"Overlays\",\n        value: this.state.overlays,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"interp\",\n        fieldlabel: \"Interp\",\n        value: this.state.interp,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"cmap\",\n        fieldlabel: \"Cmap\",\n        value: this.state.cmap,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }), this.state.height.length === 0 && React.createElement(RenderTextField, {\n        id: \"width\",\n        fieldlabel: \"Width\",\n        value: this.state.width,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          },\n          required: this.state.mapcontrols\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }), this.state.width.length === 0 && React.createElement(RenderTextField, {\n        id: \"height\",\n        fieldlabel: \"Height\",\n        value: this.state.height,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          },\n          required: this.state.mapcontrols\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"levels\",\n        fieldlabel: \"Levels\",\n        value: this.state.levels,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return GridData2Input;\n}(Component);\n\nexport { GridData2Input as default };","map":{"version":3,"sources":["/Users/kle1/progs/React/QueryBuilder2/src/GridData2Input.jsx"],"names":["React","Component","Typography","Grid","Button","FormControlLabel","Switch","RenderTextField","DateSelection","buildElement","buildImage","GridData2Input","props","addElement","newElems","JSON","stringify","elementKeys","state","setState","elems","haveInterval","updateInputParams","nestElement","elem","elem_string","name","base","interval","duration","season_start","reduce","maxmissing","elem_sdate","elem_edate","clearElements","updateHelpFor","helpFor","updateAppState","updateParam","update","updateElems","length","updateElemBuild","updateImage","image","imagefields","updateOutput","output","mapcontrols","handleMapControlClick","event","target","checked","shouldComponentUpdate","nextProps","nextState","datafields","some","key","input_params","hasOwnProperty","loc","county","bbox","sdate","edate","date","grid","area_reduce","meta","info_only","proj","overlays","interp","cmap","width","height","levels","includeImageControls","prevProps","forEach","notdly","isNaN","Number","includes","style","multiline","placeholder","marginTop","backgroundColor","disabled","required","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport { buildElement, buildImage } from './Builders.jsx'\n\nexport default class GridData2Input extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      loc: '',\n      state: '',\n      county: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      elem: '',\n      elem_string: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      area_reduce: '',\n      elem_sdate: '',\n      elem_edate: '',\n      meta: '',\n      output: '',\n      image: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: '',\n      mapcontrols: '',\n      haveInterval: false,\n      includeImageControls: false,\n    }\n    this.datafields = ['loc','state','bbox','sdate','edate','date','grid','elems','meta','output','image']\n    this.imagefields = ['info_only','proj','overlays','interp','cmap','width','height','levels']\n    this.elementKeys = [\"elem\", \"name\", \"base\", \"interval\", \"duration\", \"season_start\", \"reduce\", \"maxmissing\", \"area_reduce\", \"elem_sdate\", \"elem_edate\"]\n  }\n\n  addElement = () => {\n    const newElems = JSON.stringify(buildElement(this.elementKeys, this.state))\n    this.setState({\n      elems: newElems,\n      haveInterval: true,\n    })\n    this.props.updateInputParams({elems: newElems})\n  }\n\n  nestElement = () => {\n    const elem = buildElement(this.elementKeys, this.state)\n    this.setState({\n      elem: elem[0],\n      elem_string: JSON.stringify(elem[0]),\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      elem_sdate: '',\n      elem_edate: '',\n    })\n  }\n\n  clearElements = () => {\n    this.setState({\n      elems: '',\n      haveInterval:false,\n    })\n    this.props.updateInputParams({elems: \"\"})\n  }\n\n  updateHelpFor = (helpFor) => {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta'\n    } else if (helpFor === 'output') {\n      helpFor = 'grid2_output'\n    } else if (helpFor === 'elems') {\n      helpFor = 'grid2_elems'\n    } else if (helpFor === 'name') {\n      helpFor = 'grid2_name'\n    } else if (helpFor === 'reduce') {\n      helpFor = 'grid2_reduce'\n    } else if (helpFor === 'grid') {\n      helpFor = 'grid2'\n    } else if (helpFor === 'bbox') {\n      helpFor = 'grid2_bbox'\n    } else if (helpFor === 'elem_sdate' || helpFor === 'elem_edate') {\n      helpFor = 'date'\n    }\n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n\n  updateElems = (update) => {\n    if (update.elems.length === 0) {\n      this.setState({haveInterval: false})\n    }\n    this.updateParam(update)\n  }\n\n  updateElemBuild = (update) => {\n    this.setState(update)\n  }\n\n  // images are currently disabled (this.state.includeImageControls: false)\n  updateImage = (update) => {\n    this.setState(update, () => {\n      const image = buildImage(this.imagefields, this.state)\n      this.updateParam({image: image})\n    })\n  }\n // images are currently disabled (this.state.includeImageControls: false)\n  updateOutput = (update) => {\n    if (update.output === 'image') {\n      const image = buildImage(this.imagefields, this.state)\n      this.updateParam({output:\"image\", image:image})\n      this.setState({\n        mapcontrols: true,\n      })\n    } else {\n      this.updateParam(update)\n    }\n  }\n // images are currently disabled (this.state.includeImageControls: false)\n  handleMapControlClick = event => {\n    if (this.state.output !== 'image' || event.target.checked) {\n      const image = event.target.checked ? buildImage(this.imagefields, this.state) : \"\"\n      this.updateParam({image: image})\n      this.setState({\n        mapcontrols: event.target.checked, \n      })\n    }\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.datafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.datafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          if (key === 'elems' && typeof this.props.input_params.elems === 'object') {\n            this.setState({[key]: JSON.stringify(this.props.input_params[key])})\n          } else {\n            this.setState({[key]: this.props.input_params[key]})\n          }\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n\n  render () {\n    const notdly = (this.state.duration.length === 3 && this.state.duration !== 'dly') || \n      (this.state.duration.length > 0 && !isNaN(Number(this.state.duration)) && \n      (this.state.duration !== \"1\" || (this.state.interval !== 'dly' && !(this.state.interval.includes('[') && this.state.interval.length === 7))))\n    return (\n        <div>\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Required input\n              </Typography>\n              <Typography variant=\"caption\">\n                Enter information for one of the grid selection types:\n              </Typography>\n              {this.state.state.length === 0 && \n               this.state.county.length === 0 && \n               this.state.bbox.length === 0 && \n                <RenderTextField\n                  id=\"loc\"\n                  fieldlabel=\"Point location\"\n                  value={this.state.loc}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 && \n               this.state.county.length === 0 && \n               this.state.bbox.length === 0 && \n                <RenderTextField\n                  id=\"state\"\n                  fieldlabel=\"State\"\n                  value={this.state.state}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 &&\n               this.state.state.length === 0 && \n               this.state.bbox.length === 0 && \n               <RenderTextField\n                  id=\"county\"\n                  fieldlabel=\"County\"\n                  value={this.state.county}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 && \n               this.state.county.length === 0 && \n               this.state.state.length === 0 && \n                <RenderTextField\n                  id=\"bbox\"\n                  fieldlabel=\"Bounding box\"\n                  value={this.state.bbox}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              <DateSelection\n                sdate={this.state.sdate}\n                edate={this.state.edate}\n                date={this.state.date}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"grid\"\n                fieldlabel=\"Grid id\"\n                value={this.state.grid}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"elems\"\n                fieldlabel=\"Elements\"\n                value={this.state.elems}\n                options={{style: {width:\"90%\"}, multiline: true, placeholder: \"Build using Element setup\"}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElems}\n              />\n              {this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.clearElements}\n                >\n                  Clear elements\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Element setup\n              </Typography>\n              {this.state.elem_string.length === 0 &&\n                <RenderTextField\n                  id=\"name\"\n                  fieldlabel=\"Name\"\n                  value={this.state.name}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {this.state.elem_string.length > 0 &&\n                <RenderTextField\n                  id=\"elem\"\n                  fieldlabel=\"Elem\"\n                  value={this.state.elem_string}\n                  options={{style: {width:\"90%\"}, multiline: true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {this.state.name.includes(\"dd\") &&\n                <RenderTextField\n                  id=\"base\"\n                  fieldlabel=\"Base\"\n                  value={this.state.base}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"interval\"\n                fieldlabel=\"Interval\"\n                value={this.state.interval}\n                options={{disabled:this.state.haveInterval}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"duration\"\n                fieldlabel=\"Duration\"\n                value={this.state.duration}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.duration === 'std' &&\n                <RenderTextField\n                  id=\"season_start\"\n                  fieldlabel=\"Season start\"\n                  value={this.state.season_start}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"reduce\"\n                  fieldlabel=\"Reduce\"\n                  value={this.state.reduce}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"maxmissing\"\n                  fieldlabel=\"Max missing\"\n                  value={this.state.maxmissing}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"elem_sdate\"\n                fieldlabel=\"Start date\"\n                value={this.state.elem_sdate}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"elem_edate\"\n                fieldlabel=\"End date\"\n                value={this.state.elem_edate}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {(this.state.loc.length === 0 && this.state.county.length === 0) && \n                <RenderTextField\n                  id=\"area_reduce\"\n                  fieldlabel=\"Area reduction\"\n                  value={this.state.area_reduce}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n\n              {(this.state.name.length > 0 || this.state.elem_string.length > 0) &&\n                <div>\n                  <Button \n                    size=\"small\"\n                    variant=\"outlined\"\n                    style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                    onMouseDown={this.nestElement}\n                  >\n                    Nest\n                  </Button>\n                  <Button \n                    size=\"small\"\n                    variant=\"outlined\"\n                    style={{marginTop:\"0.5em\", marginLeft:\"1em\", backgroundColor:\"lightcyan\"}}\n                    onMouseDown={this.addElement}\n                  >\n                    Add\n                  </Button>\n                </div>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional input\n              </Typography>\n              <RenderTextField\n                id=\"meta\"\n                fieldlabel=\"Meta options\"\n                value={this.state.meta}\n                options={{style: {width:\"95%\"}}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"output\"\n                fieldlabel=\"Output type\"\n                value={this.state.output}\n                options={{disabled: this.state.meta.length && this.state.output === 'json' ? true : false}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              {this.state.includeImageControls &&\n                <div>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        value={this.state.mapcontrols}\n                        onChange={this.handleMapControlClick}\n                        checked={this.state.mapcontrols}\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Map settings\"\n                  />\n                  {this.state.mapcontrols &&\n                    <div>\n                      {this.state.output !== 'image' &&\n                        <RenderTextField\n                          id=\"info_only\"\n                          fieldlabel=\"Info only\"\n                          value={this.state.info_only}\n                          options={{style: {marginLeft:\"2em\"}}}\n                          updateHelpFor={this.updateHelpFor}\n                          updateParam={this.updateImage}\n                        />\n                      }\n                      <RenderTextField\n                        id=\"proj\"\n                        fieldlabel=\"Proj\"\n                        value={this.state.proj}\n                        options={{style: {marginLeft:\"2em\"}}}\n                        updateHelpFor={this.updateHelpFor}\n                        updateParam={this.updateImage}\n                      />\n                      <RenderTextField\n                        id=\"overlays\"\n                        fieldlabel=\"Overlays\"\n                        value={this.state.overlays}\n                        options={{style: {marginLeft:\"2em\"}}}\n                        updateHelpFor={this.updateHelpFor}\n                        updateParam={this.updateImage}\n                      />\n                      <RenderTextField\n                        id=\"interp\"\n                        fieldlabel=\"Interp\"\n                        value={this.state.interp}\n                        options={{style: {marginLeft:\"2em\"}}}\n                        updateHelpFor={this.updateHelpFor}\n                        updateParam={this.updateImage}\n                      />\n                      <RenderTextField\n                        id=\"cmap\"\n                        fieldlabel=\"Cmap\"\n                        value={this.state.cmap}\n                        options={{style: {marginLeft:\"2em\"}}}\n                        updateHelpFor={this.updateHelpFor}\n                        updateParam={this.updateImage}\n                      />\n                      {this.state.height.length === 0 &&\n                        <RenderTextField\n                          id=\"width\"\n                          fieldlabel=\"Width\"\n                          value={this.state.width}\n                          options={{style: {marginLeft:\"2em\"}, required: this.state.mapcontrols}}\n                          updateHelpFor={this.updateHelpFor}\n                          updateParam={this.updateImage}\n                        />\n                      }\n                      {this.state.width.length === 0 &&\n                        <RenderTextField\n                          id=\"height\"\n                          fieldlabel=\"Height\"\n                          value={this.state.height}\n                          options={{style: {marginLeft:\"2em\"}, required: this.state.mapcontrols}}\n                          updateHelpFor={this.updateHelpFor}\n                          updateParam={this.updateImage}\n                        />\n                      }\n                      <RenderTextField\n                        id=\"levels\"\n                        fieldlabel=\"Levels\"\n                        value={this.state.levels}\n                        options={{style: {marginLeft:\"2em\"}}}\n                        updateHelpFor={this.updateHelpFor}\n                        updateParam={this.updateImage}\n                      />\n                    </div>\n                  }\n                </div>\n              }\n            </Grid>\n          </Grid>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}