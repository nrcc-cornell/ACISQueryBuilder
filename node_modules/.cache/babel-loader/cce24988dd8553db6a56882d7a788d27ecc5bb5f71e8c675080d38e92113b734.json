{"ast":null,"code":"import _slicedToArray from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/QuerySelector.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { withStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar styles = {\n  // classes for ToggleButton\n  root: {\n    background: \"white\",\n    color: \"darkblue\",\n    textTransform: \"none\",\n    borderRight: \"1pt solid lightgray\"\n  },\n  selected: {\n    background: \"blue !important\",\n    color: \"white !important\"\n  },\n  // class for Paper\n  paperRoot: {\n    margin: \"0 0 2em\"\n  },\n  // class for page title typography\n  titleRoot: {\n    color: \"darkblue\"\n  }\n};\nvar QuerySelector = function QuerySelector(props) {\n  _s();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    wstype = _useState2[0],\n    setWstype = _useState2[1];\n  useEffect(function () {\n    setWstype(_this.props.wstype);\n  }, []);\n  handleChange = function handleChange(event, value) {\n    if (value) {\n      setWstype(value);\n      _this.props.handleChange(value);\n    }\n  };\n  var classes = _this.props.classes;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 0,\n    classes: {\n      root: classes.paperRoot\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          classes: {\n            root: classes.titleRoot\n          },\n          children: \"ACIS Query Builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: _this.state.wstype,\n          exclusive: true,\n          onChange: _this.handleChange,\n          children: _this.props.query_types.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: item,\n              classes: {\n                root: classes.root,\n                selected: classes.selected\n              },\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n_s(QuerySelector, \"NAF0Incdb/Gn1VisreJHiWNJF0c=\");\n_c = QuerySelector;\nexport default withStyles(styles)(QuerySelector);\nvar _c;\n$RefreshReg$(_c, \"QuerySelector\");","map":{"version":3,"names":["React","useState","Paper","Grid","Typography","ToggleButton","ToggleButtonGroup","withStyles","styles","root","background","color","textTransform","borderRight","selected","paperRoot","margin","titleRoot","QuerySelector","props","wstype","setWstype","useEffect","handleChange","event","value","classes","state","query_types","map","item"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/QuerySelector.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Paper from '@mui/material/Paper'\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport { withStyles } from '@mui/styles'\n\nconst styles = {\n  // classes for ToggleButton\n  root: {\n    background:\"white\",\n    color:\"darkblue\",\n    textTransform:\"none\",\n    borderRight:\"1pt solid lightgray\"\n  },\n  selected: {\n    background: \"blue !important\",\n    color:\"white !important\"\n  },\n  // class for Paper\n  paperRoot: {\n    margin: \"0 0 2em\"\n  },\n  // class for page title typography\n  titleRoot: {\n    color: \"darkblue\"\n  },\n}\n\nconst QuerySelector = (props) => {\n  const [wstype, setWstype] = useState('')\n\n  useEffect(() => {\n    setWstype(this.props.wstype)\n  }, [])\n\n  handleChange = (event, value) => {\n    if (value) {\n      setWstype(value)\n      this.props.handleChange(value)\n    }\n  }\n\n  const {classes} = this.props\n\n  return (\n    <Paper elevation={0} classes={{root:classes.paperRoot}}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={4}>\n          <Typography variant=\"h5\" classes={{root:classes.titleRoot}}>\n            ACIS Query Builder\n          </Typography>\n        </Grid>\n        <Grid item>\n          <ToggleButtonGroup value={this.state.wstype} exclusive onChange={this.handleChange}>\n            {this.props.query_types.map((item) => (\n              <ToggleButton \n                key={item} \n                value={item}\n                classes={{root:classes.root, selected:classes.selected}}\n              >\n                {item}\n              </ToggleButton>                  \n            ))}\n          </ToggleButtonGroup>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(QuerySelector)"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,SAASC,UAAU,QAAQ,aAAa;AAAA;AAExC,IAAMC,MAAM,GAAG;EACb;EACAC,IAAI,EAAE;IACJC,UAAU,EAAC,OAAO;IAClBC,KAAK,EAAC,UAAU;IAChBC,aAAa,EAAC,MAAM;IACpBC,WAAW,EAAC;EACd,CAAC;EACDC,QAAQ,EAAE;IACRJ,UAAU,EAAE,iBAAiB;IAC7BC,KAAK,EAAC;EACR,CAAC;EACD;EACAI,SAAS,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACD;EACAC,SAAS,EAAE;IACTN,KAAK,EAAE;EACT;AACF,CAAC;AAED,IAAMO,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAK,EAAK;EAAA;EAC/B,gBAA4BlB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjCmB,MAAM;IAAEC,SAAS;EAExBC,SAAS,CAAC,YAAM;IACdD,SAAS,CAAC,KAAI,CAACF,KAAK,CAACC,MAAM,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAENG,YAAY,GAAG,sBAACC,KAAK,EAAEC,KAAK,EAAK;IAC/B,IAAIA,KAAK,EAAE;MACTJ,SAAS,CAACI,KAAK,CAAC;MAChB,KAAI,CAACN,KAAK,CAACI,YAAY,CAACE,KAAK,CAAC;IAChC;EACF,CAAC;EAED,IAAOC,OAAO,GAAI,KAAI,CAACP,KAAK,CAArBO,OAAO;EAEd,oBACE,QAAC,KAAK;IAAC,SAAS,EAAE,CAAE;IAAC,OAAO,EAAE;MAACjB,IAAI,EAACiB,OAAO,CAACX;IAAS,CAAE;IAAA,uBACrD,QAAC,IAAI;MAAC,SAAS;MAAC,OAAO,EAAE,CAAE;MAAA,wBACzB,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAA,uBACvB,QAAC,UAAU;UAAC,OAAO,EAAC,IAAI;UAAC,OAAO,EAAE;YAACN,IAAI,EAACiB,OAAO,CAACT;UAAS,CAAE;UAAA,UAAC;QAE5D;UAAA;UAAA;UAAA;QAAA;MAAa;QAAA;QAAA;QAAA;MAAA,SACR,eACP,QAAC,IAAI;QAAC,IAAI;QAAA,uBACR,QAAC,iBAAiB;UAAC,KAAK,EAAE,KAAI,CAACU,KAAK,CAACP,MAAO;UAAC,SAAS;UAAC,QAAQ,EAAE,KAAI,CAACG,YAAa;UAAA,UAChF,KAAI,CAACJ,KAAK,CAACS,WAAW,CAACC,GAAG,CAAC,UAACC,IAAI;YAAA,oBAC/B,QAAC,YAAY;cAEX,KAAK,EAAEA,IAAK;cACZ,OAAO,EAAE;gBAACrB,IAAI,EAACiB,OAAO,CAACjB,IAAI;gBAAEK,QAAQ,EAACY,OAAO,CAACZ;cAAQ,CAAE;cAAA,UAEvDgB;YAAI,GAJAA,IAAI;cAAA;cAAA;cAAA;YAAA,SAKI;UAAA,CAChB;QAAC;UAAA;UAAA;UAAA;QAAA;MACgB;QAAA;QAAA;QAAA;MAAA,SACf;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,SACD;AAEZ,CAAC;AAAA,GAxCKZ,aAAa;AAAA,KAAbA,aAAa;AA0CnB,eAAeX,UAAU,CAACC,MAAM,CAAC,CAACU,aAAa,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}