{"ast":null,"code":"import _classCallCheck from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder2/src/DateSelection.jsx\";\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport RenderTextField from './RenderTextField';\n\nvar DateSelection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DateSelection, _Component);\n\n  function DateSelection(props) {\n    var _this;\n\n    _classCallCheck(this, DateSelection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DateSelection).call(this, props));\n\n    _this.updateParam = function (update) {\n      _this.setState(update);\n\n      _this.props.updateParam(update);\n    };\n\n    _this.updateDates = function () {\n      _this.props.updateParam({\n        sdate: _this.state.sdate,\n        edate: _this.state.edate,\n        date: _this.state.date\n      });\n    };\n\n    _this.handleChipClick = function () {\n      if (_this.state.datetype === 'pair') {\n        var sdate = _this.state.sdate;\n\n        _this.setState({\n          sdate: \"\",\n          edate: \"\",\n          date: sdate,\n          datetype: \"single\"\n        }, _this.updateDates);\n      } else {\n        var date = _this.state.date;\n\n        _this.setState({\n          date: \"\",\n          sdate: date,\n          datetype: \"pair\"\n        }, _this.updateDates);\n      }\n    };\n\n    _this.componentDidUpdate = function (prevProps) {\n      if (_this.props !== prevProps) {\n        _this.setState({\n          sdate: _this.props.sdate,\n          edate: _this.props.edate,\n          date: _this.props.date\n        });\n      }\n    };\n\n    _this.state = {\n      sdate: '',\n      edate: '',\n      date: '',\n      datetype: 'pair'\n    };\n    return _this;\n  }\n\n  _createClass(DateSelection, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Chip, {\n        label: this.state.datetype === 'pair' ? \"Change to single date\" : \"Change to start/end dates\",\n        clickable: true,\n        variant: \"outlined\",\n        tabIndex: \"-1\",\n        style: {\n          marginBottom: \"0.5em\",\n          marginTop: \"0.5em\"\n        },\n        onClick: this.handleChipClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), this.state.datetype === 'pair' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(RenderTextField, {\n        id: \"sdate\",\n        fieldlabel: \"Start date\",\n        value: this.state.sdate,\n        options: {},\n        updateHelpFor: this.props.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"edate\",\n        fieldlabel: \"End date\",\n        value: this.state.edate,\n        options: {},\n        updateHelpFor: this.props.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), this.state.datetype === 'single' && React.createElement(RenderTextField, {\n        id: \"date\",\n        fieldlabel: \"Date\",\n        value: this.state.date,\n        options: {},\n        updateHelpFor: this.props.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DateSelection;\n}(Component);\n\nexport { DateSelection as default };","map":{"version":3,"sources":["/Users/kle1/progs/React/QueryBuilder2/src/DateSelection.jsx"],"names":["React","Component","Chip","RenderTextField","DateSelection","props","updateParam","update","setState","updateDates","sdate","state","edate","date","handleChipClick","datetype","componentDidUpdate","prevProps","marginBottom","marginTop","updateHelpFor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport RenderTextField from './RenderTextField'\n\nexport default class DateSelection extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      sdate: '',\n      edate: '',\n      date: '',\n      datetype: 'pair',\n    }\n  }\n\n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateParam(update)\n  }\n\n  updateDates = () => {\n    this.props.updateParam({\n      sdate:this.state.sdate,\n      edate:this.state.edate,\n      date:this.state.date\n    })\n  }\n\n  handleChipClick = () => {\n    if (this.state.datetype === 'pair') {\n      const sdate = this.state.sdate\n      this.setState({\n        sdate:\"\", \n        edate:\"\", \n        date:sdate, \n        datetype:\"single\"\n      }, this.updateDates)\n    } else {\n      const date = this.state.date\n      this.setState({\n        date: \"\", \n        sdate:date, \n        datetype:\"pair\"\n      }, this.updateDates)\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props !== prevProps) {\n      this.setState({\n        sdate: this.props.sdate,\n        edate: this.props.edate,\n        date: this.props.date,\n      })\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Chip\n          label={this.state.datetype === 'pair' ? \"Change to single date\" : \"Change to start/end dates\"}\n          clickable={true}\n          variant=\"outlined\"\n          tabIndex=\"-1\"\n          style={{marginBottom:\"0.5em\", marginTop:\"0.5em\"}}\n          onClick={this.handleChipClick}\n        />\n        {this.state.datetype === 'pair' &&\n          <div>\n            <RenderTextField\n            id=\"sdate\"\n            fieldlabel=\"Start date\"\n            value={this.state.sdate}\n            options={{}}\n            updateHelpFor={this.props.updateHelpFor}\n            updateParam={this.updateParam}\n            />\n            <RenderTextField\n            id=\"edate\"\n            fieldlabel=\"End date\"\n            value={this.state.edate}\n            options={{}}\n            updateHelpFor={this.props.updateHelpFor}\n            updateParam={this.updateParam}\n            />\n          </div>\n        }\n        {this.state.datetype === 'single' &&\n          <RenderTextField\n              id=\"date\"\n              fieldlabel=\"Date\"\n              value={this.state.date}\n              options={{}}\n              updateHelpFor={this.props.updateHelpFor}\n              updateParam={this.updateParam}\n          />\n        }\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}