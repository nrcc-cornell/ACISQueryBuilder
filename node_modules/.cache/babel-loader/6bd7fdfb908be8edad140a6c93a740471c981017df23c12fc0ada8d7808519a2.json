{"ast":null,"code":"var _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/ResultsButtons.jsx\",\n  _this = this;\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ResultsButtons = function ResultsButtons(props) {\n  var buttonLabels = ['JSON', 'Basic format', 'Full format'];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      my: \"0.5em\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: props.showButtons && /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: props.selectedButton,\n          exclusive: true,\n          onChange: function onChange(e) {\n            return props.handleFormat(e.target.value);\n          },\n          children: buttonLabels.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: item,\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n_c = ResultsButtons;\nexport default ResultsButtons;\nvar _c;\n$RefreshReg$(_c, \"ResultsButtons\");","map":{"version":3,"names":["React","Box","Grid","Typography","ToggleButton","ToggleButtonGroup","ResultsButtons","props","buttonLabels","my","showButtons","selectedButton","e","handleFormat","target","value","map","item"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/ResultsButtons.jsx"],"sourcesContent":["import React from 'react'\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\nconst ResultsButtons = (props) => {\n  const buttonLabels = ['JSON', 'Basic format', 'Full format']\n\n  return (\n    <Box sx={{my:\"0.5em\"}}>\n      <Grid container spacing={4}>\n        <Grid item>\n          <Typography variant=\"h6\">\n            Results:\n          </Typography>\n        </Grid>\n        <Grid item>\n          {props.showButtons &&\n            <ToggleButtonGroup \n              value={props.selectedButton} \n              exclusive \n              onChange={e => props.handleFormat(e.target.value)}\n            >\n              {buttonLabels.map((item) => (\n                <ToggleButton \n                  key={item} \n                  value={item}\n                >\n                  {item}\n                </ToggleButton>                  \n              ))}\n            </ToggleButtonGroup>\n          }\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default ResultsButtons"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,iBAAiB,MAAM,iCAAiC;AAAA;AAE/D,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAK;EAChC,IAAMC,YAAY,GAAG,CAAC,MAAM,EAAE,cAAc,EAAE,aAAa,CAAC;EAE5D,oBACE,QAAC,GAAG;IAAC,EAAE,EAAE;MAACC,EAAE,EAAC;IAAO,CAAE;IAAA,uBACpB,QAAC,IAAI;MAAC,SAAS;MAAC,OAAO,EAAE,CAAE;MAAA,wBACzB,QAAC,IAAI;QAAC,IAAI;QAAA,uBACR,QAAC,UAAU;UAAC,OAAO,EAAC,IAAI;UAAA,UAAC;QAEzB;UAAA;UAAA;UAAA;QAAA;MAAa;QAAA;QAAA;QAAA;MAAA,SACR,eACP,QAAC,IAAI;QAAC,IAAI;QAAA,UACPF,KAAK,CAACG,WAAW,iBAChB,QAAC,iBAAiB;UAChB,KAAK,EAAEH,KAAK,CAACI,cAAe;UAC5B,SAAS;UACT,QAAQ,EAAE,kBAAAC,CAAC;YAAA,OAAIL,KAAK,CAACM,YAAY,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;UAAA,CAAC;UAAA,UAEjDP,YAAY,CAACQ,GAAG,CAAC,UAACC,IAAI;YAAA,oBACrB,QAAC,YAAY;cAEX,KAAK,EAAEA,IAAK;cAAA,UAEXA;YAAI,GAHAA,IAAI;cAAA;cAAA;cAAA;YAAA,SAII;UAAA,CAChB;QAAC;UAAA;UAAA;UAAA;QAAA;MACgB;QAAA;QAAA;QAAA;MAAA,SAEjB;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,SACH;AAEV,CAAC;AAAA,KAhCKX,cAAc;AAkCpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}