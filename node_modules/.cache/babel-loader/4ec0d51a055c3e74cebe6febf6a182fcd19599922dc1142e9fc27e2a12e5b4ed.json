{"ast":null,"code":"import _slicedToArray from\"/Users/kle1/git/ACISQueryBuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect}from'react';import{useSearchParams}from'react-router-dom';var CheckSearchParams=function CheckSearchParams(props){var _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,1),searchParams=_useSearchParams2[0];// eliminate need to require CamelCase service specification in search string\nvar services={\"stnmeta\":\"StnMeta\",\"stndata\":\"StnData\",\"multistndata\":\"MultiStnData\",\"griddata\":\"GridData\",\"griddata2\":\"GridData2\",\"stnhourly\":\"StnHourly\",\"general\":\"General\"};var handleSearchChange=function handleSearchChange(srchstr){if(srchstr.has(\"service\")&&srchstr.has(\"params\")){var service=srchstr.get(\"service\").toLowerCase();if(services.hasOwnProperty(service)){var wstype=services[service];var params_string=decodeURIComponent(srchstr.get(\"params\"));var generalArea=wstype===\"General\"&&srchstr.has(\"area\")?srchstr.get(\"area\"):\"\";props.setWstype(wstype);props.setGeneralArea(generalArea);props.setInput_params_string(params_string);try{var input_params=JSON.parse(params_string);props.setInput_params(input_params);props.setResetElemsBuilder(true);}catch(_unused){console.log('Invalid JSON in url');}}}};useEffect(function(){handleSearchChange(searchParams);// eslint-disable-next-line\n},[searchParams]);};export default CheckSearchParams;","map":{"version":3,"names":["useEffect","useSearchParams","CheckSearchParams","props","searchParams","services","handleSearchChange","srchstr","has","service","get","toLowerCase","hasOwnProperty","wstype","params_string","decodeURIComponent","generalArea","setWstype","setGeneralArea","setInput_params_string","input_params","JSON","parse","setInput_params","setResetElemsBuilder","console","log"],"sources":["/Users/kle1/git/ACISQueryBuilder/src/CheckSearchParams.jsx"],"sourcesContent":["import { useEffect} from 'react'\nimport { useSearchParams } from 'react-router-dom'\n\nconst CheckSearchParams = (props) => {\n    const [ searchParams ] = useSearchParams()\n\n    // eliminate need to require CamelCase service specification in search string\n    const services = {\n        \"stnmeta\": \"StnMeta\",\n        \"stndata\": \"StnData\",\n        \"multistndata\": \"MultiStnData\",\n        \"griddata\": \"GridData\",\n        \"griddata2\": \"GridData2\",\n        \"stnhourly\": \"StnHourly\",\n        \"general\": \"General\",\n    }\n\n    const handleSearchChange = (srchstr) => {\n        if (srchstr.has(\"service\") && srchstr.has(\"params\")) {\n            const service = srchstr.get(\"service\").toLowerCase()\n            if (services.hasOwnProperty(service)) {\n                const wstype = services[service]\n                const params_string = decodeURIComponent(srchstr.get(\"params\"))\n                const generalArea = (wstype === \"General\" && srchstr.has(\"area\")) ? srchstr.get(\"area\") : \"\"\n                props.setWstype(wstype)\n                props.setGeneralArea(generalArea)\n                props.setInput_params_string(params_string)\n                try {\n                    const input_params = JSON.parse(params_string)\n                    props.setInput_params(input_params)\n                    props.setResetElemsBuilder(true)\n                } catch {\n                    console.log('Invalid JSON in url')\n                }\n            }\n        }\n     }\n\n    useEffect(() => {\n      handleSearchChange(searchParams)\n      // eslint-disable-next-line\n    }, [searchParams])\n}\n\nexport default CheckSearchParams"],"mappings":"sHAAA,OAASA,SAAS,KAAO,OAAO,CAChC,OAASC,eAAe,KAAQ,kBAAkB,CAElD,GAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIC,KAAK,CAAK,CACjC,qBAAyBF,eAAe,EAAE,sDAAlCG,YAAY,sBAEpB;AACA,GAAMC,SAAQ,CAAG,CACb,SAAS,CAAE,SAAS,CACpB,SAAS,CAAE,SAAS,CACpB,cAAc,CAAE,cAAc,CAC9B,UAAU,CAAE,UAAU,CACtB,WAAW,CAAE,WAAW,CACxB,WAAW,CAAE,WAAW,CACxB,SAAS,CAAE,SACf,CAAC,CAED,GAAMC,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIC,OAAO,CAAK,CACpC,GAAIA,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC,EAAID,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAE,CACjD,GAAMC,QAAO,CAAGF,OAAO,CAACG,GAAG,CAAC,SAAS,CAAC,CAACC,WAAW,EAAE,CACpD,GAAIN,QAAQ,CAACO,cAAc,CAACH,OAAO,CAAC,CAAE,CAClC,GAAMI,OAAM,CAAGR,QAAQ,CAACI,OAAO,CAAC,CAChC,GAAMK,cAAa,CAAGC,kBAAkB,CAACR,OAAO,CAACG,GAAG,CAAC,QAAQ,CAAC,CAAC,CAC/D,GAAMM,YAAW,CAAIH,MAAM,GAAK,SAAS,EAAIN,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CAAID,OAAO,CAACG,GAAG,CAAC,MAAM,CAAC,CAAG,EAAE,CAC5FP,KAAK,CAACc,SAAS,CAACJ,MAAM,CAAC,CACvBV,KAAK,CAACe,cAAc,CAACF,WAAW,CAAC,CACjCb,KAAK,CAACgB,sBAAsB,CAACL,aAAa,CAAC,CAC3C,GAAI,CACA,GAAMM,aAAY,CAAGC,IAAI,CAACC,KAAK,CAACR,aAAa,CAAC,CAC9CX,KAAK,CAACoB,eAAe,CAACH,YAAY,CAAC,CACnCjB,KAAK,CAACqB,oBAAoB,CAAC,IAAI,CAAC,CACpC,CAAE,cAAM,CACJC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CACtC,CACJ,CACJ,CACH,CAAC,CAEF1B,SAAS,CAAC,UAAM,CACdM,kBAAkB,CAACF,YAAY,CAAC,CAChC;AACF,CAAC,CAAE,CAACA,YAAY,CAAC,CAAC,CACtB,CAAC,CAED,cAAeF,kBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}