{"ast":null,"code":"import _slicedToArray from\"/Users/kle1/git/ACISQueryBuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import Tooltip from'@mui/material/Tooltip';import IconButton from'@mui/material/IconButton';import ContentCopy from'@mui/icons-material/ContentCopy';import Snackbar from'@mui/material/Snackbar';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CopyToClipboard=function CopyToClipboard(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var handleClick=function handleClick(){setOpen(true);navigator.clipboard.writeText(props.cliptext);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Copy to clipboard\",children:/*#__PURE__*/_jsx(IconButton,{onClick:handleClick,size:\"small\",sx:{pr:0},children:/*#__PURE__*/_jsx(ContentCopy,{fontSize:\"small\",sx:{color:props.color}})})}),/*#__PURE__*/_jsx(Snackbar,{open:open,onClose:function onClose(){return setOpen(false);},autoHideDuration:2000,message:\"Copied to clipboard\"})]});};export default CopyToClipboard;","map":{"version":3,"names":["useState","Tooltip","IconButton","ContentCopy","Snackbar","CopyToClipboard","props","open","setOpen","handleClick","navigator","clipboard","writeText","cliptext","pr","color"],"sources":["/Users/kle1/git/ACISQueryBuilder/src/CopyToClipboard.jsx"],"sourcesContent":["import { useState } from 'react'\nimport Tooltip from '@mui/material/Tooltip'\nimport IconButton from '@mui/material/IconButton'\nimport ContentCopy from '@mui/icons-material/ContentCopy'\nimport Snackbar from '@mui/material/Snackbar'\n\nconst CopyToClipboard = (props) => {\n    const [ open, setOpen ] = useState(false)\n\n    const handleClick = () => {\n      setOpen(true)\n      navigator.clipboard.writeText(props.cliptext)\n    }\n    \n    return (\n        <>\n          <Tooltip title=\"Copy to clipboard\">\n            <IconButton onClick={handleClick} size=\"small\" sx={{pr:0}}>\n              <ContentCopy fontSize=\"small\" sx={{color:props.color}} />\n            </IconButton>\n          </Tooltip>\n\n          <Snackbar\n            open={open}\n            onClose={() => setOpen(false)}\n            autoHideDuration={2000}\n            message=\"Copied to clipboard\"\n          />\n        </>\n    )\n}\n\nexport default CopyToClipboard"],"mappings":"sHAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAOC,QAAO,KAAM,uBAAuB,CAC3C,MAAOC,WAAU,KAAM,0BAA0B,CACjD,MAAOC,YAAW,KAAM,iCAAiC,CACzD,MAAOC,SAAQ,KAAM,wBAAwB,8IAE7C,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAIC,KAAK,CAAK,CAC/B,cAA0BN,QAAQ,CAAC,KAAK,CAAC,wCAAjCO,IAAI,eAAEC,OAAO,eAErB,GAAMC,YAAW,CAAG,QAAdA,YAAW,EAAS,CACxBD,OAAO,CAAC,IAAI,CAAC,CACbE,SAAS,CAACC,SAAS,CAACC,SAAS,CAACN,KAAK,CAACO,QAAQ,CAAC,CAC/C,CAAC,CAED,mBACI,wCACE,KAAC,OAAO,EAAC,KAAK,CAAC,mBAAmB,uBAChC,KAAC,UAAU,EAAC,OAAO,CAAEJ,WAAY,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAE,CAACK,EAAE,CAAC,CAAC,CAAE,uBACxD,KAAC,WAAW,EAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAE,CAACC,KAAK,CAACT,KAAK,CAACS,KAAK,CAAE,EAAG,EAC9C,EACL,cAEV,KAAC,QAAQ,EACP,IAAI,CAAER,IAAK,CACX,OAAO,CAAE,yBAAMC,QAAO,CAAC,KAAK,CAAC,EAAC,CAC9B,gBAAgB,CAAE,IAAK,CACvB,OAAO,CAAC,qBAAqB,EAC7B,GACD,CAEX,CAAC,CAED,cAAeH,gBAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}