{"ast":null,"code":"import _defineProperty from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/GridDataInput.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport RenderTextField from './RenderTextField';\nimport DateSelection from './DateSelection';\nimport QueryExplain from './QueryExplain';\nimport { buildElement, buildImage } from './Builders.jsx';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {\n      marginTop: \"0.5em\"\n    }\n  };\n});\nvar GridDataInput = function GridDataInput(props) {\n  _s();\n  var _useState = useState({\n      loc: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      smry: '',\n      smry_only: '',\n      area_reduce: '',\n      prec: '',\n      units: '',\n      meta: '',\n      output: '',\n      image: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    datastate = _useState2[0],\n    setDatastate = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    notdly = _useState4[0],\n    setNotdly = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    hasInterval = _useState6[0],\n    setHasInterval = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hasElemsError = _useState8[0],\n    setHasElemsError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    mapcontrols = _useState10[0],\n    setMapcontrols = _useState10[1];\n  var datafields = ['loc', 'state', 'bbox', 'sdate', 'edate', 'date', 'grid', 'elems', 'meta', 'output', 'image'];\n  var imagefields = ['info_only', 'proj', 'overlays', 'interp', 'cmap', 'width', 'height', 'levels'];\n  var elementKeys = Object.keys(datastate).filter(function (item) {\n    return ![].concat(datafields, imagefields).includes(item);\n  });\n  var classes = useStyles();\n  var updateParam = function updateParam(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n    props.updateInputParams(update);\n  };\n  var updateElemBuild = function updateElemBuild(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n  };\n  var addElement = function addElement(event) {\n    var action = event.currentTarget.id; //\"add\" or \"replace\"\n    var newElems = JSON.stringify(buildElement(elementKeys, datastate, action));\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      elems: newElems\n    }));\n    props.updateInputParams({\n      elems: newElems\n    });\n    props.updateHelpFor(\"\");\n  };\n  var clearElements = function clearElements() {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      elems: ''\n    }));\n    props.updateInputParams({\n      elems: \"\"\n    });\n    props.updateHelpFor(\"\");\n    setHasInterval(false);\n    setHasElemsError(false);\n  };\n  var updateElems = function updateElems(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n    try {\n      JSON.parse(update.elems);\n      setHasElemsError(false);\n      props.updateInputParams(update);\n    } catch (_unused) {\n      setHasElemsError(true);\n    }\n  };\n  var updateImage = function updateImage(update) {\n    var image = buildImage(imagefields, datastate); //?????????????????????????????\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      image: image\n    }));\n    props.updateInputParams({\n      image: image\n    });\n  };\n  var updateOutput = function updateOutput(update) {\n    if (update.output === 'image') {\n      var image = buildImage(imagefields, datastate);\n      updateParam({\n        output: \"image\",\n        image: image\n      });\n      setMapcontrols(true);\n    } else {\n      updateParam(update);\n    }\n  };\n  var updateHelpFor = function updateHelpFor(helpFor) {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta';\n    } else if (helpFor === 'output') {\n      helpFor = 'grid_output';\n    } else if (helpFor === 'reduce') {\n      helpFor = 'grid_reduce';\n    } else if (helpFor === 'name' || helpFor === 'elems') {\n      helpFor = 'grid_elems';\n    }\n    props.updateHelpFor(helpFor);\n  };\n  var handleMapControlClick = function handleMapControlClick(event) {\n    if (datastate.output !== 'image' || event.target.checked) {\n      var image = event.target.checked ? buildImage(imagefields, datastate) : \"\";\n      updateParam({\n        image: image\n      });\n      setMapcontrols(event.target.checked);\n    }\n  };\n  var checkHasInterval = function checkHasInterval(update) {\n    if (update.elems.length > 0) {\n      try {\n        var _updateElems = JSON.parse(update.elems);\n        var cond = false;\n        _updateElems.forEach(function (ue) {\n          if (ue.hasOwnProperty('interval') && ue.interval.length) {\n            cond = true;\n          }\n        });\n        if (cond !== hasInterval) {\n          setHasInterval(cond);\n        }\n      } catch (_unused2) {\n        console.log('Error parsing elems update: ' + update.elems);\n      }\n    } else {\n      setHasInterval(false);\n    }\n  };\n\n  // Update local variable storage whenever input_params updates\n  useEffect(function () {\n    var newstate = {};\n    datafields.forEach(function (key) {\n      if (props.input_params.hasOwnProperty(key)) {\n        if (key === 'elems' && typeof props.input_params.elems === 'object') {\n          newstate = _objectSpread(_objectSpread({}, newstate), _defineProperty({}, key, JSON.stringify(props.input_params.elems)));\n          checkHasInterval(_defineProperty({}, key, JSON.stringify(props.input_params.elems)));\n        } else {\n          newstate = _objectSpread(_objectSpread({}, newstate), _defineProperty({}, key, props.input_params[key]));\n        }\n      } else {\n        newstate = _objectSpread(_objectSpread({}, newstate), _defineProperty({}, key, ''));\n      }\n    });\n    setDatastate(_objectSpread(_objectSpread({}, datastate), newstate));\n    // eslint-disable-next-line\n  }, [props.input_params]);\n\n  // Check for change to notdly whenever duration or interval changes\n  useEffect(function () {\n    if (datastate.duration) {\n      setNotdly(datastate.duration.length === 3 && datastate.duration !== 'dly' || datastate.duration.length > 0 && !isNaN(Number(datastate.duration)) && (datastate.duration !== \"1\" || datastate.interval !== 'dly' && !(datastate.interval.includes('[') && datastate.interval.length === 7)));\n    }\n  }, [datastate.duration, datastate.interval]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Required input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \"Enter information for one of the grid selection types:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, _this), datastate.state.length === 0 && datastate.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"loc\",\n          fieldlabel: \"Point location\",\n          value: datastate.loc,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, _this), datastate.loc.length === 0 && datastate.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"state\",\n          fieldlabel: \"State\",\n          value: datastate.state,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, _this), datastate.loc.length === 0 && datastate.state.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"bbox\",\n          fieldlabel: \"Bounding box\",\n          value: datastate.bbox,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(DateSelection, {\n          sdate: datastate.sdate,\n          edate: datastate.edate,\n          date: datastate.date,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"grid\",\n          fieldlabel: \"Grid id\",\n          value: datastate.grid,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"elems\",\n          fieldlabel: \"Elements\",\n          value: datastate.elems,\n          options: {\n            style: {\n              width: \"90%\"\n            },\n            multiline: true,\n            placeholder: \"Enter directly or build using Element setup\",\n            error: hasElemsError,\n            helperText: hasElemsError ? \"Error in elements encoding\" : \"\"\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, _this), datastate.elems.includes(\"{\") && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          className: classes.button,\n          onMouseDown: clearElements,\n          children: \"Clear elements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(QueryExplain, {\n          input_params: props.input_params,\n          wstype: \"GridData\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Optional element setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"name\",\n          fieldlabel: \"Name\",\n          value: datastate.name,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, _this), datastate.name.includes(\"dd\") && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"base\",\n          fieldlabel: \"Base\",\n          value: datastate.base,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"interval\",\n          fieldlabel: \"Interval\",\n          value: datastate.interval,\n          options: {\n            disabled: datastate.haveInterval\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"duration\",\n          fieldlabel: \"Duration\",\n          value: datastate.duration,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, _this), datastate.duration === 'std' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"season_start\",\n          fieldlabel: \"Season start\",\n          value: datastate.season_start,\n          options: {\n            required: true\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, _this), notdly && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"reduce\",\n          fieldlabel: \"Reduce\",\n          value: datastate.reduce,\n          options: {\n            required: true\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, _this), notdly && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"maxmissing\",\n          fieldlabel: \"Max missing\",\n          value: datastate.maxmissing,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"smry\",\n          fieldlabel: \"Summary\",\n          value: datastate.smry,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, _this), datastate.smry.length > 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"smry_only\",\n          fieldlabel: \"Summary only\",\n          value: datastate.smry_only,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"units\",\n          fieldlabel: \"Units\",\n          value: datastate.units,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, _this), datastate.loc.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"area_reduce\",\n          fieldlabel: \"Area reduction\",\n          value: datastate.area_reduce,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, _this), datastate.name.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n          id: \"add\",\n          size: \"small\",\n          variant: \"outlined\",\n          className: classes.button,\n          onMouseDown: addElement,\n          children: \"Add element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, _this), datastate.name.length > 0 && datastate.elems.includes(\"{\") && /*#__PURE__*/_jsxDEV(Button, {\n          id: \"replace\",\n          size: \"small\",\n          variant: \"outlined\",\n          className: classes.button,\n          style: {\n            marginLeft: \"0.5em\"\n          },\n          onMouseDown: addElement,\n          children: \"Replace elements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Optional input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"meta\",\n          fieldlabel: \"Meta options\",\n          value: datastate.meta,\n          options: {\n            style: {\n              width: \"95%\"\n            }\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"output\",\n          fieldlabel: \"Output type\",\n          value: datastate.output,\n          options: {\n            disabled: datastate.meta.length && datastate.output === 'json' ? true : false\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            value: mapcontrols,\n            onChange: handleMapControlClick,\n            checked: mapcontrols\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, _this),\n          label: \"Map settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, _this), mapcontrols && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [datastate.output !== 'image' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"info_only\",\n            fieldlabel: \"Info only\",\n            value: datastate.info_only,\n            options: {\n              style: {\n                marginLeft: \"2em\"\n              }\n            },\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"proj\",\n            fieldlabel: \"Proj\",\n            value: datastate.proj,\n            options: {\n              style: {\n                marginLeft: \"2em\"\n              }\n            },\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"overlays\",\n            fieldlabel: \"Overlays\",\n            value: datastate.overlays,\n            options: {\n              style: {\n                marginLeft: \"2em\"\n              }\n            },\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"interp\",\n            fieldlabel: \"Interp\",\n            value: datastate.interp,\n            options: {\n              style: {\n                marginLeft: \"2em\"\n              }\n            },\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"cmap\",\n            fieldlabel: \"Cmap\",\n            value: datastate.cmap,\n            options: {\n              style: {\n                marginLeft: \"2em\"\n              }\n            },\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, _this), datastate.height.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"width\",\n            fieldlabel: \"Width\",\n            value: datastate.width,\n            options: {\n              style: {\n                marginLeft: \"2em\"\n              },\n              required: mapcontrols\n            },\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, _this), datastate.width.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"height\",\n            fieldlabel: \"Height\",\n            value: datastate.height,\n            options: {\n              style: {\n                marginLeft: \"2em\"\n              },\n              required: mapcontrols\n            },\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"levels\",\n            fieldlabel: \"Levels\",\n            value: datastate.levels,\n            options: {\n              style: {\n                marginLeft: \"2em\"\n              }\n            },\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, _this);\n};\n_s(GridDataInput, \"HyHar1EesUzAiCJeIWmFpVz5ass=\", false, function () {\n  return [useStyles];\n});\n_c = GridDataInput;\nexport default GridDataInput;\nvar _c;\n$RefreshReg$(_c, \"GridDataInput\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","Button","FormControlLabel","Switch","RenderTextField","DateSelection","QueryExplain","buildElement","buildImage","makeStyles","useStyles","theme","button","marginTop","GridDataInput","props","loc","state","bbox","sdate","edate","date","grid","elems","name","base","interval","duration","season_start","reduce","maxmissing","smry","smry_only","area_reduce","prec","units","meta","output","image","info_only","proj","overlays","interp","cmap","width","height","levels","datastate","setDatastate","notdly","setNotdly","hasInterval","setHasInterval","hasElemsError","setHasElemsError","mapcontrols","setMapcontrols","datafields","imagefields","elementKeys","Object","keys","filter","item","includes","classes","updateParam","update","updateInputParams","updateElemBuild","addElement","event","action","currentTarget","id","newElems","JSON","stringify","updateHelpFor","clearElements","updateElems","parse","updateImage","updateOutput","helpFor","handleMapControlClick","target","checked","checkHasInterval","length","cond","forEach","ue","hasOwnProperty","console","log","newstate","key","input_params","isNaN","Number","style","multiline","placeholder","error","helperText","disabled","haveInterval","required","marginLeft"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/GridDataInput.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Typography from '@mui/material/Typography'\nimport Grid from '@mui/material/Grid'\nimport Button from '@mui/material/Button'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport QueryExplain from './QueryExplain'\nimport { buildElement, buildImage } from './Builders.jsx'\nimport { makeStyles } from '@mui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginTop: \"0.5em\", \n  }\n}))\n\nconst GridDataInput = (props) => { \n  const [ datastate, setDatastate] = useState({\n    loc: '',\n    state: '',\n    bbox: '',\n    sdate: '',\n    edate: '',\n    date: '',\n    grid: '',\n    elems: '',\n    name: '',\n    base: '',\n    interval: '',\n    duration: '',\n    season_start: '',\n    reduce: '',\n    maxmissing: '',\n    smry: '',\n    smry_only: '',\n    area_reduce: '',\n    prec: '',\n    units: '',\n    meta: '',\n    output: '',\n    image: '',\n    info_only: '',\n    proj: '',\n    overlays: '',\n    interp: '',\n    cmap: '',\n    width: '',\n    height: '',\n    levels: '',\n  })\n\n  const [ notdly, setNotdly ] = useState(false)\n  const [ hasInterval, setHasInterval ] = useState(false)\n  const [ hasElemsError, setHasElemsError ] = useState(false)\n  const [ mapcontrols, setMapcontrols ] = useState(false)\n  \n  const datafields = ['loc','state','bbox','sdate','edate','date','grid','elems','meta','output','image']\n  const imagefields = ['info_only','proj','overlays','interp','cmap','width','height','levels']\n  const elementKeys = Object.keys(datastate).filter(\n    item => (![...datafields, ...imagefields].includes(item)\n  ))\n  \n  const classes = useStyles()\n\n  const updateParam = (update) => {\n    setDatastate({...datastate, ...update})\n    props.updateInputParams(update)\n  }\n\n  const updateElemBuild = (update) => {\n    setDatastate({...datastate, ...update})\n  }\n\n  const addElement = (event) => {\n    const action = event.currentTarget.id   //\"add\" or \"replace\"\n    const newElems = JSON.stringify(buildElement(elementKeys, datastate, action))\n    setDatastate({...datastate, ...{elems: newElems}})\n    props.updateInputParams({elems: newElems})\n    props.updateHelpFor(\"\")\n  }\n\n  const clearElements = () => {\n    setDatastate({...datastate, ...{elems: ''}})\n    props.updateInputParams({elems: \"\"})\n    props.updateHelpFor(\"\")\n    setHasInterval(false)\n    setHasElemsError(false)\n  }\n\n  const updateElems = (update) => {\n    setDatastate({...datastate, ...update})\n    try {\n      JSON.parse(update.elems)\n      setHasElemsError(false)\n      props.updateInputParams(update)\n    } catch {\n      setHasElemsError(true)\n    }\n  }\n\n  const updateImage = (update) => {\n    const image = buildImage(imagefields, datastate) //?????????????????????????????\n    setDatastate({...datastate, ...{image: image}})\n    props.updateInputParams({image: image})\n  }\n\n  const updateOutput = (update) => {\n    if (update.output === 'image') {\n      const image = buildImage(imagefields, datastate)\n      updateParam({output:\"image\", image:image})\n      setMapcontrols(true)\n    } else {\n      updateParam(update)\n    }\n  }\n\n  const updateHelpFor = (helpFor) => {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta'\n    } else if (helpFor === 'output') {\n      helpFor = 'grid_output'\n    } else if (helpFor === 'reduce') {\n      helpFor = 'grid_reduce'\n    } else if (helpFor === 'name' || helpFor === 'elems') {\n      helpFor = 'grid_elems'\n    } \n    props.updateHelpFor(helpFor)\n  }\n  \n  const handleMapControlClick = event => {\n    if (datastate.output !== 'image' || event.target.checked) {\n      const image = event.target.checked ? buildImage(imagefields, datastate) : \"\"\n      updateParam({image: image})\n      setMapcontrols(event.target.checked)\n    }\n  }\n\n  const checkHasInterval = (update) => {\n    if (update.elems.length > 0) {\n      try {\n        let updateElems = JSON.parse(update.elems)\n        let cond = false\n        updateElems.forEach((ue) => {\n          if (ue.hasOwnProperty('interval') && ue.interval.length) {\n            cond = true\n          }\n        })\n        if (cond !== hasInterval) {\n          setHasInterval(cond)\n        }\n      } catch {\n        console.log('Error parsing elems update: ' + update.elems)\n      }\n    } else {\n      setHasInterval(false)\n    }\n  }\n\n  // Update local variable storage whenever input_params updates\n  useEffect(() => {\n    let newstate= {}\n    datafields.forEach((key) => {\n      if (props.input_params.hasOwnProperty(key)) {\n        if (key === 'elems' && typeof props.input_params.elems === 'object') {\n          newstate= ({...newstate, ...{[key]: JSON.stringify(props.input_params.elems)}})\n          checkHasInterval({[key]: JSON.stringify(props.input_params.elems)})\n        } else {\n          newstate= ({...newstate, ...{[key]: props.input_params[key]}})\n        }\n      } else {\n        newstate = ({...newstate, ...{[key]: ''}})\n      }\n    })\n    setDatastate({...datastate, ...newstate})\n    // eslint-disable-next-line\n  }, [props.input_params])\n\n  // Check for change to notdly whenever duration or interval changes\n  useEffect(() => {\n    if (datastate.duration) {\n      setNotdly((datastate.duration.length === 3 && datastate.duration !== 'dly') || \n        (datastate.duration.length > 0 && !isNaN(Number(datastate.duration)) && \n        (datastate.duration !== \"1\" || (datastate.interval !== 'dly' && !(datastate.interval.includes('[') && datastate.interval.length === 7)))))\n    }\n  }, [datastate.duration, datastate.interval])\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Required input\n          </Typography>\n          <Typography variant=\"caption\">\n            Enter information for one of the grid selection types:\n          </Typography>\n          {datastate.state.length === 0 && \n            datastate.bbox.length === 0 && \n            <RenderTextField\n              id=\"loc\"\n              fieldlabel=\"Point location\"\n              value={datastate.loc}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {datastate.loc.length === 0 && \n            datastate.bbox.length === 0 && \n            <RenderTextField\n              id=\"state\"\n              fieldlabel=\"State\"\n              value={datastate.state}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {datastate.loc.length === 0 && \n            datastate.state.length === 0 && \n            <RenderTextField\n              id=\"bbox\"\n              fieldlabel=\"Bounding box\"\n              value={datastate.bbox}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          <DateSelection\n            sdate={datastate.sdate}\n            edate={datastate.edate}\n            date={datastate.date}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"grid\"\n            fieldlabel=\"Grid id\"\n            value={datastate.grid}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"elems\"\n            fieldlabel=\"Elements\"\n            value={datastate.elems}\n            options={{\n              style: {width:\"90%\"}, \n              multiline: true, \n              placeholder: \"Enter directly or build using Element setup\",\n              error: hasElemsError,\n              helperText: hasElemsError ? \"Error in elements encoding\" : \"\",\n            }}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElems}\n          />\n          {datastate.elems.includes(\"{\") &&\n            <Button \n              size=\"small\"\n              variant=\"outlined\"\n              className={classes.button}\n              onMouseDown={clearElements}\n            >\n              Clear elements\n            </Button>\n          }\n          <QueryExplain\n            input_params={props.input_params}\n            wstype=\"GridData\"\n          />\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional element setup\n          </Typography>\n          <RenderTextField\n            id=\"name\"\n            fieldlabel=\"Name\"\n            value={datastate.name}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {datastate.name.includes(\"dd\") &&\n            <RenderTextField\n              id=\"base\"\n              fieldlabel=\"Base\"\n              value={datastate.base}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"interval\"\n            fieldlabel=\"Interval\"\n            value={datastate.interval}\n            options={{disabled:datastate.haveInterval}}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          <RenderTextField\n            id=\"duration\"\n            fieldlabel=\"Duration\"\n            value={datastate.duration}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {datastate.duration === 'std' &&\n            <RenderTextField\n              id=\"season_start\"\n              fieldlabel=\"Season start\"\n              value={datastate.season_start}\n              options={{required:true}}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          {notdly &&\n            <RenderTextField\n              id=\"reduce\"\n              fieldlabel=\"Reduce\"\n              value={datastate.reduce}\n              options={{required:true}}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          {notdly &&\n            <RenderTextField\n              id=\"maxmissing\"\n              fieldlabel=\"Max missing\"\n              value={datastate.maxmissing}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"smry\"\n            fieldlabel=\"Summary\"\n            value={datastate.smry}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {datastate.smry.length > 0 &&\n            <RenderTextField\n              id=\"smry_only\"\n              fieldlabel=\"Summary only\"\n              value={datastate.smry_only}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"units\"\n            fieldlabel=\"Units\"\n            value={datastate.units}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {datastate.loc.length === 0 &&  \n            <RenderTextField\n              id=\"area_reduce\"\n              fieldlabel=\"Area reduction\"\n              value={datastate.area_reduce}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n\n          {datastate.name.length > 0 &&\n            <Button \n              id=\"add\"\n              size=\"small\"\n              variant=\"outlined\"\n              className={classes.button}\n              onMouseDown={addElement}\n            >\n              Add element\n            </Button>\n          }\n          {datastate.name.length > 0 && datastate.elems.includes(\"{\") &&\n            <Button \n              id=\"replace\"\n              size=\"small\"\n              variant=\"outlined\"\n              className={classes.button}\n              style={{marginLeft:\"0.5em\"}}\n              onMouseDown={addElement}\n            >\n              Replace elements\n            </Button>\n          }\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional input\n          </Typography>\n          <RenderTextField\n            id=\"meta\"\n            fieldlabel=\"Meta options\"\n            value={datastate.meta}\n            options={{style: {width:\"95%\"}}}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"output\"\n            fieldlabel=\"Output type\"\n            value={datastate.output}\n            options={{disabled: datastate.meta.length && datastate.output === 'json' ? true : false}}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateOutput}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                value={mapcontrols}\n                onChange={handleMapControlClick}\n                checked={mapcontrols}\n              />\n            }\n            label=\"Map settings\"\n          />\n          {mapcontrols &&\n            <div>\n              {datastate.output !== 'image' &&\n                <RenderTextField\n                  id=\"info_only\"\n                  fieldlabel=\"Info only\"\n                  value={datastate.info_only}\n                  options={{style: {marginLeft:\"2em\"}}}\n                  updateHelpFor={updateHelpFor}\n                  updateParam={updateImage}\n                />\n              }\n              <RenderTextField\n                id=\"proj\"\n                fieldlabel=\"Proj\"\n                value={datastate.proj}\n                options={{style: {marginLeft:\"2em\"}}}\n                updateHelpFor={updateHelpFor}\n                updateParam={updateImage}\n              />\n              <RenderTextField\n                id=\"overlays\"\n                fieldlabel=\"Overlays\"\n                value={datastate.overlays}\n                options={{style: {marginLeft:\"2em\"}}}\n                updateHelpFor={updateHelpFor}\n                updateParam={updateImage}\n              />\n              <RenderTextField\n                id=\"interp\"\n                fieldlabel=\"Interp\"\n                value={datastate.interp}\n                options={{style: {marginLeft:\"2em\"}}}\n                updateHelpFor={updateHelpFor}\n                updateParam={updateImage}\n              />\n              <RenderTextField\n                id=\"cmap\"\n                fieldlabel=\"Cmap\"\n                value={datastate.cmap}\n                options={{style: {marginLeft:\"2em\"}}}\n                updateHelpFor={updateHelpFor}\n                updateParam={updateImage}\n              />\n              {datastate.height.length === 0 &&\n                <RenderTextField\n                  id=\"width\"\n                  fieldlabel=\"Width\"\n                  value={datastate.width}\n                  options={{style: {marginLeft:\"2em\"}, required: mapcontrols}}\n                  updateHelpFor={updateHelpFor}\n                  updateParam={updateImage}\n                />\n              }\n              {datastate.width.length === 0 &&\n                <RenderTextField\n                  id=\"height\"\n                  fieldlabel=\"Height\"\n                  value={datastate.height}\n                  options={{style: {marginLeft:\"2em\"}, required: mapcontrols}}\n                  updateHelpFor={updateHelpFor}\n                  updateParam={updateImage}\n                />\n              }\n              <RenderTextField\n                id=\"levels\"\n                fieldlabel=\"Levels\"\n                value={datastate.levels}\n                options={{style: {marginLeft:\"2em\"}}}\n                updateHelpFor={updateHelpFor}\n                updateParam={updateImage}\n              />\n            </div>\n          }\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default GridDataInput"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}