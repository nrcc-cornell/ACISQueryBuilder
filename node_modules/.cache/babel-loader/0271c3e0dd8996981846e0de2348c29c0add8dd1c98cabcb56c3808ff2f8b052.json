{"ast":null,"code":"import _defineProperty from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/GridDataInput.jsx\";\nimport React, { Component } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport { withStyles } from '@mui/material/styles';\nimport RenderTextField from './RenderTextField';\nimport DateSelection from './DateSelection';\nimport QueryExplain from './QueryExplain';\nimport { buildElement, buildImage } from './Builders.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar styles = {\n  switchBase: {\n    color: \"lightcyan\",\n    '&$checked': {\n      color: \"blue\",\n      '& + $bar': {\n        backgroundColor: \"blue\"\n      }\n    }\n  },\n  checked: {},\n  bar: {},\n  button: {\n    marginTop: \"0.5em\",\n    backgroundColor: \"lightcyan\"\n  }\n};\nvar GridDataInput = /*#__PURE__*/function (_Component) {\n  _inherits(GridDataInput, _Component);\n  var _super = _createSuper(GridDataInput);\n  function GridDataInput(props) {\n    var _this;\n    _classCallCheck(this, GridDataInput);\n    _this = _super.call(this, props);\n    _this.addElement = function () {\n      var newElems = JSON.stringify(buildElement(_this.elementKeys, _this.state));\n      _this.setState({\n        elems: newElems,\n        haveInterval: true\n      });\n      _this.props.updateInputParams({\n        elems: newElems\n      });\n    };\n    _this.clearElements = function () {\n      _this.setState({\n        elems: '',\n        haveInterval: false\n      });\n      _this.props.updateInputParams({\n        elems: \"\"\n      });\n    };\n    _this.replaceElements = function () {\n      _this.setState({\n        elems: ''\n      }, _this.addElement);\n    };\n    _this.updateHelpFor = function (helpFor) {\n      if (helpFor === 'meta') {\n        helpFor = 'grid_meta';\n      } else if (helpFor === 'output') {\n        helpFor = 'grid_output';\n      } else if (helpFor === 'reduce') {\n        helpFor = 'grid_reduce';\n      } else if (helpFor === 'name' || helpFor === 'elems') {\n        helpFor = 'grid_elems';\n      }\n      _this.props.updateAppState({\n        helpFor: helpFor\n      });\n    };\n    _this.updateParam = function (update) {\n      _this.setState(update);\n      _this.props.updateInputParams(update);\n    };\n    _this.updateElems = function (update) {\n      if (update.elems.length === 0) {\n        _this.setState({\n          haveInterval: false\n        });\n      }\n      _this.updateParam(update);\n    };\n    _this.updateElemBuild = function (update) {\n      _this.setState(update);\n    };\n    _this.updateImage = function (update) {\n      _this.setState(update, function () {\n        var image = buildImage(_this.imagefields, _this.state);\n        _this.updateParam({\n          image: image\n        });\n      });\n    };\n    _this.updateOutput = function (update) {\n      if (update.output === 'image') {\n        var image = buildImage(_this.imagefields, _this.state);\n        _this.updateParam({\n          output: \"image\",\n          image: image\n        });\n        _this.setState({\n          mapcontrols: true\n        });\n      } else {\n        _this.updateParam(update);\n      }\n    };\n    _this.handleMapControlClick = function (event) {\n      if (_this.state.output !== 'image' || event.target.checked) {\n        var image = event.target.checked ? buildImage(_this.imagefields, _this.state) : \"\";\n        _this.updateParam({\n          image: image\n        });\n        _this.setState({\n          mapcontrols: event.target.checked\n        });\n      }\n    };\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      if (_this.state !== nextState) {\n        return true;\n      } else if (_this.props !== nextProps) {\n        return _this.datafields.some(function (key) {\n          return nextProps.input_params.hasOwnProperty(key) && _this.state[key] !== nextProps.input_params[key] || !nextProps.input_params.hasOwnProperty(key) && _this.state[key] !== '';\n        });\n      } else {\n        return false;\n      }\n    };\n    _this.state = {\n      loc: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      smry: '',\n      smry_only: '',\n      area_reduce: '',\n      prec: '',\n      units: '',\n      meta: '',\n      output: '',\n      image: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: '',\n      mapcontrols: '',\n      haveInterval: false\n    };\n    _this.datafields = ['loc', 'state', 'bbox', 'sdate', 'edate', 'date', 'grid', 'elems', 'meta', 'output', 'image'];\n    _this.imagefields = ['info_only', 'proj', 'overlays', 'interp', 'cmap', 'width', 'height', 'levels'];\n    _this.elementKeys = Object.keys(_this.state).filter(function (item) {\n      return ![\"mapcontrols\", \"haveInterval\"].concat(_toConsumableArray(_this.datafields), _toConsumableArray(_this.imagefields)).includes(item);\n    });\n    return _this;\n  }\n  _createClass(GridDataInput, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n      if (this.props.input_params !== prevProps.input_params) {\n        this.datafields.forEach(function (key) {\n          if (_this2.props.input_params.hasOwnProperty(key) && _this2.state[key] !== _this2.props.input_params[key]) {\n            if (key === 'elems' && typeof _this2.props.input_params.elems === 'object') {\n              _this2.setState(_defineProperty({}, key, JSON.stringify(_this2.props.input_params[key])));\n            } else {\n              _this2.setState(_defineProperty({}, key, _this2.props.input_params[key]));\n            }\n          } else if (!_this2.props.input_params.hasOwnProperty(key) && _this2.state[key] !== '') {\n            _this2.setState(_defineProperty({}, key, ''));\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var notdly = this.state.duration.length === 3 && this.state.duration !== 'dly' || this.state.duration.length > 0 && !isNaN(Number(this.state.duration)) && (this.state.duration !== \"1\" || this.state.interval !== 'dly' && !(this.state.interval.includes('[') && this.state.interval.length === 7));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Required input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: \"Enter information for one of the grid selection types:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), this.state.state.length === 0 && this.state.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"loc\",\n              fieldlabel: \"Point location\",\n              value: this.state.loc,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateParam\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), this.state.loc.length === 0 && this.state.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"state\",\n              fieldlabel: \"State\",\n              value: this.state.state,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateParam\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), this.state.loc.length === 0 && this.state.state.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"bbox\",\n              fieldlabel: \"Bounding box\",\n              value: this.state.bbox,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateParam\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DateSelection, {\n              sdate: this.state.sdate,\n              edate: this.state.edate,\n              date: this.state.date,\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateParam\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"grid\",\n              fieldlabel: \"Grid id\",\n              value: this.state.grid,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateParam\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"elems\",\n              fieldlabel: \"Elements\",\n              value: this.state.elems,\n              options: {\n                style: {\n                  width: \"90%\"\n                },\n                multiline: true,\n                placeholder: \"Enter directly or build using Element setup\"\n              },\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), this.state.elems.includes(\"{\") && /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              className: classes.button,\n              onMouseDown: this.clearElements,\n              children: \"Clear elements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(QueryExplain, {\n              input_params: this.props.input_params,\n              wstype: \"GridData\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Optional element setup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"name\",\n              fieldlabel: \"Name\",\n              value: this.state.name,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), this.state.name.includes(\"dd\") && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"base\",\n              fieldlabel: \"Base\",\n              value: this.state.base,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"interval\",\n              fieldlabel: \"Interval\",\n              value: this.state.interval,\n              options: {\n                disabled: this.state.haveInterval\n              },\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"duration\",\n              fieldlabel: \"Duration\",\n              value: this.state.duration,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), this.state.duration === 'std' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"season_start\",\n              fieldlabel: \"Season start\",\n              value: this.state.season_start,\n              options: {\n                required: true\n              },\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), notdly && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"reduce\",\n              fieldlabel: \"Reduce\",\n              value: this.state.reduce,\n              options: {\n                required: true\n              },\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), notdly && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"maxmissing\",\n              fieldlabel: \"Max missing\",\n              value: this.state.maxmissing,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"smry\",\n              fieldlabel: \"Summary\",\n              value: this.state.smry,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), this.state.smry.length > 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"smry_only\",\n              fieldlabel: \"Summary only\",\n              value: this.state.smry_only,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"units\",\n              fieldlabel: \"Units\",\n              value: this.state.units,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), this.state.loc.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"area_reduce\",\n              fieldlabel: \"Area reduction\",\n              value: this.state.area_reduce,\n              options: {},\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateElemBuild\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), this.state.name.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              className: classes.button,\n              onMouseDown: this.addElement,\n              children: \"Add element\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), this.state.name.length > 0 && this.state.elems.includes(\"{\") && /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              style: {\n                marginTop: \"0.5em\",\n                marginLeft: \"0.5em\",\n                backgroundColor: \"lightcyan\"\n              },\n              onMouseDown: this.replaceElements,\n              children: \"Replace elements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Optional input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"meta\",\n              fieldlabel: \"Meta options\",\n              value: this.state.meta,\n              options: {\n                style: {\n                  width: \"95%\"\n                }\n              },\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateParam\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n              id: \"output\",\n              fieldlabel: \"Output type\",\n              value: this.state.output,\n              options: {\n                disabled: this.state.meta.length && this.state.output === 'json' ? true : false\n              },\n              updateHelpFor: this.updateHelpFor,\n              updateParam: this.updateOutput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                value: this.state.mapcontrols,\n                onChange: this.handleMapControlClick,\n                checked: this.state.mapcontrols,\n                classes: {\n                  switchBase: classes.switchBase,\n                  checked: classes.checked,\n                  bar: classes.bar\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this),\n              label: \"Map settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), this.state.mapcontrols && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [this.state.output !== 'image' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n                id: \"info_only\",\n                fieldlabel: \"Info only\",\n                value: this.state.info_only,\n                options: {\n                  style: {\n                    marginLeft: \"2em\"\n                  }\n                },\n                updateHelpFor: this.updateHelpFor,\n                updateParam: this.updateImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n                id: \"proj\",\n                fieldlabel: \"Proj\",\n                value: this.state.proj,\n                options: {\n                  style: {\n                    marginLeft: \"2em\"\n                  }\n                },\n                updateHelpFor: this.updateHelpFor,\n                updateParam: this.updateImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n                id: \"overlays\",\n                fieldlabel: \"Overlays\",\n                value: this.state.overlays,\n                options: {\n                  style: {\n                    marginLeft: \"2em\"\n                  }\n                },\n                updateHelpFor: this.updateHelpFor,\n                updateParam: this.updateImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n                id: \"interp\",\n                fieldlabel: \"Interp\",\n                value: this.state.interp,\n                options: {\n                  style: {\n                    marginLeft: \"2em\"\n                  }\n                },\n                updateHelpFor: this.updateHelpFor,\n                updateParam: this.updateImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n                id: \"cmap\",\n                fieldlabel: \"Cmap\",\n                value: this.state.cmap,\n                options: {\n                  style: {\n                    marginLeft: \"2em\"\n                  }\n                },\n                updateHelpFor: this.updateHelpFor,\n                updateParam: this.updateImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this), this.state.height.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n                id: \"width\",\n                fieldlabel: \"Width\",\n                value: this.state.width,\n                options: {\n                  style: {\n                    marginLeft: \"2em\"\n                  },\n                  required: this.state.mapcontrols\n                },\n                updateHelpFor: this.updateHelpFor,\n                updateParam: this.updateImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 21\n              }, this), this.state.width.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n                id: \"height\",\n                fieldlabel: \"Height\",\n                value: this.state.height,\n                options: {\n                  style: {\n                    marginLeft: \"2em\"\n                  },\n                  required: this.state.mapcontrols\n                },\n                updateHelpFor: this.updateHelpFor,\n                updateParam: this.updateImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n                id: \"levels\",\n                fieldlabel: \"Levels\",\n                value: this.state.levels,\n                options: {\n                  style: {\n                    marginLeft: \"2em\"\n                  }\n                },\n                updateHelpFor: this.updateHelpFor,\n                updateParam: this.updateImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this);\n    }\n  }]);\n  return GridDataInput;\n}(Component);\nexport default withStyles(styles)(GridDataInput);","map":{"version":3,"names":["React","Component","Typography","Grid","Button","FormControlLabel","Switch","withStyles","RenderTextField","DateSelection","QueryExplain","buildElement","buildImage","styles","switchBase","color","backgroundColor","checked","bar","button","marginTop","GridDataInput","props","addElement","newElems","JSON","stringify","elementKeys","state","setState","elems","haveInterval","updateInputParams","clearElements","replaceElements","updateHelpFor","helpFor","updateAppState","updateParam","update","updateElems","length","updateElemBuild","updateImage","image","imagefields","updateOutput","output","mapcontrols","handleMapControlClick","event","target","shouldComponentUpdate","nextProps","nextState","datafields","some","key","input_params","hasOwnProperty","loc","bbox","sdate","edate","date","grid","name","base","interval","duration","season_start","reduce","maxmissing","smry","smry_only","area_reduce","prec","units","meta","info_only","proj","overlays","interp","cmap","width","height","levels","Object","keys","filter","item","includes","prevProps","forEach","classes","notdly","isNaN","Number","style","multiline","placeholder","disabled","required","marginLeft"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/GridDataInput.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport Typography from '@mui/material/Typography'\nimport Grid from '@mui/material/Grid'\nimport Button from '@mui/material/Button'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport { withStyles } from '@mui/material/styles'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport QueryExplain from './QueryExplain'\nimport { buildElement, buildImage } from './Builders.jsx'\n\nconst styles = {\n  switchBase: {\n    color: \"lightcyan\",\n    '&$checked': {\n      color: \"blue\",\n      '& + $bar': {\n        backgroundColor: \"blue\",\n      },\n    },\n  },\n  checked: {},\n  bar: {},\n  button: {\n    marginTop: \"0.5em\", \n    backgroundColor: \"lightcyan\",\n  }\n}\n\nclass GridDataInput extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      loc: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      smry: '',\n      smry_only: '',\n      area_reduce: '',\n      prec: '',\n      units: '',\n      meta: '',\n      output: '',\n      image: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: '',\n      mapcontrols: '',\n      haveInterval: false,\n    }\n    this.datafields = ['loc','state','bbox','sdate','edate','date','grid','elems','meta','output','image']\n    this.imagefields = ['info_only','proj','overlays','interp','cmap','width','height','levels']\n    this.elementKeys = Object.keys(this.state).filter(\n      item => (![\"mapcontrols\",\"haveInterval\",...this.datafields,...this.imagefields].includes(item)\n    ))\n  }\n\n  addElement = () => {\n    const newElems = JSON.stringify(buildElement(this.elementKeys, this.state))\n    this.setState({\n      elems: newElems,\n      haveInterval: true,\n    })\n    this.props.updateInputParams({elems: newElems})\n  }\n\n  clearElements = () => {\n    this.setState({\n      elems: '',\n      haveInterval: false,\n    })\n    this.props.updateInputParams({elems: \"\"})\n  }\n  \n  replaceElements = () => {\n    this.setState({\n      elems: ''\n    }, this.addElement)\n  }\n\n  updateHelpFor = (helpFor) => {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta'\n    } else if (helpFor === 'output') {\n      helpFor = 'grid_output'\n    } else if (helpFor === 'reduce') {\n      helpFor = 'grid_reduce'\n    } else if (helpFor === 'name' || helpFor === 'elems') {\n      helpFor = 'grid_elems'\n    } \n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n  \n  updateElems = (update) => {\n    if (update.elems.length === 0) {\n      this.setState({haveInterval: false})\n    }\n    this.updateParam(update)\n  }\n\n  updateElemBuild = (update) => {\n    this.setState(update)\n  }\n\n  updateImage = (update) => {\n    this.setState(update, () => {\n      const image = buildImage(this.imagefields, this.state)\n      this.updateParam({image: image})\n    })\n  }\n\n  updateOutput = (update) => {\n    if (update.output === 'image') {\n      const image = buildImage(this.imagefields, this.state)\n      this.updateParam({output:\"image\", image:image})\n      this.setState({\n        mapcontrols: true,\n      })\n    } else {\n      this.updateParam(update)\n    }\n  }\n\n  handleMapControlClick = event => {\n    if (this.state.output !== 'image' || event.target.checked) {\n      const image = event.target.checked ? buildImage(this.imagefields, this.state) : \"\"\n      this.updateParam({image: image})\n      this.setState({\n        mapcontrols: event.target.checked, \n      })\n    }\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.datafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.datafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          if (key === 'elems' && typeof this.props.input_params.elems === 'object') {\n            this.setState({[key]: JSON.stringify(this.props.input_params[key])})\n          } else {\n            this.setState({[key]: this.props.input_params[key]})\n          }\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n  \n  render () {\n    const { classes } = this.props\n    const notdly = (this.state.duration.length === 3 && this.state.duration !== 'dly') || \n      (this.state.duration.length > 0 && !isNaN(Number(this.state.duration)) && \n      (this.state.duration !== \"1\" || (this.state.interval !== 'dly' && !(this.state.interval.includes('[') && this.state.interval.length === 7))))\n    return (\n        <div>\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Required input\n              </Typography>\n              <Typography variant=\"caption\">\n                Enter information for one of the grid selection types:\n              </Typography>\n              {this.state.state.length === 0 && \n               this.state.bbox.length === 0 && \n                <RenderTextField\n                  id=\"loc\"\n                  fieldlabel=\"Point location\"\n                  value={this.state.loc}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 && \n               this.state.bbox.length === 0 && \n                <RenderTextField\n                  id=\"state\"\n                  fieldlabel=\"State\"\n                  value={this.state.state}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 && \n               this.state.state.length === 0 && \n                <RenderTextField\n                  id=\"bbox\"\n                  fieldlabel=\"Bounding box\"\n                  value={this.state.bbox}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              <DateSelection\n                sdate={this.state.sdate}\n                edate={this.state.edate}\n                date={this.state.date}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"grid\"\n                fieldlabel=\"Grid id\"\n                value={this.state.grid}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"elems\"\n                fieldlabel=\"Elements\"\n                value={this.state.elems}\n                options={{style: {width:\"90%\"}, multiline: true, placeholder: \"Enter directly or build using Element setup\"}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElems}\n              />\n              {this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  className={classes.button}\n                  onMouseDown={this.clearElements}\n                >\n                  Clear elements\n                </Button>\n              }\n              <QueryExplain\n                input_params={this.props.input_params}\n                wstype=\"GridData\"\n              />\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional element setup\n              </Typography>\n              <RenderTextField\n                id=\"name\"\n                fieldlabel=\"Name\"\n                value={this.state.name}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.name.includes(\"dd\") &&\n                <RenderTextField\n                  id=\"base\"\n                  fieldlabel=\"Base\"\n                  value={this.state.base}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"interval\"\n                fieldlabel=\"Interval\"\n                value={this.state.interval}\n                options={{disabled:this.state.haveInterval}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"duration\"\n                fieldlabel=\"Duration\"\n                value={this.state.duration}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.duration === 'std' &&\n                <RenderTextField\n                  id=\"season_start\"\n                  fieldlabel=\"Season start\"\n                  value={this.state.season_start}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"reduce\"\n                  fieldlabel=\"Reduce\"\n                  value={this.state.reduce}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"maxmissing\"\n                  fieldlabel=\"Max missing\"\n                  value={this.state.maxmissing}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"smry\"\n                fieldlabel=\"Summary\"\n                value={this.state.smry}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.smry.length > 0 &&\n                <RenderTextField\n                  id=\"smry_only\"\n                  fieldlabel=\"Summary only\"\n                  value={this.state.smry_only}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"units\"\n                fieldlabel=\"Units\"\n                value={this.state.units}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.loc.length === 0 &&  \n                <RenderTextField\n                  id=\"area_reduce\"\n                  fieldlabel=\"Area reduction\"\n                  value={this.state.area_reduce}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n\n              {this.state.name.length > 0 &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  className={classes.button}\n                  onMouseDown={this.addElement}\n                >\n                  Add element\n                </Button>\n              }\n              {this.state.name.length > 0 && this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", marginLeft:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.replaceElements}\n                >\n                  Replace elements\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional input\n              </Typography>\n              <RenderTextField\n                id=\"meta\"\n                fieldlabel=\"Meta options\"\n                value={this.state.meta}\n                options={{style: {width:\"95%\"}}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"output\"\n                fieldlabel=\"Output type\"\n                value={this.state.output}\n                options={{disabled: this.state.meta.length && this.state.output === 'json' ? true : false}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateOutput}\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    value={this.state.mapcontrols}\n                    onChange={this.handleMapControlClick}\n                    checked={this.state.mapcontrols}\n                    classes={{\n                      switchBase: classes.switchBase, \n                      checked: classes.checked,\n                      bar: classes.bar,\n                    }}\n                  />\n                }\n                label=\"Map settings\"\n              />\n              {this.state.mapcontrols &&\n                <div>\n                  {this.state.output !== 'image' &&\n                    <RenderTextField\n                      id=\"info_only\"\n                      fieldlabel=\"Info only\"\n                      value={this.state.info_only}\n                      options={{style: {marginLeft:\"2em\"}}}\n                      updateHelpFor={this.updateHelpFor}\n                      updateParam={this.updateImage}\n                    />\n                  }\n                  <RenderTextField\n                    id=\"proj\"\n                    fieldlabel=\"Proj\"\n                    value={this.state.proj}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  <RenderTextField\n                    id=\"overlays\"\n                    fieldlabel=\"Overlays\"\n                    value={this.state.overlays}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  <RenderTextField\n                    id=\"interp\"\n                    fieldlabel=\"Interp\"\n                    value={this.state.interp}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  <RenderTextField\n                    id=\"cmap\"\n                    fieldlabel=\"Cmap\"\n                    value={this.state.cmap}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  {this.state.height.length === 0 &&\n                    <RenderTextField\n                      id=\"width\"\n                      fieldlabel=\"Width\"\n                      value={this.state.width}\n                      options={{style: {marginLeft:\"2em\"}, required: this.state.mapcontrols}}\n                      updateHelpFor={this.updateHelpFor}\n                      updateParam={this.updateImage}\n                    />\n                  }\n                  {this.state.width.length === 0 &&\n                    <RenderTextField\n                      id=\"height\"\n                      fieldlabel=\"Height\"\n                      value={this.state.height}\n                      options={{style: {marginLeft:\"2em\"}, required: this.state.mapcontrols}}\n                      updateHelpFor={this.updateHelpFor}\n                      updateParam={this.updateImage}\n                    />\n                  }\n                  <RenderTextField\n                    id=\"levels\"\n                    fieldlabel=\"Levels\"\n                    value={this.state.levels}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                </div>\n              }\n            </Grid>\n          </Grid>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(GridDataInput)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}