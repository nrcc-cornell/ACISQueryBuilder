{"ast":null,"code":"import _objectSpread from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/Output.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport ResultsButtons from './ResultsButtons';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    gobutton: {\n      marginLeft: \"3em\",\n      backgroundColor: \"forestgreen\"\n    }\n  };\n});\nvar Output = function Output(props) {\n  _s();\n  var _useState = useState({\n      input_params_string: \"\",\n      results: \"\",\n      results_json: {},\n      format: \"normal\",\n      isCsv: false,\n      selectedButton: \"JSON\",\n      dataimage: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    datastate = _useState2[0],\n    setDatastate = _useState2[1];\n  var classes = useStyles();\n\n  // user changed parameter string\n  var handleParamsChange = function handleParamsChange(event) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      input_params_string: event.target.value,\n      results: ''\n    }));\n    props.changedInput(event.target.value);\n  };\n\n  // submit parameter string to server\n  var handleSubmit = function handleSubmit() {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      results: \"Submitting request ...\",\n      isCsv: props.input_params.output === 'csv',\n      dataimage: \"\"\n    }));\n    var url = props.acisServer + props.generalArea;\n    if (props.input_params.output !== \"image\") {\n      fetch(url, {\n        method: 'POST',\n        body: datastate.input_params_string,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.ok && !datastate.isCsv ? response.json() : response.text();\n      }).then(function (data) {\n        return setDatastate(_objectSpread(_objectSpread({}, datastate), {\n          results: typeof data === 'object' ? JSON.stringify(data, null, 0) : data,\n          results_json: data,\n          format: typeof data === 'string' ? \"pre\" : \"normal\",\n          selectedButton: typeof data === 'object' ? \"JSON\" : \"\"\n        }));\n      }).catch(function (error) {\n        return setDatastate(_objectSpread(_objectSpread({}, datastate), {\n          results: 'Error: ' + error.message\n        }));\n      });\n    } else {\n      setDatastate(_objectSpread(_objectSpread({}, datastate), {\n        results: \"image\",\n        results_json: '',\n        format: 'normal',\n        dataimage: url + '?params=' + datastate.input_params_string,\n        selectedButton: ''\n      }));\n    }\n  };\n  var basicFormat = function basicFormat(results_json) {\n    var results_string = \"\";\n    var dataimage = \"\";\n    Object.keys(results_json).forEach(function (key) {\n      if (key === 'data' && results_json[key].includes(\"image/png;base64\")) {\n        dataimage = results_json[key];\n      } else if (Array.isArray(results_json[key])) {\n        results_string += key + \":\\n\";\n        results_json[key].forEach(function (item) {\n          results_string += \" \" + JSON.stringify(item) + \"\\n\";\n        });\n      } else {\n        results_string += key + \":\\n\";\n        results_string += \" \" + JSON.stringify(results_json[key]) + \"\\n\";\n      }\n    });\n    return {\n      results_string: results_string,\n      dataimage: dataimage\n    };\n  };\n\n  // user clicked one of the format buttons\n  var handleFormat = function handleFormat(results_button) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      selectedButton: results_button\n    }));\n    if (results_button === \"Basic format\") {\n      var basicFormatResults = basicFormat(datastate.results_json);\n      setDatastate(_objectSpread(_objectSpread({}, datastate), {\n        results: basicFormatResults.results_string,\n        format: \"pre-wrap\",\n        dataimage: basicFormatResults.dataimage.length > 0 ? basicFormatResults.dataimage : ''\n      }));\n    } else if (results_button === \"JSON\") {\n      setDatastate(_objectSpread(_objectSpread({}, datastate), {\n        results: JSON.stringify(datastate.results_json, null, 0),\n        format: \"normal\",\n        dataimage: \"\"\n      }));\n    } else if (results_button === \"Full format\") {\n      var hasImage = datastate.results_json.hasOwnProperty(\"data\") && datastate.results_json.data.includes(\"image/png;base64\");\n      setDatastate(_objectSpread(_objectSpread({}, datastate), {\n        results: JSON.stringify(datastate.results_json, null, 2),\n        format: \"pre-wrap\",\n        dataimage: hasImage ? datastate.results_json.data : ''\n      }));\n    } else {\n      console.log('Error: unknown format button');\n    }\n  };\n\n  // JSON parameters object needs to be stringified for display in text box\n  useEffect(function () {\n    var newparams = props.input_params;\n    if (Object.keys(props.input_params).length === 0) {\n      setDatastate(_objectSpread(_objectSpread({}, datastate), {\n        results: ''\n      }));\n    }\n    //if (props.input_params.hasOwnProperty(\"elems\") && props.input_params.elems.includes(\"{\")) {\n    //  const parsed_elems = JSON.parse(props.input_params.elems)\n    //  newparams = ({...newparams, ...{elems: parsed_elems}})\n    //}\n    // empty bbox has to be converted from string to empty array in parameters string\n    if (props.input_params.hasOwnProperty('bbox') && props.input_params.bbox === \"[]\") {\n      newparams = _objectSpread(_objectSpread({}, newparams), {\n        bbox: []\n      });\n    }\n    var input_params_string = JSON.stringify(newparams);\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      input_params_string: input_params_string\n    }));\n    // eslint-disable-next-line\n  }, [props.input_params]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 0,\n    style: {\n      marginTop: \"1em\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [\"Parameters (JSON)\", datastate.input_params_string.length > 2 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        className: classes.gobutton,\n        onMouseDown: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"params\",\n      value: datastate.input_params_string,\n      margin: \"dense\",\n      variant: \"outlined\",\n      error: props.hasParamsError,\n      helperText: props.hasParamsError ? \"Error in Parameters encoding\" : \"\",\n      multiline: true,\n      fullWidth: true,\n      inputProps: {\n        style: {\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontSize: \"95%\"\n        }\n      },\n      onChange: handleParamsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, _this), datastate.results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [datastate.results !== \"image\" && /*#__PURE__*/_jsxDEV(ResultsButtons, {\n        handleFormat: handleFormat,\n        showButtons: !datastate.isCsv,\n        selectedButton: datastate.selectedButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 0,\n        style: {\n          border: \"1px solid lightgray\",\n          margin: \"0\",\n          padding: \"5px\",\n          fontFamily: \"Arial, Helvetica, sans-serif\",\n          fontSize: \"95%\"\n        },\n        children: [datastate.dataimage.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n            children: datastate.dataimage.includes(\"http\") ? \"Returned image\" : \"data (as image)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: datastate.dataimage,\n            alt: \"map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, _this), !datastate.dataimage.includes(\"http\") && /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            whiteSpace: datastate.format,\n            wordBreak: \"break-word\"\n          },\n          children: datastate.results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, _this);\n};\n_s(Output, \"IS4ipENdCSJATtutX3Vs10v/Zcw=\", false, function () {\n  return [useStyles];\n});\n_c = Output;\nexport default Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Button","TextField","Paper","ResultsButtons","makeStyles","useStyles","theme","gobutton","marginLeft","backgroundColor","Output","props","input_params_string","results","results_json","format","isCsv","selectedButton","dataimage","datastate","setDatastate","classes","handleParamsChange","event","target","value","changedInput","handleSubmit","input_params","output","url","acisServer","generalArea","fetch","method","body","headers","then","response","ok","json","text","data","JSON","stringify","catch","error","message","basicFormat","results_string","Object","keys","forEach","key","includes","Array","isArray","item","handleFormat","results_button","basicFormatResults","length","hasImage","hasOwnProperty","console","log","newparams","bbox","marginTop","hasParamsError","style","fontFamily","fontSize","border","margin","padding","whiteSpace","wordBreak"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/Output.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Typography from '@mui/material/Typography'\nimport Button from '@mui/material/Button'\nimport TextField from '@mui/material/TextField'\nimport Paper from '@mui/material/Paper'\nimport ResultsButtons from './ResultsButtons'\nimport { makeStyles } from '@mui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  gobutton: {\n    marginLeft:\"3em\", \n    backgroundColor:\"forestgreen\"},\n}))\n\nconst Output = (props) => {\n  const [ datastate, setDatastate ] = useState({\n    input_params_string: \"\",\n    results: \"\",\n    results_json: {},\n    format: \"normal\",\n    isCsv: false,\n    selectedButton: \"JSON\",\n    dataimage: \"\",\n  })\n  const classes = useStyles()\n\n  // user changed parameter string\n  const handleParamsChange = event => {\n    setDatastate({...datastate, ...{\n      input_params_string: event.target.value,\n      results: '',\n    }})\n    props.changedInput(event.target.value)\n  }  \n\n  // submit parameter string to server\n  const handleSubmit = () => {\n    setDatastate({...datastate, ...{\n      results: \"Submitting request ...\", \n      isCsv: props.input_params.output === 'csv', \n      dataimage: \"\"\n    }})\n    const url = props.acisServer + props.generalArea\n    if (props.input_params.output !== \"image\") {\n      fetch(url, {\n        method: 'POST',\n        body: datastate.input_params_string,\n        headers: {'Content-Type': 'application/json'}\n      })\n        .then(response => response.ok && !datastate.isCsv ? response.json() : response.text())\n        .then(data => setDatastate({...datastate, ...{\n          results: typeof data === 'object' ? JSON.stringify(data,null,0) : data,\n          results_json: data,\n          format: typeof data === 'string' ? \"pre\" : \"normal\",\n          selectedButton: typeof data === 'object' ? \"JSON\" : \"\"\n        }}))\n        .catch(error => setDatastate({...datastate, ...{\n          results: 'Error: ' + error.message\n        }}))\n    } else {\n      setDatastate({...datastate, ...{\n        results: \"image\",\n        results_json: '',\n        format: 'normal',\n        dataimage: url + '?params=' + datastate.input_params_string, \n        selectedButton: ''\n      }})\n    }\n  }\n\n  const basicFormat = (results_json) => {\n    let results_string = \"\"\n    let dataimage = \"\"\n    Object.keys(results_json).forEach(key => {\n      if (key === 'data' && results_json[key].includes(\"image/png;base64\")) {\n        dataimage =results_json[key]\n      } else if (Array.isArray(results_json[key])) {\n        results_string += key + \":\\n\"\n        results_json[key].forEach(item => {\n          results_string += \" \" + JSON.stringify(item) + \"\\n\"\n        }) \n      } else {\n        results_string += key + \":\\n\"\n        results_string += \" \" + JSON.stringify(results_json[key]) + \"\\n\"\n      }\n    })\n    return {results_string: results_string, dataimage: dataimage}\n  }\n\n  // user clicked one of the format buttons\n  const handleFormat = (results_button) => {\n    setDatastate({...datastate, ...{\n      selectedButton: results_button\n    }})\n    if (results_button === \"Basic format\") {\n      const basicFormatResults = basicFormat(datastate.results_json)\n      setDatastate({...datastate, ...{\n        results: basicFormatResults.results_string,\n        format:\"pre-wrap\", \n        dataimage: basicFormatResults.dataimage.length > 0 ? basicFormatResults.dataimage : '',\n      }})\n    } else if (results_button === \"JSON\") {\n      setDatastate({...datastate, ...{\n        results: JSON.stringify(datastate.results_json,null,0), \n        format:\"normal\", \n        dataimage: \"\",\n      }})\n    } else if (results_button === \"Full format\") {\n      const hasImage = datastate.results_json.hasOwnProperty(\"data\") && datastate.results_json.data.includes(\"image/png;base64\")\n      setDatastate({...datastate, ...{\n        results: JSON.stringify(datastate.results_json,null,2), \n        format: \"pre-wrap\", \n        dataimage: hasImage ? datastate.results_json.data : ''\n      }})\n    } else {\n      console.log('Error: unknown format button')\n    }\n  }\n\n\n  // JSON parameters object needs to be stringified for display in text box\n  useEffect(() => {\n    let newparams = props.input_params\n    if (Object.keys(props.input_params).length === 0) {\n      setDatastate({...datastate, ...{results:''}})\n    }\n    //if (props.input_params.hasOwnProperty(\"elems\") && props.input_params.elems.includes(\"{\")) {\n    //  const parsed_elems = JSON.parse(props.input_params.elems)\n    //  newparams = ({...newparams, ...{elems: parsed_elems}})\n    //}\n    // empty bbox has to be converted from string to empty array in parameters string\n    if (props.input_params.hasOwnProperty('bbox') && props.input_params.bbox === \"[]\") {\n      newparams = ({...newparams, ...{bbox: []}})\n    }\n    const input_params_string = JSON.stringify(newparams)\n    setDatastate({...datastate, ...{input_params_string}})\n    // eslint-disable-next-line\n  }, [props.input_params])\n\n  return (\n    <Paper elevation={0} style={{marginTop:\"1em\"}}>\n      <Typography variant=\"h6\">\n        Parameters (JSON)\n        {datastate.input_params_string.length > 2 &&\n          <Button \n            variant=\"contained\"\n            size=\"small\"\n            className={classes.gobutton}\n            onMouseDown={handleSubmit}\n          >\n            Submit\n          </Button>\n        }\n      </Typography>\n      <TextField\n        id=\"params\"\n        value={datastate.input_params_string}\n        margin=\"dense\"\n        variant=\"outlined\"\n        error={props.hasParamsError}\n        helperText={props.hasParamsError ? \"Error in Parameters encoding\" : \"\"}\n        multiline={true}\n        fullWidth={true}\n        inputProps={{style:{fontFamily:\"Arial, Helvetica, sans-serif\", fontSize:\"95%\"}}}\n        onChange={handleParamsChange}\n      />\n\n      {datastate.results.length > 0 && \n        <div>\n          {datastate.results !== \"image\" &&\n            <ResultsButtons\n              handleFormat={handleFormat}\n              showButtons={!datastate.isCsv}\n              selectedButton={datastate.selectedButton}\n            />\n          }\n          <Paper \n            elevation={0} \n            style={{\n              border:\"1px solid lightgray\", \n              margin:\"0\", \n              padding:\"5px\", \n              fontFamily:\"Arial, Helvetica, sans-serif\", \n              fontSize:\"95%\"\n            }}\n          >\n            {datastate.dataimage.length > 0 &&\n              <div>\n                <pre>\n                  {datastate.dataimage.includes(\"http\") ? \"Returned image\" : \"data (as image)\"}\n                </pre>\n                <img src={datastate.dataimage} alt=\"map\" />\n              </div>\n            }\n            {!datastate.dataimage.includes(\"http\") &&\n              <pre style={{whiteSpace:datastate.format, wordBreak:\"break-word\"}}>\n                {datastate.results}\n              </pre>\n            }\n          </Paper>\n        </div>\n      }\n    </Paper>\n  )\n}\n\nexport default Output  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}