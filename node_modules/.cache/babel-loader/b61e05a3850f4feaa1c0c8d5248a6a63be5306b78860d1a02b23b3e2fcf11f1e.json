{"ast":null,"code":"import _classCallCheck from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/DateSelection.jsx\";\nimport React, { Component } from 'react';\nimport Chip from '@mui/material/Chip';\nimport RenderTextField from './RenderTextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DateSelection = /*#__PURE__*/function (_Component) {\n  _inherits(DateSelection, _Component);\n  var _super = _createSuper(DateSelection);\n  function DateSelection(props) {\n    var _this;\n    _classCallCheck(this, DateSelection);\n    _this = _super.call(this, props);\n    _this.updateParam = function (update) {\n      _this.setState(update);\n      _this.props.updateParam(update);\n    };\n    _this.updateDates = function () {\n      _this.props.updateParam({\n        sdate: _this.state.sdate,\n        edate: _this.state.edate,\n        date: _this.state.date\n      });\n    };\n    _this.handleChipClick = function () {\n      if (_this.state.datetype === 'pair') {\n        var sdate = _this.state.sdate;\n        _this.setState({\n          sdate: \"\",\n          edate: \"\",\n          date: sdate,\n          datetype: \"single\"\n        }, _this.updateDates);\n      } else {\n        var date = _this.state.date;\n        _this.setState({\n          date: \"\",\n          sdate: date,\n          datetype: \"pair\"\n        }, _this.updateDates);\n      }\n    };\n    _this.componentDidUpdate = function (prevProps) {\n      if (_this.props !== prevProps) {\n        _this.setState({\n          sdate: _this.props.sdate,\n          edate: _this.props.edate,\n          date: _this.props.date\n        });\n      }\n    };\n    _this.state = {\n      sdate: '',\n      edate: '',\n      date: '',\n      datetype: 'pair'\n    };\n    return _this;\n  }\n  _createClass(DateSelection, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Chip, {\n          label: this.state.datetype === 'pair' ? \"Change to single date\" : \"Change to start/end dates\",\n          clickable: true,\n          variant: \"outlined\",\n          style: {\n            marginBottom: \"0.5em\",\n            marginTop: \"0.5em\"\n          },\n          onClick: this.handleChipClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), this.state.datetype === 'pair' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"sdate\",\n            fieldlabel: \"Start date\",\n            value: this.state.sdate,\n            options: {},\n            updateHelpFor: this.props.updateHelpFor,\n            updateParam: this.updateParam\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"edate\",\n            fieldlabel: \"End date\",\n            value: this.state.edate,\n            options: {},\n            updateHelpFor: this.props.updateHelpFor,\n            updateParam: this.updateParam\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), this.state.datetype === 'single' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"date\",\n          fieldlabel: \"Date\",\n          value: this.state.date,\n          options: {},\n          updateHelpFor: this.props.updateHelpFor,\n          updateParam: this.updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n  return DateSelection;\n}(Component);\nexport { DateSelection as default };","map":{"version":3,"names":["React","Component","Chip","RenderTextField","DateSelection","props","updateParam","update","setState","updateDates","sdate","state","edate","date","handleChipClick","datetype","componentDidUpdate","prevProps","marginBottom","marginTop","updateHelpFor"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/DateSelection.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport Chip from '@mui/material/Chip'\nimport RenderTextField from './RenderTextField'\n\nexport default class DateSelection extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      sdate: '',\n      edate: '',\n      date: '',\n      datetype: 'pair',\n    }\n  }\n\n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateParam(update)\n  }\n\n  updateDates = () => {\n    this.props.updateParam({\n      sdate:this.state.sdate,\n      edate:this.state.edate,\n      date:this.state.date\n    })\n  }\n\n  handleChipClick = () => {\n    if (this.state.datetype === 'pair') {\n      const sdate = this.state.sdate\n      this.setState({\n        sdate:\"\", \n        edate:\"\", \n        date:sdate, \n        datetype:\"single\"\n      }, this.updateDates)\n    } else {\n      const date = this.state.date\n      this.setState({\n        date: \"\", \n        sdate:date, \n        datetype:\"pair\"\n      }, this.updateDates)\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props !== prevProps) {\n      this.setState({\n        sdate: this.props.sdate,\n        edate: this.props.edate,\n        date: this.props.date,\n      })\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Chip\n          label={this.state.datetype === 'pair' ? \"Change to single date\" : \"Change to start/end dates\"}\n          clickable={true}\n          variant=\"outlined\"\n          style={{marginBottom:\"0.5em\", marginTop:\"0.5em\"}}\n          onClick={this.handleChipClick}\n        />\n        {this.state.datetype === 'pair' &&\n          <div>\n            <RenderTextField\n            id=\"sdate\"\n            fieldlabel=\"Start date\"\n            value={this.state.sdate}\n            options={{}}\n            updateHelpFor={this.props.updateHelpFor}\n            updateParam={this.updateParam}\n            />\n            <RenderTextField\n            id=\"edate\"\n            fieldlabel=\"End date\"\n            value={this.state.edate}\n            options={{}}\n            updateHelpFor={this.props.updateHelpFor}\n            updateParam={this.updateParam}\n            />\n          </div>\n        }\n        {this.state.datetype === 'single' &&\n          <RenderTextField\n              id=\"date\"\n              fieldlabel=\"Date\"\n              value={this.state.date}\n              options={{}}\n              updateHelpFor={this.props.updateHelpFor}\n              updateParam={this.updateParam}\n          />\n        }\n      </div>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}