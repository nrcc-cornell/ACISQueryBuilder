{"ast":null,"code":"'use strict';\n\nvar regexpFlags = require('./_flags');\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\nvar patchedExec = nativeExec;\nvar LAST_INDEX = 'lastIndex';\nvar UPDATES_LAST_INDEX_WRONG = function () {\n  var re1 = /a/,\n    re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n}();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n    match = nativeExec.call(re, str);\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n    return match;\n  };\n}\nmodule.exports = patchedExec;","map":{"version":3,"names":["regexpFlags","require","nativeExec","RegExp","prototype","exec","nativeReplace","String","replace","patchedExec","LAST_INDEX","UPDATES_LAST_INDEX_WRONG","re1","re2","call","NPCG_INCLUDED","undefined","PATCH","str","re","lastIndex","reCopy","match","i","source","global","index","length","arguments","module","exports"],"sources":["/Users/kle1/progs/React/QueryBuilder3/node_modules/core-js/modules/_regexp-exec.js"],"sourcesContent":["'use strict';\n\nvar regexpFlags = require('./_flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,UAAU,CAAC;AAErC,IAAIC,UAAU,GAAGC,MAAM,CAACC,SAAS,CAACC,IAAI;AACtC;AACA;AACA;AACA,IAAIC,aAAa,GAAGC,MAAM,CAACH,SAAS,CAACI,OAAO;AAE5C,IAAIC,WAAW,GAAGP,UAAU;AAE5B,IAAIQ,UAAU,GAAG,WAAW;AAE5B,IAAIC,wBAAwB,GAAI,YAAY;EAC1C,IAAIC,GAAG,GAAG,GAAG;IACTC,GAAG,GAAG,KAAK;EACfX,UAAU,CAACY,IAAI,CAACF,GAAG,EAAE,GAAG,CAAC;EACzBV,UAAU,CAACY,IAAI,CAACD,GAAG,EAAE,GAAG,CAAC;EACzB,OAAOD,GAAG,CAACF,UAAU,CAAC,KAAK,CAAC,IAAIG,GAAG,CAACH,UAAU,CAAC,KAAK,CAAC;AACvD,CAAC,EAAG;;AAEJ;AACA,IAAIK,aAAa,GAAG,MAAM,CAACV,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAKW,SAAS;AAEpD,IAAIC,KAAK,GAAGN,wBAAwB,IAAII,aAAa;AAErD,IAAIE,KAAK,EAAE;EACTR,WAAW,GAAG,SAASJ,IAAI,CAACa,GAAG,EAAE;IAC/B,IAAIC,EAAE,GAAG,IAAI;IACb,IAAIC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,CAAC;IAE/B,IAAIR,aAAa,EAAE;MACjBM,MAAM,GAAG,IAAIlB,MAAM,CAAC,GAAG,GAAGgB,EAAE,CAACK,MAAM,GAAG,UAAU,EAAExB,WAAW,CAACc,IAAI,CAACK,EAAE,CAAC,CAAC;IACzE;IACA,IAAIR,wBAAwB,EAAES,SAAS,GAAGD,EAAE,CAACT,UAAU,CAAC;IAExDY,KAAK,GAAGpB,UAAU,CAACY,IAAI,CAACK,EAAE,EAAED,GAAG,CAAC;IAEhC,IAAIP,wBAAwB,IAAIW,KAAK,EAAE;MACrCH,EAAE,CAACT,UAAU,CAAC,GAAGS,EAAE,CAACM,MAAM,GAAGH,KAAK,CAACI,KAAK,GAAGJ,KAAK,CAAC,CAAC,CAAC,CAACK,MAAM,GAAGP,SAAS;IACxE;IACA,IAAIL,aAAa,IAAIO,KAAK,IAAIA,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;MAC9C;MACA;MACA;MACArB,aAAa,CAACQ,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC,EAAED,MAAM,EAAE,YAAY;QAC/C,KAAKE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,SAAS,CAACD,MAAM,GAAG,CAAC,EAAEJ,CAAC,EAAE,EAAE;UACzC,IAAIK,SAAS,CAACL,CAAC,CAAC,KAAKP,SAAS,EAAEM,KAAK,CAACC,CAAC,CAAC,GAAGP,SAAS;QACtD;MACF,CAAC,CAAC;IACJ;IAEA,OAAOM,KAAK;EACd,CAAC;AACH;AAEAO,MAAM,CAACC,OAAO,GAAGrB,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}