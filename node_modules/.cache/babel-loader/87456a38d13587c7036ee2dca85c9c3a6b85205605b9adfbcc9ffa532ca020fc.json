{"ast":null,"code":"'use strict';\n\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = ('trim' in String.prototype);\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function toNumber(argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66:\n        case 98:\n          radix = 2;\n          maxCode = 49;\n          break;\n        // fast equal /^0b[01]+$/i\n        case 79:\n        case 111:\n          radix = 8;\n          maxCode = 55;\n          break;\n        // fast equal /^0o[0-7]+$/i\n        default:\n          return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      }\n      return parseInt(digits, radix);\n    }\n  }\n  return +it;\n};\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n    // check on 1..constructor(foo) case\n    && (BROKEN_COF ? fails(function () {\n      proto.valueOf.call(that);\n    }) : cof(that) != NUMBER) ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' + 'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger').split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}","map":{"version":3,"names":["global","require","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","NUMBER","$Number","Base","proto","prototype","BROKEN_COF","TRIM","String","toNumber","argument","it","length","first","charCodeAt","third","radix","maxCode","NaN","digits","slice","i","l","code","parseInt","Number","value","arguments","that","valueOf","call","keys","split","j","key","constructor"],"sources":["/Users/kle1/progs/React/QueryBuilder3/node_modules/core-js/modules/es6.number.constructor.js"],"sourcesContent":["'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}