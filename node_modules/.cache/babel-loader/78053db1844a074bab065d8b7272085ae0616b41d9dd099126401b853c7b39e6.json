{"ast":null,"code":"import _classCallCheck from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/HelpTable.jsx\";\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar tabledata = {\n  nohelp: {\n    heads: [],\n    contents: [[]],\n    foots: \"No help available for this item\"\n  },\n  sids: {\n    heads: [\"Type\", \"Code \", \"Description\", \"Example\"],\n    contents: [[\"WBAN\", \"1\", \"5-digit WBAN id\", \"14742\"], [\"COOP\", \"2\", \"6-digit COOP id\", \"304174\"], [\"FAA\", \"3\", \"3-character FAA id\", \"LAX\"], [\"WMO\", \"4\", \"5-digit WMO id\", \"72223\"], [\"ICAO\", \"5\", \"4-character ICAO id\", \"KGRR\"], [\"GHCN\", \"6\", \"11-character GHCN id\", \"USW00003927\"], [\"NWSLI\", \"7\", \"5-character NWSLI\", \"AURN6\"], [\"THRDX\", \"9\", \"6-character ThreadEx id\", \"HSVthr\"], [\"COCORAHS\", \"10\", \"8-character CoCoRaHS id\", \"NYTM0004\"], [\"SCAN\", \"17\", \"SCAN\", \"15\"], [\"TSCAN\", \"19\", \"TSCAN\", \"3001\"]],\n    foots: \"To avoid ambiguity, station id should be specified by station id and id code (or type) separated by a space (e.g. 'KGRR 5')\"\n  },\n  hrly_sid: {\n    heads: [\"Type\", \"Code \", \"Description\", \"Example\"],\n    contents: [[\"WBAN\", \"1\", \"5-digit WBAN id\", \"14742\"], [\"COOP\", \"2\", \"6-digit COOP id\", \"304174\"], [\"FAA\", \"3\", \"3-character FAA id\", \"LAX\"], [\"WMO\", \"4\", \"5-digit WMO id\", \"72223\"], [\"ICAO\", \"5\", \"4-character ICAO id\", \"KGRR\"], [\"GHCN\", \"6\", \"11-character GHCN id\", \"USW00003927\"], [\"NWSLI\", \"7\", \"5-character NWSLI\", \"AURN6\"], [\"DEOS\", \"11\", \"Delaware DEOS id\", \"DAGF\"], [\"MIWX\", \"13\", \"Michigan Enviroweather\", \"KZO\"], [\"SCAN\", \"17\", \"SCAN\", \"2011\"], [\"TSCAN\", \"19\", \"TSCAN\", \"3052\"], [\"OARDC\", \"22\", \"Ohio OARDC id\", \"ASHT\"], [\"NEWA\", \"26\", \"NEWA id\", \"GEN\"], [\"CU_LOG\", \"27\", \"Cornell WxNet id\", \"CU_GFR\"], [\"NJWX\", \"28\", \"NJ WxNet id\", \"1101\"]],\n    foots: \"To avoid ambiguity, station id should be specified by station id and id type (or code) separated by a space (e.g. 'KGRR icao')\"\n  },\n  county: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"One or more county FIPS codes \", \"09001\"]]\n  },\n  climdiv: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"One or more climate division (2-digits or combined with state) \", \"10 or NY10\"]]\n  },\n  cwa: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"One or more NWS County Warning Areas\", \"BOI\"]]\n  },\n  basin: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"One or more drainage basins (8-digit HUC) \", \"01080205\"]]\n  },\n  state: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"One or more 2-letter state postal abbreviations\", \"AK\"]]\n  },\n  bbox: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"Bounding box in decimal degrees (W,S,E,N) \", \"-90, 40, -88, 41\"]]\n  },\n  grid2_bbox: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"Bounding box in decimal degrees (W,S,E,N) \", \"-90, 40, -88, 41\"]],\n    foots: \"An empty bounding box, [], will return the entire grid array\"\n  },\n  meta: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"name\", \"Station name *\"], [\"state\", \"2-letter state abbrev *\"], [\"sids\", \"Array of station ids/types *\"], [\"sid_dates\", \"Date range for each sid\"], [\"ll\", \"Longitude and latitude *\"], [\"elev\", \"Elevation *\"], [\"uid\", \"ACIS id *\"], [\"county\", \"5-digit FIPS id\"], [\"climdiv\", \"4-character climate division id\"], [\"valid_daterange\", \"Valid date range (by element) - must specify Elements\"], [\"tzo\", \"Time zone offset from GMT\"], [\"network\", \"Station networks\"]],\n    foots: \"Values with an asterisk (*) indicate defaults used if 'meta' is not explicityly specified.\"\n  },\n  elems: {\n    heads: [\"Abbreviation\", \"Var Major\", \"Description\"],\n    contents: [[\"maxt\", \"1\", \"Maximum temperature (&deg;F)\"], [\"mint\", \"2\", \"Minimum temperature (&deg;F)\"], [\"avgt\", \"43\", \"Average temperature (&deg;F)\"], [\"obst\", \"3\", \"Obs time temperature (&deg;F)\"], [\"pcpn\", \"4\", \"Precipitation (inches)\"], [\"snow\", \"10\", \"Snowfall (inches)\"], [\"snwd\", \"11\", \"Snow Depth (inches)\"], [\"(not available)\", \"7\", \"Pan evaporation (inches)\"], [\"cdd\", \"\", \"Cooling degree days (default base 65)\"], [\"hdd\", \"45\", \"Degree days below base (default base 65)\"], [\"gdd\", \"44\", \"Degree days above base (default base 50)\"]]\n  },\n  vX: {\n    heads: [\"Variable\", \"vX\", \"Networks found\"],\n    contents: [[\"Precipitation\", \"5\", \"newa, icao, cu_log, njwx, miwx, oardc, scan, tscan\"], [\"Temperature\", \"23\", \"newa, icao, njwx, oardc, deos, scan, tscan\"], [\"Average temperature\", \"126\", \"newa, cu_log, njwx, miwx\"], [\"Max temperature\", \"124\", \"newa, cu_log, njwx, scan, tscan\"], [\"Min temperature\", \"125\", \"newa, cu_log, njwx, scan, tscan\"], [\"Relative humidity\", \"24\", \"newa, icao, njwx, oardc, cu_log, deos, scan, tscan\"], [\"Average relative humidity\", \"143\", \"newa, njwx, miwx\"], [\"Max relative humidity\", \"141\", \"newa, njwx\"], [\"Min relative humidity\", \"143\", \"newa, njwx\"], [\"Dewpoint temperature\", \"22\", \"icao, newa, deos\"], [\"Average dewpoint temperature\", \"140\", \"njwx\"], [\"Max dewpoint temperature\", \"138\", \"njwx\"], [\"Min dewpoint temperature\", \"139\", \"njwx\"], [\"Wet-bulb temperature\", \"25\", \"icao\"], [\"Wind speed\", \"28\", \"icao, njwx, oardc, deos\"], [\"Average wind speed\", \"128\", \"newa, njwx, cu_log, scan, tscan\"], [\"Resultant wind speed\", \"129\", \"cu_log\"], [\"Max wind speed\", \"42\", \"icao, cu_log, njwx, scan, tscan\"], [\"Wind gust\", \"85\", \"icao\"], [\"Wind direction\", \"27\", \"icao, njwx, oardc, deos\"], [\"Average wind direction\", \"130\", \"newa, cu_log, scan, tscan\"], [\"Peak wind direction\", \"41\", \"njwx, icao\"], [\"Total sky cover\", \"33\", \"icao\"], [\"Solar radiation total\", \"132\", \"newa, cu_log, miwx, oardc, deos\"], [\"Solar radiation rate\", \"119\", \"njwx\"], [\"Average solar radiation rate\", \"149\", \"njwx, scan, tscan\"], [\"Max solar radiation rate\", \"147\", \"njwx\"], [\"Min solar radiation rate\", \"148\", \"njwx\"], [\"Leaf wetness\", \"118\", \"newa, cu_log, njwx, miwx, oardc, deos\"], [\"Soil temperature\", \"120\", \"newa, oardc, deos, scan, tscan\"], [\"Average soil temperature\", \"123\", \"cu_log\"], [\"Max soil temperature\", \"121\", \"newa, deos, oardc, cu_log\"], [\"Min soil temperature\", \"122\", \"newa, deos, oardc, cu_log\"], [\"Soil moisture\", \"104\", \"deos, scan, tscan\"], [\"Soil tension\", \"65\", \"newa\"], [\"Station pressure\", \"18\", \"icao, newa, njwx, deos\"], [\"Average station pressure\", \"146\", \"newa, njwx\"], [\"Max station pressure\", \"144\", \"newa, njwx\"], [\"Min station pressure\", \"145\", \"newa, njwx\"], [\"Sea level pressure\", \"19\", \"icao\"], [\"Altimeter setting\", \"17\", \"icao\"], [\"Visibility\", \"26\", \"icao\"], [\"Ceiling height\", \"35\", \"icao\"], [\"3-hour precipitation\", \"36\", \"icao\"], [\"6-hour precipitation\", \"37\", \"icao\"], [\"6-hour max temperature\", \"39\", \"icao\"], [\"6-hour min temperature\", \"40\", \"icao\"]]\n  },\n  vN: {\n    contents: [[\"Some elements require a var minor (vN). A list of vN can be found at https://github.com/rcc-acis/metadata/blob/master/data/global_variable_maj_min.load.\"]]\n  },\n  hrly_elems: {\n    contents: [[\"Elements are specified by var major (vX) with an optional var minor (vN).\"]]\n  },\n  base: {\n    heads: [],\n    contents: [[\"Degree day base temperature in degrees F.\"]]\n  },\n  output: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"json\", \"JavaScript Object Notation (default)\"], [\"csv\", \"Comma-Separated Values (unavailable for some requests, such as those including 'add', 'smry' or 'meta' and MultiStnData requests for a day range\"]]\n  },\n  grid_output: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"json\", \"JavaScript Object Notation (default)\"], [\"image\", \"png image only\"]]\n  },\n  grid2_output: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"json\", \"JavaScript Object Notation (default)\"], [\"png\", \"png image (display not implemented in this tool)\"], [\"geotiff\", \"geotiff output (display not implemented in this tool)\"]]\n  },\n  date: {\n    heads: [\"Options\", \"Example\"],\n    contents: [[\"yyyy-mm-dd\", \"2010-01-31\"], [\"yyyymmdd\", \"20100131\"], [\"por (period of record)\", \"por\"]],\n    foots: \"Can also use only yyyy or yyyymm when appropriate.\"\n  },\n  reduce_add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"mcnt\", \"Count of missing values in the reduction period\"], [\"date\", \"Date of occurrence (for max, min, run)\"], [\"value\", \"Value on date of occurrence (for first and last)\"], [\"rmcnt\", \"Count of missing values in the run period (for run only)\"]]\n  },\n  smry_add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"mcnt\", \"Count of missing values in the reduction period\"], [\"date\", \"Date of occurrence (for max, min, run)\"], [\"value\", \"Value on date of occurrence (for first and last)\"], [\"rmcnt\", \"Count of missing values in the run period (for run only)\"]]\n  },\n  smry_only: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"1\", \"Return only the summary value (no intermediate results). If used, must be specified for each element.\"]]\n  },\n  reduce_n: {\n    heads: [\"Value\", \"Description\"],\n    contents: [[\"integer\", \"Used with run reduction to specify max number of results returned per interval.\"]]\n  },\n  smry_n: {\n    heads: [\"Value\", \"Description\"],\n    contents: [[\"integer\", \"Count of number of values to be returned. Maximum value is 100. Can only be used with smry reduce of 'max', 'min' or 'run'.\"]]\n  },\n  reduce_run_maxmissing: {\n    heads: [\"Value\", \"Description\"],\n    contents: [[\"integer\", \"Used with run reduction to specify max number of missing days to allow before terminating run.\"]]\n  },\n  smry_run_maxmissing: {\n    heads: [\"Value\", \"Description\"],\n    contents: [[\"integer\", \"Used with run reduction to specify max number of missing days to allow before terminating run.\"]]\n  },\n  add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"f\", \"Flags\"], [\"t\", \"Time of observation\"], [\"i\", \"Station ID associated with data\"], [\"v\", \"Var minor associated with data\"], [\"n\", \"Network associated with data\"], [\"s\", \"Source flag (for GHCN-Daily data)\"]],\n    foots: \"Enter one or more codes separated by commas.\"\n  },\n  normal: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"1\", \"Return default normals (1991-2020)\"], [\"departure\", \"Return default departure from normal (1991-2020)\"], [\"91\", \"Return 1991-2020 normals\"], [\"departure91\", \"Return departure from 1991-2020 normal\"], [\"81\", \"Return 1981-2010 normals\"], [\"departure81\", \"Return departure from 1981-2010 normal\"]],\n    foots: \"1991-2020 added as default effective 2021-05-04.\"\n  },\n  interval: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"dly\", \"results consist of a daily value for each day; shortcut for [0,0,1].\"], [\"mly\", \"results consist of a monthly value for each calendar month; shortcut for [0,1]\"], [\"yly\", \"results consist of an annual value for each calendar year; shortcut for [1]\"], [\"array\", \"An array containing a single positive integer and zeros. The \" + \"array can have a length of either 1, 2 or 3, with the length indicating the temporal \" + \"precision of the returned values. A length of 1 indicates annual precision, 2 monthly \" + \"precision and 3 daily precision. The position of non-zero integers within the array signifies \" + \"the frequency of the values returned. The strings dly, mly and yly are just shortcuts \" + \"for commonly used intervals. \" + \"Using an array facilitates a number of more complex requests. The \" + \"following examples demonstrate some of these capabilities:\"], [\"subhead:Example\", \"subhead:Explanation\"], [\"[1,0,0]\", \"Return a daily value once per year. For instance, daily rainfall for June 20  in each of a series of years.\"], [\"[0,1,0]\", \"Return a daily value once per month. For instance, max temperature on the 15th of each month for a series of years.\"], [\"[0,0,7]\", \"Return a daily value every seven days.\"], [\"[0,3,0]\", \"Return a daily value every third month.\"], [\"[0,3]\", \"Return a monthly value every third month.\"], [\"[30]\", \"Return an annual value every thirty years.\"]],\n    foots: \"Note: 'interval' must be the same for all objects in an 'elems' array.\"\n  },\n  duration: {\n    heads: [\"Code\", \"Description\", \"Valid with intervals or list representations\"],\n    contents: [[\"integer\", \"Length of period to be analyzed in units specified by length of 'interval'\", \"dly, mly, yly, [x,x,x], [x,x], [x]\"], [\"mtd\", \"Month-to-date; must specify 'reduce'\", \"dly, [x,x,x]\"], [\"ytd\", \"Year-to-date; must specify 'reduce'\", \"dly, mly, [x,x,x], [x,x]\"], [\"std\", \"Season-to-date; must specify 'reduce' and 'season_start'\", \"dly, mly, [x,x,x], [x,x]\"], [\"dly\", \"Daily (NOT RECOMMENDED, use 1 instead)\", \"dly\"], [\"mly\", \"Monthly (NOT RECOMMENDED, use 1 instead)); must specify 'reduce'\", \"mly\"], [\"yly\", \"Yearly (NOT RECOMMENDED, use 1 instead); must specify 'reduce'\", \"yly\"]]\n  },\n  reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"max\", \"Maximum value for the period\"], [\"min\", \"Minimum value for the period\"], [\"sum\", \"Sum of the values for the period\"], [\"mean\", \"Average of the values for the period\"], [\"list\", \"Array of daily values for the period\"], [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"], [\"pct_xx_yyy\", \"Percent (integer) of daily values passing threshold\"], [\"fct_xx_yyy\", \"Fraction (float) of daily values passing threshold\"], [\"first_xx_yyy\", \"First occurrence of daily value passing threshold\"], [\"last_xx_yyy\", \"Last occurrence of daily value passing threshold\"], [\"run_xx_yyy\", \"Consecutive daily values passing threshold\"], [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"]]\n  },\n  grid_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"max\", \"Maximum value for the period\"], [\"min\", \"Minimum value for the period\"], [\"sum\", \"Sum of the values for the period\"], [\"mean\", \"Average of the values for the period\"], [\"stddev\", \"Standard deviation of the values\"], [\"list\", \"Array of daily values for the period\"], [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"], [\"pct_xx_yyy\", \"Percent (integer) of daily values passing threshold\"], [\"fct_xx_yyy\", \"Fraction (float) of daily values passing threshold\"], [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"]]\n  },\n  grid2_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"max\", \"Maximum value for the period\"], [\"min\", \"Minimum value for the period\"], [\"sum\", \"Sum of the values for the period\"], [\"mean\", \"Average of the values for the period\"], [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"], [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"]],\n    foots: \"Only certain cnt thresholds are available for LOCA pre-computed models (i.e. allmax, allmin, allmedian, wmean\"\n  },\n  smry: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"max\", \"Maximum value for the column\"], [\"min\", \"Minimum value for the column\"], [\"sum\", \"Sum of values in the column\"], [\"mean\", \"Average of values in the column\"], [\"cnt_xx_yyy\", \"Count of number of values in column passing threshold\"], [\"pct_xx_yyy\", \"Percent (integer) of values in column passing threshold\"], [\"fct_xx_yyy\", \"Fraction (float) of values in columnn passing threshold\"], [\"run_xx_yyy\", \"Consecutive column values passing threshold\"], [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, run_le_32\"]],\n    foots: \"More than one smry code can be specified by an array of strings or an array of objects.\"\n  },\n  season_start: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [[\"For interval of dly or [x,x,x] - month and day\", \"[12,21] or 06-20\"], [\"For interval of mly or [x,x] - just month\", \"3\"]]\n  },\n  maxmissing: {\n    heads: [\"Description \"],\n    contents: [[\"Integer value indicating the number missing daily values to allow before a reduction is reported as missing.\"]]\n  },\n  prec: {\n    heads: [\"Description \"],\n    contents: [[\"Integer value indicating the number of decimal places of precision displayed in the results for this element. Not available for some elements.\"]]\n  },\n  groupby: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"year\", \"Results will be returned with all data for a year in a list.\"], [\"year, mm-dd, mm-dd\", \"Results will be returned with all daily data between specified start date and end date in a list identified by ending year.\"], [\"year, mm, mm\", \"Monthly summarized data will be returned for all months between specified start month and end month in a list identified by ending year.\"]]\n  },\n  loc: {\n    heads: [\"Description\", \"Example\"],\n    contents: [[\"Point location defined in decimal degrees (longitude,latitude); negative values for South latitude and West longitude\", \"-77.7,41.8\"]]\n  },\n  grid: {\n    heads: [\"ID\", \"Description\", \"Area\", \"Period\"],\n    contents: [[\" 1\", \"NRCC Interpolated\", \"Continental US\", \"1950-present\"], [\" 2\", \"Multi-Sensor Precipitation Estimates\", \"Continental US\", \"2006-present\"], [\" 3\", \"NRCC Hi-Res\", \"East of Rockies\", \"Temp: 1998-present; Pcpn: 2002-present\"], [\" 21\", \"PRISM (https://www.prism.oregonstate.edu)\", \"Continental US\", \"Daily: 1981-present; Monthly/Yearly: 1895-present\"], [\" 4-16\", \"NARCCAP (to be deprecated) *\", \"Continental US\", \"1970-2000, 2040-2070\"], [\"4\", \"CRCM + NCEP (historical only)\"], [\"5\", \"CRCM + CCSM\"], [\"6\", \"CRCM + CGCM3\"], [\"9\", \"MM5I + NCEP (historical only)\"], [\"10\", \"MM5I + CCSM\"], [\"11\", \"RCM3 + NCEP (historical only)\"], [\"12\", \"RCM3 + CGCM3\"], [\"13\", \"RCM3 + GFDL\"], [\"14\", \"WRFG + NCEP (historical only)\"], [\"15\", \"WRFG + CCSM\"], [\"16\", \"WRFG + CGCM3\"]],\n    foots: \"* Be aware of idiosyncrasies before using NARCCAP grid sets.\"\n  },\n  grid2: {\n    heads: [\"Name\", \"Description\", \"Area\", \"Period\"],\n    contents: [[\"nrcc-nn\", \"NRCC Interpolated\", \"Continental US\", \"1950-present\"], [\"nrcc-model\", \"NRCC Hi-Res\", \"East of Rockies\", \"Temp: 1998-present; Pcpn: 2002-present\"], [\"ncei-norm:91-20\", \"NCEI Gridded Monthly 1991-2020 Normals\", \"Continental US\", \"1991\"], [\"prism\", \"PRISM (https://www.prism.oregonstate.edu)\", \"Continental US\", \"Daily: 1981-present; Monthly/Yearly: 1895-present\"], [\"livneh\", \"Livneh (https://www.esrl.noaa.gov/psd/\", \"Continental US\", \"1950-2012\"], [\"loca\", \"LOCA downscaled data (http://loca.ucsd.edu/)\", \"Continental US\", \"1950-2099\"], [\"snap\", \"SNAP (https://www.snap.uaf.edu)\", \"Alaska\", \"1970-2099\"], [\" \"], [\"subhead:Model-LOCA precomputed:\", \"subhead:Description\", \"\", \"\"], [\"allmax\", \"Highest of 32 LOCA models (monthly only)\", \"\", \"\"], [\"allmin\", \"Lowest of 32 LOCA models (monthly only)\", \"\", \"\"], [\"allmedian\", \"Median of 32 LOCA models (monthly only)\", \"\", \"\"], [\"wmean\", \"Weighted mean of 32 LOCA models (monthly only)\", \"\", \"\"], [\"subhead:Model-LOCA individual:\"], [\"ACCESS1-0, ACCESS1-3, CCSM4, CESM1-BGC, CESM1-CAM5, CMCC-CM, CMCC-CMS, CNRM-CM5, CSIRO-Mk3-6-0, \" + \"CanESM2, EC-EARTH, FGOALS-g2, GFDL-CM3, GFDL-ESM2G, GFDL-ESM2M,, GISS-E2-H, GISS-E2-R, HadGEM2-AO, \" + \"HadGEM2-CC, HadGEM2-ES, IPSL-CM5A-LR, IPSL-CM5A-MR,, MIROC-ESM, MIROC-ESM-CHEM, MIROC5, MPI-ESM-LR, \" + \"MPI-ESM-MR, MRI-CGCM3, NorESM1-M, bcc-csm1-1, bcc-csm1-1-m, inmcm4\"], [\"subhead:Model-SNAP individual:\"], [\"GFDL-CM3, NCAR-CCSM4\"], [\" \"], [\"subhead:Scenarios\", \"subhead:Description\", \"subhead:Valid for\", \"\"], [\"rcp85\", \"High greenhouse gas and aerosol emissions scenario\", \"loca and snap\", \"\"], [\"rcp45\", \"Medium greenhouse gas and aerosol emissions scenario\", \"loca only\", \"\"]],\n    foots: \"LOCA and SNAP datasets are specified in the form 'name:model:scenario', e.g. 'loca:wmean:rcp85'.\"\n  },\n  units: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"degreeC\", \"Temperatures degrees C\"], [\"degreeF\", \"Temperatures degrees F\"], [\"degreeK\", \"Temperatures degrees K\"], [\"inch\", \"Precipitation inches\"], [\"mm\", \"Precipitation millimeters\"]]\n  },\n  area_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"aaaa_max\", \"Maximum grid value in area\"], [\"aaaa_min\", \"Minimum grid value in area\"], [\"aaaa_mean\", \"Average of all grid values in the area\"]],\n    foots: \"aaaa is area type ('county' ,'climdiv', 'basin', 'state'); Example: county_max\"\n  },\n  grid_meta: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"ll\", \"Longitude and latitude of grid points (implementation pending in GridData2)\"], [\"elev\", \"Elevation of grid points (implementation pending in GridData2)\"]]\n  },\n  grid_elems: {\n    heads: [\"Abbreviation\", \"Var Major\", \"Description\"],\n    contents: [[\"maxt\", \"1\", \"Maximum temperature (&deg;F)\"], [\"mint\", \"2\", \"Minimum temperature (&deg;F)\"], [\"avgt\", \"43\", \"Average temperature (&deg;F)\"], [\"pcpn\", \"4\", \"Precipitation (inches)\"], [\"cdd\", \"\", \"Cooling degree days (default base 65)\"], [\"hdd\", \"45\", \"Degree days below base (default base 65)\"], [\"gdd\", \"44\", \"Degree days above base (default base 50)\"], [\"cddXX\", \"-\", \"Cooling Degree Days; where XX is base temperature\"], [\"hddXX\", \"-\", \"Heating Degree Days; where XX is base temperature\"], [\"gddXX\", \"-\", \"Growing Degree Days; where XX is base temperature\"], [\"gddXX\", \"-\", \"Growing Degree Days; where XX is base temperature\"], [\"subhead:Additional Element Codes for Monthly/Yearly PRISM Data\"], [\"mly_maxt\", \"91\", \"Monthly mean maximum temperature (&deg;F)\"], [\"mly_mint\", \"92\", \"Monthly mean minimum temperature (&deg;F)\"], [\"mly_avgt\", \"99\", \"Monthly mean average temperature (&deg;F)\"], [\"mly_pcpn\", \"94\", \"Monthly precipitation sum (inches)\"], [\"yly_maxt\", \"95\", \"Yearly mean maximum temperature (&deg;F)\"], [\"yly_mint\", \"96\", \"Yearly mean minimum temperature (&deg;F)\"], [\"yly_avgt\", \"100\", \"Yearly mean average temperature (&deg;F)\"], [\"yly_pcpn\", \"98\", \"Yearly precipitation sum (inches)\"]],\n    foots: \"Degree days can also be specified with the keys 'name' (or 'vX') and 'base'. \" + \"The PRISM mly and yly codes are used to access monthly/yearly PRISM gridded datasets directly, not derived monthly/yearly values reduced from daily gridded data.\"\n  },\n  grid2_name: {\n    heads: [\"Abbreviation\", \"Var Major\", \"Description\"],\n    contents: [[\"maxt\", \"1\", \"Maximum temperature (&deg;F)\"], [\"mint\", \"2\", \"Minimum temperature (&deg;F)\"], [\"avgt\", \"43\", \"Average temperature (&deg;F)\"], [\"pcpn\", \"4\", \"Precipitation (inches)\"], [\"cdd\", \"\", \"Cooling degree days (default base 65)\"], [\"hdd\", \"45\", \"Degree days below base (default base 65)\"], [\"gdd\", \"44\", \"Degree days above base (default base 50)\"], [\"cddXX\", \"-\", \"Cooling Degree Days; where XX is base temperature\"], [\"hddXX\", \"-\", \"Heating Degree Days; where XX is base temperature\"], [\"gddXX\", \"-\", \"Growing Degree Days; where XX is base temperature\"], [\"gddXX\", \"-\", \"Growing Degree Days; where XX is base temperature\"]],\n    foots: \"Degree days can also be specified with the keys 'name' (or 'vX') and 'base'. \"\n  },\n  grid2_elems: {\n    heads: [],\n    contents: [[\"Elements must be specified as an object or list of objects.\"]]\n  },\n  info_only: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"1\", \"Only information about the map is returned, not png image\"], [\"\", \"If not specified, png image is returned in data portion of JSON object\"]]\n  },\n  proj: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"lcc\", \"Lambert conformal conic centered on selected area\"]],\n    foots: \"Default is Lambert conformal conic centered on the continental US.\"\n  },\n  overlays: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"state\", \"State borders\"], [\"county\", \"County borders\"]],\n    foots: \"Line width and color can also be specified, separated by colons. For example, ['state:1:red','county:1:blue']\"\n  },\n  interp: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"cspline\", \"Cubic spline (default)\"], [\"none\", \"No interpolation\"]]\n  },\n  cmap: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"Blues\", \"Shades of blue\"], [\"Reds\", \"Shades of red\"], [\"jet\", \"Blue to red\"], [\"...\", \"Other color maps as defined in matplotlib: http://matplotlib.sourceforge.net/mpl_examples/pylab_examples/show_colormaps.pdf\"]]\n  },\n  width: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"integer\", \"Specify width of png image in pixels\"]],\n    foots: \"Only specify 'width' or 'height, not both.\"\n  },\n  height: {\n    heads: [\"Code\", \"Description\"],\n    contents: [[\"integer\", \"Specify height of png image in pixels\"]],\n    foots: \"Only specify 'height' or 'width, not both.\"\n  },\n  levels: {\n    heads: [\"Description\", \"Example\"],\n    contents: [[\"Comma-separated list of contour levels\", \"0,5,10,15,20\"]],\n    foots: \"Will be determined by server if not specified.\"\n  },\n  general_id: {\n    heads: [\"Area\", \"ID Type\", \"Example\"],\n    contents: [[\"state\", \"Postal\", \"NY\"], [\"county\", \"FIPS\", \"36109\"], [\"climdiv\", \"Divison number\", \"NY10\"], [\"cwa\", \"NWS CWA\", \"BGM\"], [\"basin\", \"8-digit HUC\", \"01080205\"]]\n  },\n  general_meta: {\n    heads: [\"Area\", \"Available Meta Options\"],\n    contents: [[\"state\", \"id, name, bbox, geojson, state\"], [\"county\", \"id, name, bbox, geojson, state\"], [\"climdiv\", \"id, name, bbox, geojson, state\"], [\"cwa\", \"id, name, bbox, geojson\"], [\"basin\", \"id, name, bbox, geojson\"]],\n    foots: \"If not specified, default is id and name.\"\n  },\n  network: {\n    heads: [\"Code\", \"Network Name\"],\n    contents: [[\"0\", \"Unknown\"], [\"1\", \"TD3200\"], [\"2\", \"TD3210\"], [\"4\", \"SHEF\"], [\"5\", \"AWDN\"], [\"7\", \"CF6\"], [\"8\", \"RCC keyed\"], [\"9\", \"NRCC local\"], [\"13\", \"WRCC local\"], [\"14\", \"SRCC local\"], [\"15\", \"DSM\"], [\"16\", \"TD3206\"], [\"17\", \"GHCN-D\"], [\"19\", \"CF6 overriding GHCN-D\"], [\"52\", \"TD3205\"], [\"53\", \"NWS Supplied\"], [\"54\", \"ThreadEx\"], [\"56\", \"CRB\"]],\n    foots: \"Additional networks are available with only hourly data.\"\n  }\n};\nvar HelpTable = /*#__PURE__*/function (_Component) {\n  _inherits(HelpTable, _Component);\n  var _super = _createSuper(HelpTable);\n  function HelpTable() {\n    _classCallCheck(this, HelpTable);\n    return _super.apply(this, arguments);\n  }\n  _createClass(HelpTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      var helpid = this.props.id;\n      if (helpid.includes('date')) {\n        helpid = 'date';\n      } else if (helpid === 'sid') {\n        helpid = 'sids';\n      } else if (helpid === 'name') {\n        helpid = 'elems';\n      }\n      var helpdata = tabledata.hasOwnProperty(helpid) ? tabledata[helpid] : tabledata.nohelp;\n      var ncols = helpdata.hasOwnProperty(\"contents\") ? helpdata.contents[0].length : 1;\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 1,\n        style: {\n          border: \"1px solid gray\",\n          margin: \"1em 10%\",\n          padding: \"5px\",\n          backgroundColor: \"lightcyan\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          padding: \"dense\",\n          children: [helpdata.hasOwnProperty(\"heads\") && helpdata.heads.length > 0 && /*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: \"1em\"\n              },\n              children: helpdata.heads.map(function (cell, i) {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: cell\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 19\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 13\n          }, this), helpdata.hasOwnProperty(\"contents\") && helpdata.contents.length > 0 && /*#__PURE__*/_jsxDEV(TableBody, {\n            children: helpdata.contents.map(function (row, i) {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                style: {\n                  height: \"1em\"\n                },\n                children: row.map(function (cell, j) {\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    variant: cell.includes(\"subhead:\") ? \"head\" : \"body\",\n                    colSpan: row.length === 1 ? ncols : 1,\n                    children: cell.replace(\"subhead:\", \"\")\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 19\n                  }, _this);\n                })\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 15\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }, this), helpdata.hasOwnProperty('foots') && helpdata.foots.length > 0 && /*#__PURE__*/_jsxDEV(TableFooter, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: \"1em\"\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: ncols,\n                children: helpdata.foots\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n  return HelpTable;\n}(Component);\nexport { HelpTable as default };","map":{"version":3,"names":["React","Component","Table","TableBody","TableCell","TableHead","TableFooter","TableRow","Paper","tabledata","nohelp","heads","contents","foots","sids","hrly_sid","county","climdiv","cwa","basin","state","bbox","grid2_bbox","meta","elems","vX","vN","hrly_elems","base","output","grid_output","grid2_output","date","reduce_add","smry_add","smry_only","reduce_n","smry_n","reduce_run_maxmissing","smry_run_maxmissing","add","normal","interval","duration","reduce","grid_reduce","grid2_reduce","smry","season_start","maxmissing","prec","groupby","loc","grid","grid2","units","area_reduce","grid_meta","grid_elems","grid2_name","grid2_elems","info_only","proj","overlays","interp","cmap","width","height","levels","general_id","general_meta","network","HelpTable","helpid","props","id","includes","helpdata","hasOwnProperty","ncols","length","border","margin","padding","backgroundColor","map","cell","i","row","j","replace"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/HelpTable.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nconst tabledata = {\n  nohelp: {\n    heads: [],\n    contents: [[]],\n    foots: \"No help available for this item\"\n  },\n  sids: {\n    heads: [\"Type\", \"Code \", \"Description\", \"Example\"],\n\t  contents: [\n      [\"WBAN\", \"1\", \"5-digit WBAN id\", \"14742\"],\n      [\"COOP\", \"2\", \"6-digit COOP id\", \"304174\"],\n      [\"FAA\", \"3\", \"3-character FAA id\", \"LAX\"],\n      [\"WMO\", \"4\", \"5-digit WMO id\", \"72223\"],\n      [\"ICAO\", \"5\", \"4-character ICAO id\", \"KGRR\"],\n      [\"GHCN\", \"6\", \"11-character GHCN id\", \"USW00003927\"],\n      [\"NWSLI\", \"7\", \"5-character NWSLI\", \"AURN6\"],\n      [\"THRDX\", \"9\", \"6-character ThreadEx id\", \"HSVthr\"],\n      [\"COCORAHS\", \"10\", \"8-character CoCoRaHS id\", \"NYTM0004\"],\n      [\"SCAN\", \"17\", \"SCAN\", \"15\"],\n      [\"TSCAN\", \"19\", \"TSCAN\", \"3001\"],\n    ],\n    foots: \"To avoid ambiguity, station id should be specified by station id and id code (or type) separated by a space (e.g. 'KGRR 5')\"\n  },\n  hrly_sid: {\n    heads: [\"Type\", \"Code \", \"Description\", \"Example\"],\n\t  contents: [\n      [\"WBAN\", \"1\", \"5-digit WBAN id\", \"14742\"],\n      [\"COOP\", \"2\", \"6-digit COOP id\", \"304174\"],\n      [\"FAA\", \"3\", \"3-character FAA id\", \"LAX\"],\n      [\"WMO\", \"4\", \"5-digit WMO id\", \"72223\"],\n      [\"ICAO\", \"5\", \"4-character ICAO id\", \"KGRR\"],\n      [\"GHCN\", \"6\", \"11-character GHCN id\", \"USW00003927\"],\n      [\"NWSLI\", \"7\", \"5-character NWSLI\", \"AURN6\"],\n      [\"DEOS\", \"11\", \"Delaware DEOS id\", \"DAGF\"],\n      [\"MIWX\", \"13\", \"Michigan Enviroweather\", \"KZO\"],\n      [\"SCAN\", \"17\", \"SCAN\", \"2011\"],\n      [\"TSCAN\", \"19\", \"TSCAN\", \"3052\"],\n      [\"OARDC\", \"22\", \"Ohio OARDC id\", \"ASHT\"],\n      [\"NEWA\", \"26\", \"NEWA id\", \"GEN\"],\n      [\"CU_LOG\", \"27\", \"Cornell WxNet id\", \"CU_GFR\"],\n      [\"NJWX\", \"28\", \"NJ WxNet id\", \"1101\"],\n    ],\n    foots: \"To avoid ambiguity, station id should be specified by station id and id type (or code) separated by a space (e.g. 'KGRR icao')\"\n  },\n  county: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more county FIPS codes \", \"09001\"],\n    ]\n  },\n  climdiv: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more climate division (2-digits or combined with state) \", \"10 or NY10\"],\n    ]\n  },\n  cwa: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more NWS County Warning Areas\", \"BOI\"],\n    ]\n  },\n  basin: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more drainage basins (8-digit HUC) \", \"01080205\"],\n    ]\n  },\n  state: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [ \"One or more 2-letter state postal abbreviations\", \"AK\"],\n    ]\n  },\n  bbox: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"Bounding box in decimal degrees (W,S,E,N) \", \"-90, 40, -88, 41\"]\n    ]\n  },\n  grid2_bbox: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"Bounding box in decimal degrees (W,S,E,N) \", \"-90, 40, -88, 41\"]\n    ],\n    foots: \"An empty bounding box, [], will return the entire grid array\",\n  },\n  meta: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"name\",\"Station name *\"],\n      [\"state\",\"2-letter state abbrev *\"],\n      [\"sids\",\"Array of station ids/types *\"],\n      [\"sid_dates\",\"Date range for each sid\"],\n      [\"ll\",\"Longitude and latitude *\"],\n      [\"elev\",\"Elevation *\"],\n      [\"uid\",\"ACIS id *\"],\n      [\"county\",\"5-digit FIPS id\"],\n      [\"climdiv\",\"4-character climate division id\"],\n      [\"valid_daterange\",\"Valid date range (by element) - must specify Elements\"],\n      [\"tzo\",\"Time zone offset from GMT\"],\n      [\"network\",\"Station networks\"],\n    ],\n  foots: \"Values with an asterisk (*) indicate defaults used if 'meta' is not explicityly specified.\"\n  },\n  elems: {\n    heads: [\"Abbreviation\",\"Var Major\",\"Description\"],\n    contents: [\n      [\"maxt\",\"1\",\"Maximum temperature (&deg;F)\"],\n      [\"mint\",\"2\",\"Minimum temperature (&deg;F)\"],\n      [\"avgt\",\"43\",\"Average temperature (&deg;F)\"],\n      [\"obst\",\"3\",\"Obs time temperature (&deg;F)\"],\n      [\"pcpn\",\"4\",\"Precipitation (inches)\"],\n      [\"snow\",\"10\",\"Snowfall (inches)\"],\n      [\"snwd\",\"11\",\"Snow Depth (inches)\"],\n      [\"(not available)\",\"7\",\"Pan evaporation (inches)\"],\n      [\"cdd\",\"\",\"Cooling degree days (default base 65)\"],\n      [\"hdd\",\"45\",\"Degree days below base (default base 65)\"],\n      [\"gdd\",\"44\",\"Degree days above base (default base 50)\"],\n    ],\n  },\n  vX: {\n    heads: [\"Variable\", \"vX\", \"Networks found\"],\n    contents: [\n      [\"Precipitation\", \"5\", \"newa, icao, cu_log, njwx, miwx, oardc, scan, tscan\"],\n      [\"Temperature\", \"23\", \"newa, icao, njwx, oardc, deos, scan, tscan\"],\n      [\"Average temperature\", \"126\", \"newa, cu_log, njwx, miwx\"],\n      [\"Max temperature\", \"124\", \"newa, cu_log, njwx, scan, tscan\"],\n      [\"Min temperature\", \"125\", \"newa, cu_log, njwx, scan, tscan\"],\n      [\"Relative humidity\", \"24\", \"newa, icao, njwx, oardc, cu_log, deos, scan, tscan\"],\n      [\"Average relative humidity\", \"143\", \"newa, njwx, miwx\"],\n      [\"Max relative humidity\", \"141\", \"newa, njwx\"],\n      [\"Min relative humidity\", \"143\", \"newa, njwx\"],\n      [\"Dewpoint temperature\", \"22\", \"icao, newa, deos\"],\n      [\"Average dewpoint temperature\", \"140\", \"njwx\"],\n      [\"Max dewpoint temperature\", \"138\", \"njwx\"],\n      [\"Min dewpoint temperature\", \"139\", \"njwx\"],\n      [\"Wet-bulb temperature\", \"25\", \"icao\"],\n      [\"Wind speed\", \"28\", \"icao, njwx, oardc, deos\"],\n      [\"Average wind speed\", \"128\", \"newa, njwx, cu_log, scan, tscan\"],\n      [\"Resultant wind speed\", \"129\", \"cu_log\"],\n      [\"Max wind speed\", \"42\", \"icao, cu_log, njwx, scan, tscan\"],\n      [\"Wind gust\", \"85\", \"icao\"],\n      [\"Wind direction\", \"27\", \"icao, njwx, oardc, deos\"],\n      [\"Average wind direction\", \"130\", \"newa, cu_log, scan, tscan\"],\n      [\"Peak wind direction\", \"41\", \"njwx, icao\"],\n      [\"Total sky cover\", \"33\", \"icao\"],\n      [\"Solar radiation total\", \"132\", \"newa, cu_log, miwx, oardc, deos\"],\n      [\"Solar radiation rate\", \"119\", \"njwx\"],\n      [\"Average solar radiation rate\", \"149\", \"njwx, scan, tscan\"],\n      [\"Max solar radiation rate\", \"147\", \"njwx\"],\n      [\"Min solar radiation rate\", \"148\", \"njwx\"],\n      [\"Leaf wetness\", \"118\", \"newa, cu_log, njwx, miwx, oardc, deos\"],\n      [\"Soil temperature\", \"120\", \"newa, oardc, deos, scan, tscan\"],\n      [\"Average soil temperature\", \"123\", \"cu_log\"],\n      [\"Max soil temperature\", \"121\", \"newa, deos, oardc, cu_log\"],\n      [\"Min soil temperature\", \"122\", \"newa, deos, oardc, cu_log\"],\n      [\"Soil moisture\", \"104\", \"deos, scan, tscan\"],\n      [\"Soil tension\", \"65\", \"newa\"],\n      [\"Station pressure\", \"18\", \"icao, newa, njwx, deos\"],\n      [\"Average station pressure\", \"146\", \"newa, njwx\"],\n      [\"Max station pressure\", \"144\", \"newa, njwx\"],\n      [\"Min station pressure\", \"145\", \"newa, njwx\"],\n      [\"Sea level pressure\", \"19\", \"icao\"],\n      [\"Altimeter setting\", \"17\", \"icao\"],\n      [\"Visibility\", \"26\", \"icao\"],\n      [\"Ceiling height\", \"35\", \"icao\"],\n      [\"3-hour precipitation\", \"36\", \"icao\"],\n      [\"6-hour precipitation\", \"37\", \"icao\"],\n      [\"6-hour max temperature\", \"39\", \"icao\"],\n      [\"6-hour min temperature\", \"40\", \"icao\"],\n    ],\n  },\n  vN: {\n    contents: [\n      [\"Some elements require a var minor (vN). A list of vN can be found at https://github.com/rcc-acis/metadata/blob/master/data/global_variable_maj_min.load.\"],\n    ],\n  },\n  hrly_elems: {\n    contents: [\n      [\"Elements are specified by var major (vX) with an optional var minor (vN).\"],\n    ],\n  },\n  base: {\n    heads: [],\n    contents: [[\"Degree day base temperature in degrees F.\"]],\n  },\n  output: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"json\",\"JavaScript Object Notation (default)\"],\n      [\"csv\",\"Comma-Separated Values (unavailable for some requests, such as those including 'add', 'smry' or 'meta' and MultiStnData requests for a day range\"],\n    ],\n  },\n  grid_output: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"json\",\"JavaScript Object Notation (default)\"],\n      [\"image\",\"png image only\"]\n    ],\n  },\n  grid2_output: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"json\",\"JavaScript Object Notation (default)\"],\n      [\"png\",\"png image (display not implemented in this tool)\"],\n      [\"geotiff\",\"geotiff output (display not implemented in this tool)\"],\n    ],\n  },\n  date: {\n    heads: [\"Options\",\"Example\"],\n    contents: [\n      [\"yyyy-mm-dd\",\"2010-01-31\"],\n      [\"yyyymmdd\",\"20100131\"],\n      [\"por (period of record)\",\"por\"],\n    ],\n    foots: \"Can also use only yyyy or yyyymm when appropriate.\",\n  },\n  reduce_add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"mcnt\", \"Count of missing values in the reduction period\"],\n      [\"date\", \"Date of occurrence (for max, min, run)\"],\n      [\"value\", \"Value on date of occurrence (for first and last)\"],\n      [\"rmcnt\", \"Count of missing values in the run period (for run only)\"],\n    ],\n  },\n  smry_add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"mcnt\", \"Count of missing values in the reduction period\"],\n      [\"date\", \"Date of occurrence (for max, min, run)\"],\n      [\"value\", \"Value on date of occurrence (for first and last)\"],\n      [\"rmcnt\", \"Count of missing values in the run period (for run only)\"],\n    ],\n  },\n  smry_only: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"1\", \"Return only the summary value (no intermediate results). If used, must be specified for each element.\"],\n    ]\n  },\n  reduce_n: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Used with run reduction to specify max number of results returned per interval.\"],\n    ],\n  },\n  smry_n: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Count of number of values to be returned. Maximum value is 100. Can only be used with smry reduce of 'max', 'min' or 'run'.\"],\n    ],\n  },\n  reduce_run_maxmissing: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Used with run reduction to specify max number of missing days to allow before terminating run.\"],\n    ],\n  },\n  smry_run_maxmissing: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Used with run reduction to specify max number of missing days to allow before terminating run.\"],\n    ],\n  },\n  add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"f\", \"Flags\"],\n      [\"t\", \"Time of observation\"],\n      [\"i\", \"Station ID associated with data\"],\n      [\"v\", \"Var minor associated with data\"],\n      [\"n\", \"Network associated with data\"],\n      [\"s\", \"Source flag (for GHCN-Daily data)\"],\n    ],\n    foots: \"Enter one or more codes separated by commas.\"\n  },\n  normal: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"1\", \"Return default normals (1991-2020)\"],\n      [\"departure\", \"Return default departure from normal (1991-2020)\"],\n      [\"91\", \"Return 1991-2020 normals\"],\n      [\"departure91\", \"Return departure from 1991-2020 normal\"],\n      [\"81\", \"Return 1981-2010 normals\"],\n      [\"departure81\", \"Return departure from 1981-2010 normal\"],\n    ],\n    foots: \"1991-2020 added as default effective 2021-05-04.\",\n  },\n  interval: {\n    heads: [\"Code\", \"Description\"],\n    contents: [\n      [\"dly\", \"results consist of a daily value for each day; shortcut for [0,0,1].\"],\n      [\"mly\", \"results consist of a monthly value for each calendar month; shortcut for [0,1]\"],\n      [\"yly\", \"results consist of an annual value for each calendar year; shortcut for [1]\"],\n      [\"array\", \"An array containing a single positive integer and zeros. The \" + \n        \"array can have a length of either 1, 2 or 3, with the length indicating the temporal \" + \n  \t\t\t\"precision of the returned values. A length of 1 indicates annual precision, 2 monthly \" + \n  \t\t\t\"precision and 3 daily precision. The position of non-zero integers within the array signifies \" + \n  \t\t\t\"the frequency of the values returned. The strings dly, mly and yly are just shortcuts \" + \n        \"for commonly used intervals. \" + \n        \"Using an array facilitates a number of more complex requests. The \" + \n        \"following examples demonstrate some of these capabilities:\"],\n      [\"subhead:Example\", \"subhead:Explanation\"],\n      [\"[1,0,0]\", \"Return a daily value once per year. For instance, daily rainfall for June 20  in each of a series of years.\"],\n      [\"[0,1,0]\", \"Return a daily value once per month. For instance, max temperature on the 15th of each month for a series of years.\"],\n      [\"[0,0,7]\", \"Return a daily value every seven days.\"],\n      [\"[0,3,0]\", \"Return a daily value every third month.\"],\n      [\"[0,3]\", \"Return a monthly value every third month.\"],\n      [\"[30]\", \"Return an annual value every thirty years.\"],\n    ],\n    foots: \"Note: 'interval' must be the same for all objects in an 'elems' array.\",\n  },\n  duration: {\n    heads: [\"Code\", \"Description\", \"Valid with intervals or list representations\"],\n    contents: [\n      [\"integer\", \"Length of period to be analyzed in units specified by length of 'interval'\", \"dly, mly, yly, [x,x,x], [x,x], [x]\"],\n      [\"mtd\", \"Month-to-date; must specify 'reduce'\", \"dly, [x,x,x]\"],\n      [\"ytd\", \"Year-to-date; must specify 'reduce'\", \"dly, mly, [x,x,x], [x,x]\"],\n      [\"std\", \"Season-to-date; must specify 'reduce' and 'season_start'\", \"dly, mly, [x,x,x], [x,x]\"],\n      [\"dly\", \"Daily (NOT RECOMMENDED, use 1 instead)\", \"dly\"],\n      [\"mly\", \"Monthly (NOT RECOMMENDED, use 1 instead)); must specify 'reduce'\", \"mly\"],\n      [\"yly\", \"Yearly (NOT RECOMMENDED, use 1 instead); must specify 'reduce'\", \"yly\"],\n    ],\n  },\n  reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the period\"],\n      [\"min\", \"Minimum value for the period\"],\n      [\"sum\", \"Sum of the values for the period\"],\n      [\"mean\", \"Average of the values for the period\"],\n      [\"list\", \"Array of daily values for the period\"],\n      [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"],\n      [\"pct_xx_yyy\", \"Percent (integer) of daily values passing threshold\"],\n      [\"fct_xx_yyy\", \"Fraction (float) of daily values passing threshold\"],\n      [\"first_xx_yyy\", \"First occurrence of daily value passing threshold\"],\n      [\"last_xx_yyy\", \"Last occurrence of daily value passing threshold\"],\n      [\"run_xx_yyy\", \"Consecutive daily values passing threshold\"],\n      [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"],\n    ],\n  },\n  grid_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the period\"],\n      [\"min\", \"Minimum value for the period\"],\n      [\"sum\", \"Sum of the values for the period\"],\n      [\"mean\", \"Average of the values for the period\"],\n      [\"stddev\", \"Standard deviation of the values\"],\n      [\"list\", \"Array of daily values for the period\"],\n      [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"],\n      [\"pct_xx_yyy\", \"Percent (integer) of daily values passing threshold\"],\n      [\"fct_xx_yyy\", \"Fraction (float) of daily values passing threshold\"],\n     [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"],\n    ],\n  },\n  grid2_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the period\"],\n      [\"min\", \"Minimum value for the period\"],\n      [\"sum\", \"Sum of the values for the period\"],\n      [\"mean\", \"Average of the values for the period\"],\n      [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"],\n      [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"],\n    ],\n    foots: \"Only certain cnt thresholds are available for LOCA pre-computed models (i.e. allmax, allmin, allmedian, wmean\",\n  },\n  smry: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the column\"],\n      [\"min\", \"Minimum value for the column\"],\n      [\"sum\", \"Sum of values in the column\"],\n      [\"mean\", \"Average of values in the column\"],\n      [\"cnt_xx_yyy\", \"Count of number of values in column passing threshold\"],\n      [\"pct_xx_yyy\", \"Percent (integer) of values in column passing threshold\"],\n      [\"fct_xx_yyy\", \"Fraction (float) of values in columnn passing threshold\"],\n      [\"run_xx_yyy\", \"Consecutive column values passing threshold\"],\n      [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, run_le_32\"],\n    ],\n    foots: \"More than one smry code can be specified by an array of strings or an array of objects.\",\n  },\n  season_start: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [ \n      [\"For interval of dly or [x,x,x] - month and day\", \"[12,21] or 06-20\"],\n      [\"For interval of mly or [x,x] - just month\", \"3\"],\n    ],\n  },\n  maxmissing: {\n    heads: [\"Description \"],\n    contents: [ \n      [\"Integer value indicating the number missing daily values to allow before a reduction is reported as missing.\"],\n    ],\n  },\n  prec: {\n    heads: [\"Description \"],\n    contents: [ \n      [\"Integer value indicating the number of decimal places of precision displayed in the results for this element. Not available for some elements.\"],\n    ],\n  },\n  groupby: {\n    heads: [\"Code\", \"Description\"],\n    contents: [\n      [\"year\", \"Results will be returned with all data for a year in a list.\"],\n      [\"year, mm-dd, mm-dd\", \"Results will be returned with all daily data between specified start date and end date in a list identified by ending year.\"],\n      [\"year, mm, mm\", \"Monthly summarized data will be returned for all months between specified start month and end month in a list identified by ending year.\"],\n    ],\n  },\n  loc: {\n    heads: [\"Description\",\"Example\"],\n    contents: [\n\t    [\"Point location defined in decimal degrees (longitude,latitude); negative values for South latitude and West longitude\",\"-77.7,41.8\"],\n    ],\n  },\n  grid: {\n    heads: [\"ID\",\"Description\",\"Area\",\"Period\"],\n    contents: [\n      [\" 1\",\"NRCC Interpolated\",\"Continental US\",\"1950-present\"],\n      [\" 2\",\"Multi-Sensor Precipitation Estimates\",\"Continental US\",\"2006-present\"],\n      [\" 3\",\"NRCC Hi-Res\",\"East of Rockies\",\"Temp: 1998-present; Pcpn: 2002-present\"],\n      [\" 21\",\"PRISM (https://www.prism.oregonstate.edu)\",\"Continental US\",\"Daily: 1981-present; Monthly/Yearly: 1895-present\"],\n      [\" 4-16\",\"NARCCAP (to be deprecated) *\",\"Continental US\",\"1970-2000, 2040-2070\"],\n      [\"4\", \"CRCM + NCEP (historical only)\"],\n      [\"5\", \"CRCM + CCSM\"],\n      [\"6\", \"CRCM + CGCM3\"],\n      [\"9\", \"MM5I + NCEP (historical only)\"],\n      [\"10\", \"MM5I + CCSM\"],\n      [\"11\", \"RCM3 + NCEP (historical only)\"],\n      [\"12\", \"RCM3 + CGCM3\"],\n      [\"13\", \"RCM3 + GFDL\"],\n      [\"14\", \"WRFG + NCEP (historical only)\"],\n      [\"15\", \"WRFG + CCSM\"],\n      [\"16\", \"WRFG + CGCM3\"],\n    ],\n    foots: \"* Be aware of idiosyncrasies before using NARCCAP grid sets.\",\n  },\n  grid2: {\n    heads: [\"Name\",\"Description\",\"Area\",\"Period\"],\n    contents: [\n      [\"nrcc-nn\",\"NRCC Interpolated\",\"Continental US\",\"1950-present\"],\n      [\"nrcc-model\",\"NRCC Hi-Res\",\"East of Rockies\",\"Temp: 1998-present; Pcpn: 2002-present\"],\n      [\"ncei-norm:91-20\",\"NCEI Gridded Monthly 1991-2020 Normals\",\"Continental US\",\"1991\"],\n      [\"prism\",\"PRISM (https://www.prism.oregonstate.edu)\",\"Continental US\",\"Daily: 1981-present; Monthly/Yearly: 1895-present\"],\n      [\"livneh\",\"Livneh (https://www.esrl.noaa.gov/psd/\",\"Continental US\",\"1950-2012\"],\n      [\"loca\",\"LOCA downscaled data (http://loca.ucsd.edu/)\",\"Continental US\",\"1950-2099\"],\n      [\"snap\",\"SNAP (https://www.snap.uaf.edu)\",\"Alaska\",\"1970-2099\"],\n      [\" \"],\n      [\"subhead:Model-LOCA precomputed:\",\"subhead:Description\",\"\",\"\"],\n      [\"allmax\", \"Highest of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"allmin\", \"Lowest of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"allmedian\", \"Median of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"wmean\", \"Weighted mean of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"subhead:Model-LOCA individual:\"],\n      [\"ACCESS1-0, ACCESS1-3, CCSM4, CESM1-BGC, CESM1-CAM5, CMCC-CM, CMCC-CMS, CNRM-CM5, CSIRO-Mk3-6-0, \" +\n       \"CanESM2, EC-EARTH, FGOALS-g2, GFDL-CM3, GFDL-ESM2G, GFDL-ESM2M,, GISS-E2-H, GISS-E2-R, HadGEM2-AO, \" +\n       \"HadGEM2-CC, HadGEM2-ES, IPSL-CM5A-LR, IPSL-CM5A-MR,, MIROC-ESM, MIROC-ESM-CHEM, MIROC5, MPI-ESM-LR, \" +\n       \"MPI-ESM-MR, MRI-CGCM3, NorESM1-M, bcc-csm1-1, bcc-csm1-1-m, inmcm4\"],\n      [\"subhead:Model-SNAP individual:\"],\n      [\"GFDL-CM3, NCAR-CCSM4\"],\n      [\" \"],\n      [\"subhead:Scenarios\",\"subhead:Description\",\"subhead:Valid for\",\"\"],\n      [\"rcp85\",\"High greenhouse gas and aerosol emissions scenario\",\"loca and snap\",\"\"],\n      [\"rcp45\",\"Medium greenhouse gas and aerosol emissions scenario\",\"loca only\",\"\"],\n    ],\n    foots: \"LOCA and SNAP datasets are specified in the form 'name:model:scenario', e.g. 'loca:wmean:rcp85'.\",\n  },\n  units: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"degreeC\",\"Temperatures degrees C\"],\n      [\"degreeF\",\"Temperatures degrees F\"],\n      [\"degreeK\",\"Temperatures degrees K\"],\n      [\"inch\",\"Precipitation inches\"],\n      [\"mm\",\"Precipitation millimeters\"],\n    ],\n  },\n\tarea_reduce: {\n\t\theads: [\"Code\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"aaaa_max\",\"Maximum grid value in area\"],\n\t\t\t[\"aaaa_min\",\"Minimum grid value in area\"],\n\t\t\t[\"aaaa_mean\",\"Average of all grid values in the area\"],\n\t\t],\n\t\tfoots: \"aaaa is area type ('county' ,'climdiv', 'basin', 'state'); Example: county_max\",\n\t},\t\n\tgrid_meta: {\n\t\theads: [\"Code\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"ll\",\"Longitude and latitude of grid points (implementation pending in GridData2)\"],\n\t\t\t[\"elev\",\"Elevation of grid points (implementation pending in GridData2)\"],\n\t\t],\n  },\n  grid_elems: {\n\t\theads: [\"Abbreviation\",\"Var Major\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"maxt\",\"1\",\"Maximum temperature (&deg;F)\"],\n\t\t\t[\"mint\",\"2\",\"Minimum temperature (&deg;F)\"],\n\t\t\t[\"avgt\",\"43\",\"Average temperature (&deg;F)\"],\n\t\t\t[\"pcpn\",\"4\",\"Precipitation (inches)\"],\n\t\t\t[\"cdd\",\"\",\"Cooling degree days (default base 65)\"],\n\t\t\t[\"hdd\",\"45\",\"Degree days below base (default base 65)\"],\n\t\t\t[\"gdd\",\"44\",\"Degree days above base (default base 50)\"],\n\t\t\t[\"cddXX\",\"-\",\"Cooling Degree Days; where XX is base temperature\"],\n\t\t\t[\"hddXX\",\"-\",\"Heating Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t\t[\"subhead:Additional Element Codes for Monthly/Yearly PRISM Data\"],\n\t\t\t[\"mly_maxt\",\"91\",\"Monthly mean maximum temperature (&deg;F)\"],\n\t\t\t[\"mly_mint\",\"92\",\"Monthly mean minimum temperature (&deg;F)\"],\n\t\t\t[\"mly_avgt\",\"99\",\"Monthly mean average temperature (&deg;F)\"],\n\t\t\t[\"mly_pcpn\",\"94\",\"Monthly precipitation sum (inches)\"],\n\t\t\t[\"yly_maxt\",\"95\",\"Yearly mean maximum temperature (&deg;F)\"],\n\t\t\t[\"yly_mint\",\"96\",\"Yearly mean minimum temperature (&deg;F)\"],\n\t\t\t[\"yly_avgt\",\"100\",\"Yearly mean average temperature (&deg;F)\"],\n\t\t\t[\"yly_pcpn\",\"98\",\"Yearly precipitation sum (inches)\"],\n\t\t],\n    foots: \"Degree days can also be specified with the keys 'name' (or 'vX') and 'base'. \" +\n            \"The PRISM mly and yly codes are used to access monthly/yearly PRISM gridded datasets directly, not derived monthly/yearly values reduced from daily gridded data.\",\n  },\n  grid2_name: {\n\t\theads: [\"Abbreviation\",\"Var Major\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"maxt\",\"1\",\"Maximum temperature (&deg;F)\"],\n\t\t\t[\"mint\",\"2\",\"Minimum temperature (&deg;F)\"],\n\t\t\t[\"avgt\",\"43\",\"Average temperature (&deg;F)\"],\n\t\t\t[\"pcpn\",\"4\",\"Precipitation (inches)\"],\n\t\t\t[\"cdd\",\"\",\"Cooling degree days (default base 65)\"],\n\t\t\t[\"hdd\",\"45\",\"Degree days below base (default base 65)\"],\n\t\t\t[\"gdd\",\"44\",\"Degree days above base (default base 50)\"],\n\t\t\t[\"cddXX\",\"-\",\"Cooling Degree Days; where XX is base temperature\"],\n\t\t\t[\"hddXX\",\"-\",\"Heating Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t],\n    foots: \"Degree days can also be specified with the keys 'name' (or 'vX') and 'base'. \",\n  },\n  grid2_elems: {\n\t\theads: [],\n\t\tcontents: [\n\t\t\t[\"Elements must be specified as an object or list of objects.\"],\n\t\t],\n\t},\n  info_only: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"1\",\"Only information about the map is returned, not png image\"],\n      [\"\", \"If not specified, png image is returned in data portion of JSON object\"],\n    ],\n  },\n  proj: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"lcc\",\"Lambert conformal conic centered on selected area\"],\n    ],\n    foots: \"Default is Lambert conformal conic centered on the continental US.\",\n  },\n  overlays: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"state\",\"State borders\"],\n      [\"county\",\"County borders\"],\n    ],\n    foots: \"Line width and color can also be specified, separated by colons. For example, ['state:1:red','county:1:blue']\",\n  },\n  interp: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"cspline\",\"Cubic spline (default)\"],\n      [\"none\",\"No interpolation\"],\n    ],\n  },\n  cmap: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"Blues\",\"Shades of blue\"],\n      [\"Reds\",\"Shades of red\"],\n      [\"jet\",\"Blue to red\"],\n      [\"...\",\"Other color maps as defined in matplotlib: http://matplotlib.sourceforge.net/mpl_examples/pylab_examples/show_colormaps.pdf\"],\n    ],\n  },\n  width: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"integer\",\"Specify width of png image in pixels\"],\n    ],\n    foots: \"Only specify 'width' or 'height, not both.\",\n  },\n  height: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"integer\",\"Specify height of png image in pixels\"],\n    ],\n    foots: \"Only specify 'height' or 'width, not both.\",\n  },\n  levels: {\n    heads: [\"Description\",\"Example\"],\n    contents: [\n      [\"Comma-separated list of contour levels\",\"0,5,10,15,20\"],\n    ],\n    foots: \"Will be determined by server if not specified.\",\n  },\n  general_id: {\n    heads: [\"Area\",\"ID Type\",\"Example\"],\n    contents: [\n      [\"state\",\"Postal\",\"NY\"],\n      [\"county\",\"FIPS\",\"36109\"],\n      [\"climdiv\",\"Divison number\",\"NY10\"],\n      [\"cwa\",\"NWS CWA\",\"BGM\"],\n      [\"basin\",\"8-digit HUC\",\"01080205\"],\n    ],\n  },\n  general_meta: {\n    heads: [\"Area\",\"Available Meta Options\"],\n    contents: [\n      [\"state\",\"id, name, bbox, geojson, state\"],\n      [\"county\",\"id, name, bbox, geojson, state\"],\n      [\"climdiv\",\"id, name, bbox, geojson, state\"],\n      [\"cwa\",\"id, name, bbox, geojson\"],\n      [\"basin\",\"id, name, bbox, geojson\"],\n    ],\n    foots: \"If not specified, default is id and name.\",\n  },\n  network: {\n\t\theads: [\"Code\",\"Network Name\"],\n\t\tcontents: [\n      [\"0\",\"Unknown\"],\n      [\"1\",\"TD3200\"],\n      [\"2\",\"TD3210\"],\n      [\"4\",\"SHEF\"],\n      [\"5\",\"AWDN\"],\n      [\"7\",\"CF6\"],\n      [\"8\",\"RCC keyed\"],\n      [\"9\",\"NRCC local\"],\n      [\"13\",\"WRCC local\"],\n      [\"14\",\"SRCC local\"],\n      [\"15\",\"DSM\"],\n      [\"16\",\"TD3206\"],\n      [\"17\",\"GHCN-D\"],\n      [\"19\",\"CF6 overriding GHCN-D\"],\n      [\"52\",\"TD3205\"],\n      [\"53\",\"NWS Supplied\"],\n      [\"54\",\"ThreadEx\"],\n      [\"56\",\"CRB\"],\n\t\t],\n    foots: \"Additional networks are available with only hourly data.\",\n  },\n}\n\nexport default class HelpTable extends Component { \n  render() {\n    let helpid = this.props.id\n    if (helpid.includes('date')) {\n      helpid = 'date'\n    } else if (helpid === 'sid') {\n      helpid = 'sids'\n    } else if (helpid === 'name') {\n      helpid = 'elems'\n    }\n    const helpdata = tabledata.hasOwnProperty(helpid) ? tabledata[helpid] : tabledata.nohelp\n    const ncols = (helpdata.hasOwnProperty(\"contents\")) ? helpdata.contents[0].length : 1\n    return (\n      <Paper elevation={1} style={{border:\"1px solid gray\", margin:\"1em 10%\", padding:\"5px\", backgroundColor:\"lightcyan\"}}>\n        <Table padding=\"dense\">\n          {helpdata.hasOwnProperty(\"heads\") && helpdata.heads.length > 0 &&\n            <TableHead>\n              <TableRow style={{height:\"1em\"}}>\n                {helpdata.heads.map((cell, i) => (\n                  <TableCell key={i}>{cell}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n          }\n          {helpdata.hasOwnProperty(\"contents\") && helpdata.contents.length > 0 &&\n            <TableBody>\n            {helpdata.contents.map((row, i) => (\n              <TableRow hover={true} key={i} style={{height:\"1em\"}}>\n                {row.map((cell, j) => (\n                  <TableCell variant={cell.includes(\"subhead:\") ? \"head\" : \"body\"} colSpan={row.length === 1 ? ncols : 1} key={j}>{cell.replace(\"subhead:\",\"\")}</TableCell>\n                ))}\n              </TableRow>\n            ))}\n            </TableBody>\n          }\n          {helpdata.hasOwnProperty('foots') && helpdata.foots.length > 0 && \n            <TableFooter>\n              <TableRow style={{height:\"1em\"}}>\n                <TableCell colSpan={ncols}>{helpdata.foots}</TableCell>\n              </TableRow>\n            </TableFooter>\n          }\n        </Table>\n      </Paper>\n    )\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}