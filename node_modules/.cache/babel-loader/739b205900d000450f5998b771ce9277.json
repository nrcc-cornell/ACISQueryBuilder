{"ast":null,"code":"import _defineProperty from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder2/src/StnHourlyInput.jsx\";\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport RenderTextField from './RenderTextField';\nimport DateSelection from './DateSelection';\nimport { buildElement } from './Builders.jsx';\n\nvar StnDataInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StnDataInput, _Component);\n\n  function StnDataInput(props) {\n    var _this;\n\n    _classCallCheck(this, StnDataInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StnDataInput).call(this, props));\n\n    _this.addElement = function () {\n      var newElems = JSON.stringify(buildElement(_this.elementKays, _this.state));\n\n      _this.setState({\n        elems: newElems,\n        haveInterval: true\n      });\n\n      _this.props.updateInputParams({\n        elems: newElems\n      });\n    };\n\n    _this.clearElements = function () {\n      _this.setState({\n        elems: '',\n        haveInterval: false\n      });\n\n      _this.props.updateInputParams({\n        elems: \"\"\n      });\n    };\n\n    _this.updateHelpFor = function (helpFor) {\n      if (helpFor === 'sid') {\n        helpFor = 'hrly_sid';\n      } else if (helpFor === 'elems') {\n        helpFor = \"hrly_elems\";\n      }\n\n      _this.props.updateAppState({\n        helpFor: helpFor\n      });\n    };\n\n    _this.updateParam = function (update) {\n      _this.setState(update);\n\n      _this.props.updateInputParams(update);\n    };\n\n    _this.updateElems = function (update) {\n      if (update.elems.length === 0) {\n        _this.setState({\n          haveInterval: false\n        });\n      }\n\n      _this.updateParam(update);\n    };\n\n    _this.updateElemBuild = function (update) {\n      _this.setState(update);\n    };\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      if (_this.state !== nextState) {\n        return true;\n      } else if (_this.props !== nextProps) {\n        return _this.datafields.some(function (key) {\n          return nextProps.input_params.hasOwnProperty(key) && _this.state[key] !== nextProps.input_params[key] || !nextProps.input_params.hasOwnProperty(key) && _this.state[key] !== '';\n        });\n      } else {\n        return false;\n      }\n    };\n\n    _this.state = {\n      sid: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      elems: '',\n      vX: '',\n      vN: '',\n      prec: '',\n      meta: ''\n    };\n    _this.datafields = ['sid', 'sdate', 'edate', 'date', 'elems', 'meta'];\n    _this.elementKays = ['vX', 'vN', 'prec'];\n    return _this;\n  }\n\n  _createClass(StnDataInput, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (this.props.input_params !== prevProps.input_params) {\n        this.datafields.forEach(function (key) {\n          if (_this2.props.input_params.hasOwnProperty(key) && _this2.state[key] !== _this2.props.input_params[key]) {\n            if (key === 'elems' && typeof _this2.props.input_params.elems === 'object') {\n              _this2.setState(_defineProperty({}, key, JSON.stringify(_this2.props.input_params[key])));\n            } else {\n              _this2.setState(_defineProperty({}, key, _this2.props.input_params[key]));\n            }\n          } else if (!_this2.props.input_params.hasOwnProperty(key) && _this2.state[key] !== '') {\n            _this2.setState(_defineProperty({}, key, ''));\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Required input\"), React.createElement(RenderTextField, {\n        id: \"sid\",\n        fieldlabel: \"Station ID\",\n        value: this.state.sid,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(DateSelection, {\n        sdate: this.state.sdate,\n        edate: this.state.edate,\n        date: this.state.date,\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"elems\",\n        fieldlabel: \"Elements\",\n        value: this.state.elems,\n        options: {\n          style: {\n            width: \"90%\"\n          },\n          multiline: true,\n          placeholder: \"Enter directly or build using Element setup\"\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), this.state.elems.includes(\"{\") && React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        style: {\n          marginTop: \"0.5em\",\n          backgroundColor: \"lightcyan\"\n        },\n        onMouseDown: this.clearElements,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Clear elements\")), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Optional element setup\"), React.createElement(RenderTextField, {\n        id: \"vX\",\n        fieldlabel: \"Var major\",\n        value: this.state.vX,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"vN\",\n        fieldlabel: \"Var minor\",\n        value: this.state.vN,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"prec\",\n        fieldlabel: \"Precision\",\n        value: this.state.prec,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), this.state.vX.length > 0 && React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        style: {\n          marginTop: \"0.5em\",\n          backgroundColor: \"lightcyan\"\n        },\n        onMouseDown: this.addElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Add element\")), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Optional input\"), React.createElement(RenderTextField, {\n        id: \"meta\",\n        fieldlabel: \"Meta options\",\n        value: this.state.meta,\n        options: {\n          style: {\n            width: \"95%\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return StnDataInput;\n}(Component);\n\nexport { StnDataInput as default };","map":{"version":3,"sources":["/Users/kle1/progs/React/QueryBuilder2/src/StnHourlyInput.jsx"],"names":["React","Component","Typography","Grid","Button","RenderTextField","DateSelection","buildElement","StnDataInput","props","addElement","newElems","JSON","stringify","elementKays","state","setState","elems","haveInterval","updateInputParams","clearElements","updateHelpFor","helpFor","updateAppState","updateParam","update","updateElems","length","updateElemBuild","shouldComponentUpdate","nextProps","nextState","datafields","some","key","input_params","hasOwnProperty","sid","sdate","edate","date","vX","vN","prec","meta","prevProps","forEach","style","width","multiline","placeholder","includes","marginTop","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport { buildElement } from './Builders.jsx'\n\nexport default class StnDataInput extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      sid: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      elems: '',\n      vX: '',\n      vN: '',\n      prec: '',\n      meta: '',\n    }\n    this.datafields = ['sid','sdate','edate','date','elems','meta']\n    this.elementKays = ['vX','vN','prec']\n  }\n\n  addElement = () => {\n    const newElems = JSON.stringify(buildElement(this.elementKays, this.state))\n    this.setState({\n      elems: newElems,\n      haveInterval: true,\n    })\n    this.props.updateInputParams({elems: newElems})\n  }\n\n  clearElements = () => {\n    this.setState({\n      elems: '',\n      haveInterval: false,\n    })\n    this.props.updateInputParams({elems: \"\"})\n  }\n\n  updateHelpFor = (helpFor) => {\n    if (helpFor === 'sid') {\n      helpFor = 'hrly_sid'\n    } else if (helpFor === 'elems') {\n      helpFor = \"hrly_elems\"\n    }\n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n\n  updateElems = (update) => {\n    if (update.elems.length === 0) {\n      this.setState({haveInterval: false})\n    }\n    this.updateParam(update)\n  }\n\n  updateElemBuild = (update) => {\n    this.setState(update)\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.datafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.datafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          if (key === 'elems' && typeof this.props.input_params.elems === 'object') {\n            this.setState({[key]: JSON.stringify(this.props.input_params[key])})\n          } else {\n            this.setState({[key]: this.props.input_params[key]})\n          }\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n\n  render () {\n    return (\n        <div>\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Required input\n              </Typography>\n              <RenderTextField\n                id=\"sid\"\n                fieldlabel=\"Station ID\"\n                value={this.state.sid}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <DateSelection\n                sdate={this.state.sdate}\n                edate={this.state.edate}\n                date={this.state.date}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"elems\"\n                fieldlabel=\"Elements\"\n                value={this.state.elems}\n                options={{style: {width:\"90%\"}, multiline: true, placeholder: \"Enter directly or build using Element setup\"}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElems}\n              />\n              {this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.clearElements}\n                >\n                  Clear elements\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional element setup\n              </Typography>\n              <RenderTextField\n                id=\"vX\"\n                fieldlabel=\"Var major\"\n                value={this.state.vX}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"vN\"\n                fieldlabel=\"Var minor\"\n                value={this.state.vN}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"prec\"\n                fieldlabel=\"Precision\"\n                value={this.state.prec}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n\n              {this.state.vX.length > 0 &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.addElement}\n                >\n                  Add element\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional input\n              </Typography>\n              <RenderTextField\n                id=\"meta\"\n                fieldlabel=\"Meta options\"\n                value={this.state.meta}\n                options={{style: {width:\"95%\"}}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n            </Grid>\n          </Grid>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}