{"ast":null,"code":"import _defineProperty from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/StnMetaInput.jsx\";\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport RenderTextField from './RenderTextField';\nimport DateSelection from './DateSelection'; //import { buildInputParams } from './Builders.jsx'\n\nvar StnMetaInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StnMetaInput, _Component);\n\n  function StnMetaInput(props) {\n    var _this;\n\n    _classCallCheck(this, StnMetaInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StnMetaInput).call(this, props));\n\n    _this.updateHelpFor = function (helpFor) {\n      _this.props.updateAppState({\n        helpFor: helpFor\n      });\n    };\n\n    _this.updateParam = function (update) {\n      _this.setState(update);\n\n      _this.props.updateInputParams(update);\n    };\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      if (_this.state !== nextState) {\n        return true;\n      } else if (_this.props !== nextProps) {\n        return _this.metafields.some(function (key) {\n          return nextProps.input_params.hasOwnProperty(key) && _this.state[key] !== nextProps.input_params[key] || !nextProps.input_params.hasOwnProperty(key) && _this.state[key] !== '';\n        });\n      } else {\n        return false;\n      }\n    };\n\n    _this.componentDidUpdate = function (prevProps) {\n      if (_this.props.input_params !== prevProps.input_params) {\n        _this.metafields.forEach(function (key) {\n          if (_this.props.input_params.hasOwnProperty(key) && _this.state[key] !== _this.props.input_params[key]) {\n            _this.setState(_defineProperty({}, key, _this.props.input_params[key]));\n          } else if (!_this.props.input_params.hasOwnProperty(key) && _this.state[key] !== '') {\n            _this.setState(_defineProperty({}, key, ''));\n          }\n        });\n      }\n    };\n\n    _this.state = {\n      sids: '',\n      county: '',\n      climdiv: '',\n      cwa: '',\n      basin: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      meta: '',\n      elems: '',\n      output: '',\n      network: ''\n    };\n    _this.metafields = Object.keys(_this.state);\n    return _this;\n  }\n\n  _createClass(StnMetaInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Required input\"), React.createElement(Typography, {\n        variant: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Enter at least one of the following:\"), this.state.county.length === 0 && this.state.climdiv.length === 0 && this.state.cwa.length === 0 && this.state.basin.length === 0 && this.state.state.length === 0 && this.state.bbox.length === 0 && React.createElement(RenderTextField, {\n        id: \"sids\",\n        fieldlabel: \"Station ID(s)\",\n        value: this.state.sids,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), this.state.sids.length === 0 && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(RenderTextField, {\n        id: \"state\",\n        fieldlabel: \"State\",\n        value: this.state.state,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"county\",\n        fieldlabel: \"County\",\n        value: this.state.county,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"climdiv\",\n        fieldlabel: \"Climate Division\",\n        value: this.state.climdiv,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"cwa\",\n        fieldlabel: \"CWA\",\n        value: this.state.cwa,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"basin\",\n        fieldlabel: \"Basin\",\n        value: this.state.basin,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"bbox\",\n        fieldlabel: \"Bounding box\",\n        value: this.state.bbox,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Optional input\"), React.createElement(Typography, {\n        variant: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Enter any or all of the following:\"), React.createElement(RenderTextField, {\n        id: \"meta\",\n        fieldlabel: \"Meta options\",\n        value: this.state.meta,\n        options: {\n          style: {\n            width: \"95%\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), (this.state.sids.length === 0 || this.state.meta.includes('valid_daterange')) && React.createElement(RenderTextField, {\n        id: \"elems\",\n        fieldlabel: \"Elements\",\n        value: this.state.elems,\n        options: {\n          required: this.state.meta.includes('valid_daterange') ? true : false\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"network\",\n        fieldlabel: \"Network\",\n        value: this.state.network,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"output\",\n        fieldlabel: \"Output type\",\n        value: this.state.output,\n        options: {\n          disabled: this.state.meta.length && this.state.output === 'json' ? true : false\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), this.state.sids.length === 0 && React.createElement(DateSelection, {\n        sdate: this.state.sdate,\n        edate: this.state.edate,\n        date: this.state.date,\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return StnMetaInput;\n}(Component);\n\nexport { StnMetaInput as default };","map":{"version":3,"sources":["/Users/kle1/progs/React/QueryBuilder3/src/StnMetaInput.jsx"],"names":["React","Component","Typography","Grid","RenderTextField","DateSelection","StnMetaInput","props","updateHelpFor","helpFor","updateAppState","updateParam","update","setState","updateInputParams","shouldComponentUpdate","nextProps","nextState","state","metafields","some","key","input_params","hasOwnProperty","componentDidUpdate","prevProps","forEach","sids","county","climdiv","cwa","basin","bbox","sdate","edate","date","meta","elems","output","network","Object","keys","length","style","width","includes","required","disabled"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\n//import { buildInputParams } from './Builders.jsx'\n\nexport default class StnMetaInput extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      sids: '',\n      county: '',\n      climdiv: '',\n      cwa: '',\n      basin: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      meta: '',\n      elems: '',\n      output: '',\n      network: '',\n    }\n    this.metafields = Object.keys(this.state)\n  }\n\n  updateHelpFor = (helpFor) => {\n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.metafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.metafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          this.setState({[key]: this.props.input_params[key]})\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={4}>\n            <Typography variant=\"h6\">\n              Required input\n            </Typography>\n            <Typography variant=\"caption\">\n              Enter at least one of the following:\n            </Typography>\n            {this.state.county.length === 0 && \n              this.state.climdiv.length === 0 && \n              this.state.cwa.length === 0 && \n              this.state.basin.length === 0 && \n              this.state.state.length === 0 &&\n              this.state.bbox.length === 0 &&\n              <RenderTextField\n                id=\"sids\"\n                fieldlabel=\"Station ID(s)\"\n                value={this.state.sids}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n            }\n            {this.state.sids.length === 0 &&\n              <div>\n                <RenderTextField\n                  id=\"state\"\n                  fieldlabel=\"State\"\n                  value={this.state.state}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n                <RenderTextField\n                  id=\"county\"\n                  fieldlabel=\"County\"\n                  value={this.state.county}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n                <RenderTextField\n                  id=\"climdiv\"\n                  fieldlabel=\"Climate Division\"\n                  value={this.state.climdiv}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n                <RenderTextField\n                  id=\"cwa\"\n                  fieldlabel=\"CWA\"\n                  value={this.state.cwa}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n                <RenderTextField\n                  id=\"basin\"\n                  fieldlabel=\"Basin\"\n                  value={this.state.basin}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n                <RenderTextField\n                  id=\"bbox\"\n                  fieldlabel=\"Bounding box\"\n                  value={this.state.bbox}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              </div>\n            }\n          </Grid>\n\n          <Grid item xs={4}>\n            <Typography variant=\"h6\">\n              Optional input\n            </Typography>\n            <Typography variant=\"caption\">\n              Enter any or all of the following:\n            </Typography>\n            <RenderTextField\n              id=\"meta\"\n              fieldlabel=\"Meta options\"\n              value={this.state.meta}\n              options={{style: {width:\"95%\"}}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateParam}\n            />\n            {(this.state.sids.length === 0 || this.state.meta.includes('valid_daterange')) &&\n              <RenderTextField\n                id=\"elems\"\n                fieldlabel=\"Elements\"\n                value={this.state.elems}\n                options={{required: this.state.meta.includes('valid_daterange') ? true : false}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n            }\n            <RenderTextField\n              id=\"network\"\n              fieldlabel=\"Network\"\n              value={this.state.network}\n              options={{}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateParam}\n            />\n            <RenderTextField\n              id=\"output\"\n              fieldlabel=\"Output type\"\n              value={this.state.output}\n              options={{disabled: this.state.meta.length && this.state.output === 'json' ? true : false}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateParam}\n            />\n\n            {this.state.sids.length === 0 &&\n              <DateSelection\n                sdate={this.state.sdate}\n                edate={this.state.edate}\n                date={this.state.date}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n            }\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}