{"ast":null,"code":"import _objectSpread from\"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/kle1/progs/React/QueryBuilder3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Typography from'@mui/material/Typography';import Button from'@mui/material/Button';import TextField from'@mui/material/TextField';import Paper from'@mui/material/Paper';import Box from'@mui/material/Box';import InputAdornment from'@mui/material/InputAdornment';import ResultsButtons from'./ResultsButtons';import CopyToClipboard from'./CopyToClipboard';import{basicFormat}from'./builders';import{acisServers}from'./acisServers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Output=function Output(props){var _useState=useState({results:\"\",results_json:{},//format: \"normal\", hard code all whitespace options to pre-wrap, instead of some being \"normal\"\ndataimage:\"\"}),_useState2=_slicedToArray(_useState,2),datastate=_useState2[0],setDatastate=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),input_params_string=_useState4[0],setInput_params_string=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),hasParamsError=_useState6[0],setHasParamsError=_useState6[1];var _useState7=useState(\"JSON\"),_useState8=_slicedToArray(_useState7,2),selectedButton=_useState8[0],setSelectedButton=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isCsv=_useState10[0],setIsCsv=_useState10[1];var getAcisServerUrl=function getAcisServerUrl(){var serverurl=acisServers[props.wstype];var rccindex=serverurl.indexOf('data.rcc-acis');if(rccindex!==-1&&props.server!=='Any'){serverurl=\"\".concat(serverurl.slice(0,rccindex+4),\".\").concat(props.server.toLowerCase()).concat(serverurl.slice(rccindex+4));}return serverurl+props.generalArea;};// user changed parameter string\nvar handleParamsChange=function handleParamsChange(event){var inputString=event.target.value;setInput_params_string(inputString);setDatastate(_objectSpread(_objectSpread({},datastate),{results:''}));if(inputString.length>0){try{var parsedString=JSON.parse(inputString);props.setInput_params(parsedString);setHasParamsError(false);}catch(_unused){setHasParamsError(true);}}};// submit parameter string to server\nvar handleSubmit=function handleSubmit(){setDatastate(_objectSpread(_objectSpread({},datastate),{results:\"Submitting request ...\"}));var url=getAcisServerUrl();if(props.input_params.output!==\"image\"){fetch(url,{method:'POST',body:input_params_string,headers:{'Content-Type':'application/json'}}).then(function(response){return response.ok&&!isCsv?response.json():response.text();}).then(function(data){setDatastate(_objectSpread(_objectSpread({},datastate),{results:typeof data==='object'?JSON.stringify(data,null,0):data,results_json:data,//format: typeof data === 'string' ? \"pre-wrap\" : \"normal\",\ndataimage:\"\"}));setSelectedButton(typeof data==='object'?\"JSON\":\"\");}).catch(function(error){return setDatastate(_objectSpread(_objectSpread({},datastate),{results:'Error: '+error.message,dataimage:\"\"}));});}else{setDatastate(_objectSpread(_objectSpread({},datastate),{results:\"image\",results_json:'',//format: 'normal',\ndataimage:url+'?params='+input_params_string}));setSelectedButton(\"\");}};// user clicked one of the format buttons\nvar handleFormat=function handleFormat(results_button){setSelectedButton(results_button);if(results_button===\"JSON\"){setDatastate(_objectSpread(_objectSpread({},datastate),{results:JSON.stringify(datastate.results_json,null,0),//format:\"normal\", \ndataimage:\"\"}));}else if(results_button===\"Basic format\"){var basicFormatResults=basicFormat(datastate.results_json);setDatastate(_objectSpread(_objectSpread({},datastate),{results:basicFormatResults.results_string,//format:\"pre-wrap\", \ndataimage:basicFormatResults.dataimage.length>0?basicFormatResults.dataimage:''}));}else if(results_button===\"Full format\"){var hasImage=datastate.results_json.hasOwnProperty(\"data\")&&datastate.results_json.data.includes(\"image/png;base64\");setDatastate(_objectSpread(_objectSpread({},datastate),{results:JSON.stringify(datastate.results_json,null,2),//format: \"pre-wrap\", \ndataimage:hasImage?datastate.results_json.data:''}));}else{console.log('Error: unknown format button');}};// JSON parameters object needs to be stringified for display in text box\nuseEffect(function(){//if (Object.keys(props.input_params).length === 0) {\nsetDatastate(_objectSpread(_objectSpread({},datastate),{results:''}));//}\nvar newparams=props.input_params;if(props.input_params.hasOwnProperty(\"elems\")&&props.input_params.elems.includes(\"{\")){var parsed_elems=JSON.parse(props.input_params.elems);newparams=_objectSpread(_objectSpread({},newparams),{elems:parsed_elems});}// empty bbox has to be converted from string to empty array in parameters string\nif(props.input_params.hasOwnProperty('bbox')&&props.input_params.bbox===\"[]\"){newparams=_objectSpread(_objectSpread({},newparams),{bbox:[]});}setInput_params_string(JSON.stringify(newparams));setIsCsv(props.input_params.output==='csv');setHasParamsError(false);// eslint-disable-next-line\n},[props.input_params]);// update url of server whenever the wstype or specific server selections change\nuseEffect(function(){setDatastate(_objectSpread(_objectSpread({},datastate),{results:\"\",results_json:{},dataimage:\"\"}));// eslint-disable-next-line\n},[props.wstype,props.server]);return/*#__PURE__*/_jsxs(Box,{sx:{mt:\"1em\"},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Parameters (JSON)\",input_params_string.length>2&&/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"go\",onMouseDown:handleSubmit,children:\"Submit\"})]}),/*#__PURE__*/_jsx(TextField,{id:\"params\",value:input_params_string,margin:\"dense\",variant:\"outlined\",error:hasParamsError,helperText:hasParamsError?\"Error in Parameters encoding\":\"\",multiline:true,fullWidth:true,inputProps:{sx:{fontSize:\"90%\",p:0}},InputProps:{endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(CopyToClipboard,{cliptext:input_params_string,color:\"blue\"})})},onChange:handleParamsChange}),datastate.results.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[datastate.results!==\"image\"&&/*#__PURE__*/_jsx(ResultsButtons,{handleFormat:handleFormat,showButtons:!isCsv,selectedButton:selectedButton}),/*#__PURE__*/_jsxs(Paper,{variant:\"resultsPaper\",children:[datastate.dataimage.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{component:\"pre\",variant:\"pre\",children:datastate.dataimage.includes(\"http\")?\"Returned image\":\"data (as image)\"}),/*#__PURE__*/_jsx(\"img\",{src:datastate.dataimage,alt:\"map\"})]}),!datastate.dataimage.includes(\"http\")&&/*#__PURE__*/_jsx(Typography,{component:\"pre\",variant:\"pre\",children:datastate.results})]})]})]});};export default Output;/* old format pre results style (wordBreak:\"normal\",overflowWrap:\"anywhere\",whiteSpace:datastate.format} */","map":{"version":3,"names":["React","useState","useEffect","Typography","Button","TextField","Paper","Box","InputAdornment","ResultsButtons","CopyToClipboard","basicFormat","acisServers","Output","props","results","results_json","dataimage","datastate","setDatastate","input_params_string","setInput_params_string","hasParamsError","setHasParamsError","selectedButton","setSelectedButton","isCsv","setIsCsv","getAcisServerUrl","serverurl","wstype","rccindex","indexOf","server","slice","toLowerCase","generalArea","handleParamsChange","event","inputString","target","value","length","parsedString","JSON","parse","setInput_params","handleSubmit","url","input_params","output","fetch","method","body","headers","then","response","ok","json","text","data","stringify","catch","error","message","handleFormat","results_button","basicFormatResults","results_string","hasImage","hasOwnProperty","includes","console","log","newparams","elems","parsed_elems","bbox","mt","sx","fontSize","p","endAdornment"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/Output.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Typography from '@mui/material/Typography'\nimport Button from '@mui/material/Button'\nimport TextField from '@mui/material/TextField'\nimport Paper from '@mui/material/Paper'\nimport Box from '@mui/material/Box'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport ResultsButtons from './ResultsButtons'\nimport CopyToClipboard from './CopyToClipboard'\nimport { basicFormat } from './builders'\nimport { acisServers } from './acisServers'\n\nconst Output = (props) => {\n  const [ datastate, setDatastate ] = useState({\n    results: \"\",\n    results_json: {},\n    //format: \"normal\", hard code all whitespace options to pre-wrap, instead of some being \"normal\"\n    dataimage: \"\",\n  })\n  const [ input_params_string, setInput_params_string ] = useState(\"\")\n  const [ hasParamsError, setHasParamsError ] = useState(false)\n  const [ selectedButton, setSelectedButton ] = useState(\"JSON\")\n  const [ isCsv, setIsCsv ] = useState(false)\n\n  const getAcisServerUrl = () => {\n    let serverurl = acisServers[props.wstype]\n    const rccindex = serverurl.indexOf('data.rcc-acis')\n    if (rccindex !== -1 && props.server !== 'Any') {\n      serverurl = `${serverurl.slice(0,rccindex+4)}.${props.server.toLowerCase()}${serverurl.slice(rccindex+4)}`\n    }\n    return serverurl + props.generalArea\n  }\n\n  // user changed parameter string\n  const handleParamsChange = event => {\n    const inputString = event.target.value\n    setInput_params_string(inputString)\n    setDatastate({...datastate, ...{results: ''}})\n    if (inputString.length > 0) {\n      try {\n        const parsedString = JSON.parse(inputString)\n        props.setInput_params(parsedString)\n        setHasParamsError(false)\n      } catch {\n        setHasParamsError(true)\n      }\n    }\n  }  \n\n  // submit parameter string to server\n  const handleSubmit = () => {\n    setDatastate({...datastate, ...{\n      results: \"Submitting request ...\"\n    }})\n    const url = getAcisServerUrl()\n    if (props.input_params.output !== \"image\") {\n      fetch(url, {\n        method: 'POST',\n        body: input_params_string,\n        headers: {'Content-Type': 'application/json'}\n      })\n        .then(response => response.ok && !isCsv ? response.json() : response.text())\n        .then(data => {\n          setDatastate({...datastate, ...{\n            results: typeof data === 'object' ? JSON.stringify(data,null,0) : data,\n            results_json: data,\n            //format: typeof data === 'string' ? \"pre-wrap\" : \"normal\",\n            dataimage: \"\",\n          }})\n          setSelectedButton(typeof data === 'object' ? \"JSON\" : \"\")\n        })\n        .catch(error => setDatastate({...datastate, ...{\n          results: 'Error: ' + error.message,\n          dataimage: \"\"\n        }}))\n    } else {\n      setDatastate({...datastate, ...{\n        results: \"image\",\n        results_json: '',\n        //format: 'normal',\n        dataimage: url + '?params=' + input_params_string\n      }})\n      setSelectedButton(\"\")\n    }\n  }\n\n  // user clicked one of the format buttons\n  const handleFormat = (results_button) => {\n    setSelectedButton(results_button)\n    if (results_button === \"JSON\") {\n      setDatastate({...datastate, ...{\n        results: JSON.stringify(datastate.results_json,null,0), \n        //format:\"normal\", \n        dataimage: \"\",\n      }})\n    } else if (results_button === \"Basic format\") {\n      const basicFormatResults = basicFormat(datastate.results_json)\n      setDatastate({...datastate, ...{\n        results: basicFormatResults.results_string,\n        //format:\"pre-wrap\", \n        dataimage: basicFormatResults.dataimage.length > 0 ? basicFormatResults.dataimage : '',\n      }})\n    } else if (results_button === \"Full format\") {\n      const hasImage = datastate.results_json.hasOwnProperty(\"data\") && datastate.results_json.data.includes(\"image/png;base64\")\n      setDatastate({...datastate, ...{\n        results: JSON.stringify(datastate.results_json,null,2), \n        //format: \"pre-wrap\", \n        dataimage: hasImage ? datastate.results_json.data : ''\n      }})\n    } else {\n      console.log('Error: unknown format button')\n    }\n  }\n\n  // JSON parameters object needs to be stringified for display in text box\n  useEffect(() => {\n    //if (Object.keys(props.input_params).length === 0) {\n      setDatastate({...datastate, ...{results:''}})\n    //}\n    let newparams = props.input_params\n    if (props.input_params.hasOwnProperty(\"elems\") && props.input_params.elems.includes(\"{\")) {\n      const parsed_elems = JSON.parse(props.input_params.elems)\n      newparams = ({...newparams, ...{elems: parsed_elems}})\n    }\n    // empty bbox has to be converted from string to empty array in parameters string\n    if (props.input_params.hasOwnProperty('bbox') && props.input_params.bbox === \"[]\") {\n      newparams = ({...newparams, ...{bbox: []}})\n    }\n    setInput_params_string(JSON.stringify(newparams))\n    setIsCsv(props.input_params.output === 'csv')\n    setHasParamsError(false)\n    // eslint-disable-next-line\n  }, [props.input_params])\n\n  // update url of server whenever the wstype or specific server selections change\n  useEffect(() => {\n    setDatastate({...datastate, ...{\n      results: \"\",\n      results_json: {},\n      dataimage: \"\",\n    }})\n    // eslint-disable-next-line\n}, [props.wstype, props.server])\n\n  return (\n    <Box sx={{mt:\"1em\"}}>\n      <Typography variant=\"h6\">\n        Parameters (JSON)\n        {input_params_string.length > 2 &&\n          <Button \n            size=\"small\"\n            variant=\"go\"\n            onMouseDown={handleSubmit}\n          >\n            Submit\n          </Button>\n        }\n      </Typography>\n      <TextField\n        id=\"params\"\n        value={input_params_string}\n        margin=\"dense\"\n        variant=\"outlined\"\n        error={hasParamsError}\n        helperText={hasParamsError ? \"Error in Parameters encoding\" : \"\"}\n        multiline={true}\n        fullWidth={true}\n        inputProps={{sx:{fontSize:\"90%\",p:0}}}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <CopyToClipboard cliptext={input_params_string} color=\"blue\" />\n            </InputAdornment>\n          )\n        }}\n        onChange={handleParamsChange}\n      />\n      \n      {datastate.results.length > 0 && \n        <div>\n          {datastate.results !== \"image\" &&\n            <ResultsButtons\n              handleFormat={handleFormat}\n              showButtons={!isCsv}\n              selectedButton={selectedButton}\n            />\n          }\n          <Paper variant=\"resultsPaper\">\n            {datastate.dataimage.length > 0 &&\n              <div>\n                <Typography component=\"pre\" variant=\"pre\">\n                  {datastate.dataimage.includes(\"http\") ? \"Returned image\" : \"data (as image)\"}\n                </Typography>\n                <img src={datastate.dataimage} alt=\"map\" />\n              </div>\n            }\n            {!datastate.dataimage.includes(\"http\") &&\n              <Typography component=\"pre\" variant=\"pre\">\n                {datastate.results}\n              </Typography>\n            }\n          </Paper>\n        </div>\n      }\n    </Box>\n  )\n}\n\nexport default Output  \n\n/* old format pre results style (wordBreak:\"normal\",overflowWrap:\"anywhere\",whiteSpace:datastate.format} */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}