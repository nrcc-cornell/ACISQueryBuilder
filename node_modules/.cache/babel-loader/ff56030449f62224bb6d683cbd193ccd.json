{"ast":null,"code":"import _defineProperty from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kle1/progs/React/QueryBuilder2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder2/src/GridDataInput.jsx\";\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport RenderTextField from './RenderTextField';\nimport DateSelection from './DateSelection';\nimport QueryExplain from './QueryExplain';\nimport { buildElement, buildImage } from './Builders.jsx';\nvar styles = {\n  switchBase: {\n    color: \"lightcyan\",\n    '&$checked': {\n      color: \"blue\",\n      '& + $bar': {\n        backgroundColor: \"blue\"\n      }\n    }\n  },\n  checked: {},\n  bar: {},\n  button: {\n    marginTop: \"0.5em\",\n    backgroundColor: \"lightcyan\"\n  }\n};\n\nvar GridDataInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GridDataInput, _Component);\n\n  function GridDataInput(props) {\n    var _this;\n\n    _classCallCheck(this, GridDataInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GridDataInput).call(this, props));\n\n    _this.addElement = function () {\n      var newElems = JSON.stringify(buildElement(_this.elementKeys, _this.state));\n\n      _this.setState({\n        elems: newElems,\n        haveInterval: true\n      });\n\n      _this.props.updateInputParams({\n        elems: newElems\n      });\n    };\n\n    _this.clearElements = function () {\n      _this.setState({\n        elems: '',\n        haveInterval: false\n      });\n\n      _this.props.updateInputParams({\n        elems: \"\"\n      });\n    };\n\n    _this.updateHelpFor = function (helpFor) {\n      if (helpFor === 'meta') {\n        helpFor = 'grid_meta';\n      } else if (helpFor === 'output') {\n        helpFor = 'grid_output';\n      } else if (helpFor === 'reduce') {\n        helpFor = 'grid_reduce';\n      } else if (helpFor === 'name' || helpFor === 'elems') {\n        helpFor = 'grid_elems';\n      }\n\n      _this.props.updateAppState({\n        helpFor: helpFor\n      });\n    };\n\n    _this.updateParam = function (update) {\n      _this.setState(update);\n\n      _this.props.updateInputParams(update);\n    };\n\n    _this.updateElems = function (update) {\n      if (update.elems.length === 0) {\n        _this.setState({\n          haveInterval: false\n        });\n      }\n\n      _this.updateParam(update);\n    };\n\n    _this.updateElemBuild = function (update) {\n      _this.setState(update);\n    };\n\n    _this.updateImage = function (update) {\n      _this.setState(update, function () {\n        var image = buildImage(_this.imagefields, _this.state);\n\n        _this.updateParam({\n          image: image\n        });\n      });\n    };\n\n    _this.updateOutput = function (update) {\n      if (update.output === 'image') {\n        var image = buildImage(_this.imagefields, _this.state);\n\n        _this.updateParam({\n          output: \"image\",\n          image: image\n        });\n\n        _this.setState({\n          mapcontrols: true\n        });\n      } else {\n        _this.updateParam(update);\n      }\n    };\n\n    _this.handleMapControlClick = function (event) {\n      if (_this.state.output !== 'image' || event.target.checked) {\n        var image = event.target.checked ? buildImage(_this.imagefields, _this.state) : \"\";\n\n        _this.updateParam({\n          image: image\n        });\n\n        _this.setState({\n          mapcontrols: event.target.checked\n        });\n      }\n    };\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      if (_this.state !== nextState) {\n        return true;\n      } else if (_this.props !== nextProps) {\n        return _this.datafields.some(function (key) {\n          return nextProps.input_params.hasOwnProperty(key) && _this.state[key] !== nextProps.input_params[key] || !nextProps.input_params.hasOwnProperty(key) && _this.state[key] !== '';\n        });\n      } else {\n        return false;\n      }\n    };\n\n    _this.state = {\n      loc: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      smry: '',\n      smry_only: '',\n      area_reduce: '',\n      prec: '',\n      units: '',\n      meta: '',\n      output: '',\n      image: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: '',\n      mapcontrols: '',\n      haveInterval: false\n    };\n    _this.datafields = ['loc', 'state', 'bbox', 'sdate', 'edate', 'date', 'grid', 'elems', 'meta', 'output', 'image'];\n    _this.imagefields = ['info_only', 'proj', 'overlays', 'interp', 'cmap', 'width', 'height', 'levels'];\n    _this.elementKeys = Object.keys(_this.state).filter(function (item) {\n      return ![\"mapcontrols\", \"haveInterval\"].concat(_toConsumableArray(_this.datafields), _toConsumableArray(_this.imagefields)).includes(item);\n    });\n    return _this;\n  }\n\n  _createClass(GridDataInput, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (this.props.input_params !== prevProps.input_params) {\n        this.datafields.forEach(function (key) {\n          if (_this2.props.input_params.hasOwnProperty(key) && _this2.state[key] !== _this2.props.input_params[key]) {\n            if (key === 'elems' && typeof _this2.props.input_params.elems === 'object') {\n              _this2.setState(_defineProperty({}, key, JSON.stringify(_this2.props.input_params[key])));\n            } else {\n              _this2.setState(_defineProperty({}, key, _this2.props.input_params[key]));\n            }\n          } else if (!_this2.props.input_params.hasOwnProperty(key) && _this2.state[key] !== '') {\n            _this2.setState(_defineProperty({}, key, ''));\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var notdly = this.state.duration.length === 3 && this.state.duration !== 'dly' || this.state.duration.length > 0 && !isNaN(Number(this.state.duration)) && (this.state.duration !== \"1\" || this.state.interval !== 'dly' && !(this.state.interval.includes('[') && this.state.interval.length === 7));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Required input\"), React.createElement(Typography, {\n        variant: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Enter information for one of the grid selection types:\"), this.state.state.length === 0 && this.state.bbox.length === 0 && React.createElement(RenderTextField, {\n        id: \"loc\",\n        fieldlabel: \"Point location\",\n        value: this.state.loc,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), this.state.loc.length === 0 && this.state.bbox.length === 0 && React.createElement(RenderTextField, {\n        id: \"state\",\n        fieldlabel: \"State\",\n        value: this.state.state,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), this.state.loc.length === 0 && this.state.state.length === 0 && React.createElement(RenderTextField, {\n        id: \"bbox\",\n        fieldlabel: \"Bounding box\",\n        value: this.state.bbox,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(DateSelection, {\n        sdate: this.state.sdate,\n        edate: this.state.edate,\n        date: this.state.date,\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"grid\",\n        fieldlabel: \"Grid id\",\n        value: this.state.grid,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"elems\",\n        fieldlabel: \"Elements\",\n        value: this.state.elems,\n        options: {\n          style: {\n            width: \"90%\"\n          },\n          multiline: true,\n          placeholder: \"Enter directly or build using Element setup\"\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), this.state.elems.includes(\"{\") && React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: classes.button,\n        onMouseDown: this.clearElements,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Clear elements\"), React.createElement(QueryExplain, {\n        input_params: this.props.input_params,\n        wstype: \"GridData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Optional element setup\"), React.createElement(RenderTextField, {\n        id: \"name\",\n        fieldlabel: \"Name\",\n        value: this.state.name,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), this.state.name.includes(\"dd\") && React.createElement(RenderTextField, {\n        id: \"base\",\n        fieldlabel: \"Base\",\n        value: this.state.base,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"interval\",\n        fieldlabel: \"Interval\",\n        value: this.state.interval,\n        options: {\n          disabled: this.state.haveInterval\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"duration\",\n        fieldlabel: \"Duration\",\n        value: this.state.duration,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), this.state.duration === 'std' && React.createElement(RenderTextField, {\n        id: \"season_start\",\n        fieldlabel: \"Season start\",\n        value: this.state.season_start,\n        options: {\n          required: true\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), notdly && React.createElement(RenderTextField, {\n        id: \"reduce\",\n        fieldlabel: \"Reduce\",\n        value: this.state.reduce,\n        options: {\n          required: true\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), notdly && React.createElement(RenderTextField, {\n        id: \"maxmissing\",\n        fieldlabel: \"Max missing\",\n        value: this.state.maxmissing,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"smry\",\n        fieldlabel: \"Summary\",\n        value: this.state.smry,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), this.state.smry.length > 0 && React.createElement(RenderTextField, {\n        id: \"smry_only\",\n        fieldlabel: \"Summary only\",\n        value: this.state.smry_only,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"units\",\n        fieldlabel: \"Units\",\n        value: this.state.units,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), this.state.loc.length === 0 && React.createElement(RenderTextField, {\n        id: \"area_reduce\",\n        fieldlabel: \"Area reduction\",\n        value: this.state.area_reduce,\n        options: {},\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateElemBuild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }), this.state.name.length > 0 && React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: classes.button,\n        onMouseDown: this.addElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"Add element\")), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Optional input\"), React.createElement(RenderTextField, {\n        id: \"meta\",\n        fieldlabel: \"Meta options\",\n        value: this.state.meta,\n        options: {\n          style: {\n            width: \"95%\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateParam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"output\",\n        fieldlabel: \"Output type\",\n        value: this.state.output,\n        options: {\n          disabled: this.state.meta.length && this.state.output === 'json' ? true : false\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateOutput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          value: this.state.mapcontrols,\n          onChange: this.handleMapControlClick,\n          checked: this.state.mapcontrols,\n          classes: {\n            switchBase: classes.switchBase,\n            checked: classes.checked,\n            bar: classes.bar\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }),\n        label: \"Map settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }), this.state.mapcontrols && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, this.state.output !== 'image' && React.createElement(RenderTextField, {\n        id: \"info_only\",\n        fieldlabel: \"Info only\",\n        value: this.state.info_only,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"proj\",\n        fieldlabel: \"Proj\",\n        value: this.state.proj,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"overlays\",\n        fieldlabel: \"Overlays\",\n        value: this.state.overlays,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"interp\",\n        fieldlabel: \"Interp\",\n        value: this.state.interp,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"cmap\",\n        fieldlabel: \"Cmap\",\n        value: this.state.cmap,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }), this.state.height.length === 0 && React.createElement(RenderTextField, {\n        id: \"width\",\n        fieldlabel: \"Width\",\n        value: this.state.width,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          },\n          required: this.state.mapcontrols\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }), this.state.width.length === 0 && React.createElement(RenderTextField, {\n        id: \"height\",\n        fieldlabel: \"Height\",\n        value: this.state.height,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          },\n          required: this.state.mapcontrols\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }), React.createElement(RenderTextField, {\n        id: \"levels\",\n        fieldlabel: \"Levels\",\n        value: this.state.levels,\n        options: {\n          style: {\n            marginLeft: \"2em\"\n          }\n        },\n        updateHelpFor: this.updateHelpFor,\n        updateParam: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return GridDataInput;\n}(Component);\n\nexport default withStyles(styles)(GridDataInput);","map":{"version":3,"sources":["/Users/kle1/progs/React/QueryBuilder2/src/GridDataInput.jsx"],"names":["React","Component","Typography","Grid","Button","FormControlLabel","Switch","withStyles","RenderTextField","DateSelection","QueryExplain","buildElement","buildImage","styles","switchBase","color","backgroundColor","checked","bar","button","marginTop","GridDataInput","props","addElement","newElems","JSON","stringify","elementKeys","state","setState","elems","haveInterval","updateInputParams","clearElements","updateHelpFor","helpFor","updateAppState","updateParam","update","updateElems","length","updateElemBuild","updateImage","image","imagefields","updateOutput","output","mapcontrols","handleMapControlClick","event","target","shouldComponentUpdate","nextProps","nextState","datafields","some","key","input_params","hasOwnProperty","loc","bbox","sdate","edate","date","grid","name","base","interval","duration","season_start","reduce","maxmissing","smry","smry_only","area_reduce","prec","units","meta","info_only","proj","overlays","interp","cmap","width","height","levels","Object","keys","filter","item","includes","prevProps","forEach","classes","notdly","isNaN","Number","style","multiline","placeholder","disabled","required","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport { withStyles } from '@material-ui/core/styles'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport QueryExplain from './QueryExplain'\nimport { buildElement, buildImage } from './Builders.jsx'\n\nconst styles = {\n  switchBase: {\n    color: \"lightcyan\",\n    '&$checked': {\n      color: \"blue\",\n      '& + $bar': {\n        backgroundColor: \"blue\",\n      },\n    },\n  },\n  checked: {},\n  bar: {},\n  button: {\n    marginTop: \"0.5em\", \n    backgroundColor: \"lightcyan\",\n  }\n}\n\nclass GridDataInput extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      loc: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      smry: '',\n      smry_only: '',\n      area_reduce: '',\n      prec: '',\n      units: '',\n      meta: '',\n      output: '',\n      image: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: '',\n      mapcontrols: '',\n      haveInterval: false,\n    }\n    this.datafields = ['loc','state','bbox','sdate','edate','date','grid','elems','meta','output','image']\n    this.imagefields = ['info_only','proj','overlays','interp','cmap','width','height','levels']\n    this.elementKeys = Object.keys(this.state).filter(\n      item => (![\"mapcontrols\",\"haveInterval\",...this.datafields,...this.imagefields].includes(item)\n    ))\n  }\n\n  addElement = () => {\n    const newElems = JSON.stringify(buildElement(this.elementKeys, this.state))\n    this.setState({\n      elems: newElems,\n      haveInterval: true,\n    })\n    this.props.updateInputParams({elems: newElems})\n  }\n\n  clearElements = () => {\n    this.setState({\n      elems: '',\n      haveInterval: false,\n    })\n    this.props.updateInputParams({elems: \"\"})\n  }\n\n  updateHelpFor = (helpFor) => {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta'\n    } else if (helpFor === 'output') {\n      helpFor = 'grid_output'\n    } else if (helpFor === 'reduce') {\n      helpFor = 'grid_reduce'\n    } else if (helpFor === 'name' || helpFor === 'elems') {\n      helpFor = 'grid_elems'\n    } \n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n  \n  updateElems = (update) => {\n    if (update.elems.length === 0) {\n      this.setState({haveInterval: false})\n    }\n    this.updateParam(update)\n  }\n\n  updateElemBuild = (update) => {\n    this.setState(update)\n  }\n\n  updateImage = (update) => {\n    this.setState(update, () => {\n      const image = buildImage(this.imagefields, this.state)\n      this.updateParam({image: image})\n    })\n  }\n\n  updateOutput = (update) => {\n    if (update.output === 'image') {\n      const image = buildImage(this.imagefields, this.state)\n      this.updateParam({output:\"image\", image:image})\n      this.setState({\n        mapcontrols: true,\n      })\n    } else {\n      this.updateParam(update)\n    }\n  }\n\n  handleMapControlClick = event => {\n    if (this.state.output !== 'image' || event.target.checked) {\n      const image = event.target.checked ? buildImage(this.imagefields, this.state) : \"\"\n      this.updateParam({image: image})\n      this.setState({\n        mapcontrols: event.target.checked, \n      })\n    }\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.datafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.datafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          if (key === 'elems' && typeof this.props.input_params.elems === 'object') {\n            this.setState({[key]: JSON.stringify(this.props.input_params[key])})\n          } else {\n            this.setState({[key]: this.props.input_params[key]})\n          }\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n  \n  render () {\n    const { classes } = this.props\n    const notdly = (this.state.duration.length === 3 && this.state.duration !== 'dly') || \n      (this.state.duration.length > 0 && !isNaN(Number(this.state.duration)) && \n      (this.state.duration !== \"1\" || (this.state.interval !== 'dly' && !(this.state.interval.includes('[') && this.state.interval.length === 7))))\n    return (\n        <div>\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Required input\n              </Typography>\n              <Typography variant=\"caption\">\n                Enter information for one of the grid selection types:\n              </Typography>\n              {this.state.state.length === 0 && \n               this.state.bbox.length === 0 && \n                <RenderTextField\n                  id=\"loc\"\n                  fieldlabel=\"Point location\"\n                  value={this.state.loc}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 && \n               this.state.bbox.length === 0 && \n                <RenderTextField\n                  id=\"state\"\n                  fieldlabel=\"State\"\n                  value={this.state.state}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 && \n               this.state.state.length === 0 && \n                <RenderTextField\n                  id=\"bbox\"\n                  fieldlabel=\"Bounding box\"\n                  value={this.state.bbox}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              <DateSelection\n                sdate={this.state.sdate}\n                edate={this.state.edate}\n                date={this.state.date}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"grid\"\n                fieldlabel=\"Grid id\"\n                value={this.state.grid}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"elems\"\n                fieldlabel=\"Elements\"\n                value={this.state.elems}\n                options={{style: {width:\"90%\"}, multiline: true, placeholder: \"Enter directly or build using Element setup\"}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElems}\n              />\n              {this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  className={classes.button}\n                  onMouseDown={this.clearElements}\n                >\n                  Clear elements\n                </Button>\n              }\n              <QueryExplain\n                input_params={this.props.input_params}\n                wstype=\"GridData\"\n              />\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional element setup\n              </Typography>\n              <RenderTextField\n                id=\"name\"\n                fieldlabel=\"Name\"\n                value={this.state.name}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.name.includes(\"dd\") &&\n                <RenderTextField\n                  id=\"base\"\n                  fieldlabel=\"Base\"\n                  value={this.state.base}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"interval\"\n                fieldlabel=\"Interval\"\n                value={this.state.interval}\n                options={{disabled:this.state.haveInterval}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"duration\"\n                fieldlabel=\"Duration\"\n                value={this.state.duration}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.duration === 'std' &&\n                <RenderTextField\n                  id=\"season_start\"\n                  fieldlabel=\"Season start\"\n                  value={this.state.season_start}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"reduce\"\n                  fieldlabel=\"Reduce\"\n                  value={this.state.reduce}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"maxmissing\"\n                  fieldlabel=\"Max missing\"\n                  value={this.state.maxmissing}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"smry\"\n                fieldlabel=\"Summary\"\n                value={this.state.smry}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.smry.length > 0 &&\n                <RenderTextField\n                  id=\"smry_only\"\n                  fieldlabel=\"Summary only\"\n                  value={this.state.smry_only}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"units\"\n                fieldlabel=\"Units\"\n                value={this.state.units}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.loc.length === 0 &&  \n                <RenderTextField\n                  id=\"area_reduce\"\n                  fieldlabel=\"Area reduction\"\n                  value={this.state.area_reduce}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n\n              {this.state.name.length > 0 &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  className={classes.button}\n                  onMouseDown={this.addElement}\n                >\n                  Add element\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional input\n              </Typography>\n              <RenderTextField\n                id=\"meta\"\n                fieldlabel=\"Meta options\"\n                value={this.state.meta}\n                options={{style: {width:\"95%\"}}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"output\"\n                fieldlabel=\"Output type\"\n                value={this.state.output}\n                options={{disabled: this.state.meta.length && this.state.output === 'json' ? true : false}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateOutput}\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    value={this.state.mapcontrols}\n                    onChange={this.handleMapControlClick}\n                    checked={this.state.mapcontrols}\n                    classes={{\n                      switchBase: classes.switchBase, \n                      checked: classes.checked,\n                      bar: classes.bar,\n                    }}\n                  />\n                }\n                label=\"Map settings\"\n              />\n              {this.state.mapcontrols &&\n                <div>\n                  {this.state.output !== 'image' &&\n                    <RenderTextField\n                      id=\"info_only\"\n                      fieldlabel=\"Info only\"\n                      value={this.state.info_only}\n                      options={{style: {marginLeft:\"2em\"}}}\n                      updateHelpFor={this.updateHelpFor}\n                      updateParam={this.updateImage}\n                    />\n                  }\n                  <RenderTextField\n                    id=\"proj\"\n                    fieldlabel=\"Proj\"\n                    value={this.state.proj}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  <RenderTextField\n                    id=\"overlays\"\n                    fieldlabel=\"Overlays\"\n                    value={this.state.overlays}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  <RenderTextField\n                    id=\"interp\"\n                    fieldlabel=\"Interp\"\n                    value={this.state.interp}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  <RenderTextField\n                    id=\"cmap\"\n                    fieldlabel=\"Cmap\"\n                    value={this.state.cmap}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  {this.state.height.length === 0 &&\n                    <RenderTextField\n                      id=\"width\"\n                      fieldlabel=\"Width\"\n                      value={this.state.width}\n                      options={{style: {marginLeft:\"2em\"}, required: this.state.mapcontrols}}\n                      updateHelpFor={this.updateHelpFor}\n                      updateParam={this.updateImage}\n                    />\n                  }\n                  {this.state.width.length === 0 &&\n                    <RenderTextField\n                      id=\"height\"\n                      fieldlabel=\"Height\"\n                      value={this.state.height}\n                      options={{style: {marginLeft:\"2em\"}, required: this.state.mapcontrols}}\n                      updateHelpFor={this.updateHelpFor}\n                      updateParam={this.updateImage}\n                    />\n                  }\n                  <RenderTextField\n                    id=\"levels\"\n                    fieldlabel=\"Levels\"\n                    value={this.state.levels}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                </div>\n              }\n            </Grid>\n          </Grid>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(GridDataInput)"]},"metadata":{},"sourceType":"module"}