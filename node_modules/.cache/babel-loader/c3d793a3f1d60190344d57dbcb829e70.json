{"ast":null,"code":"import _classCallCheck from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/QuerySelector.jsx\";\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { withStyles } from '@material-ui/core/styles';\nvar styles = {\n  // classes for ToggleButton\n  root: {\n    background: \"white\",\n    color: \"darkblue\",\n    textTransform: \"none\",\n    borderRight: \"1pt solid lightgray\"\n  },\n  selected: {\n    background: \"blue !important\",\n    color: \"white !important\"\n  },\n  // class for Paper\n  paperRoot: {\n    margin: \"0 0 2em\"\n  },\n  // class for page title typography\n  titleRoot: {\n    color: \"darkblue\"\n  }\n};\n\nvar QuerySelector =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuerySelector, _Component);\n\n  function QuerySelector(props) {\n    var _this;\n\n    _classCallCheck(this, QuerySelector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuerySelector).call(this, props));\n\n    _this.handleChange = function (event, value) {\n      if (value) {\n        _this.setState({\n          wstype: value\n        });\n\n        _this.props.handleChange(value);\n      }\n    };\n\n    _this.state = {\n      wstype: ''\n    };\n    return _this;\n  }\n\n  _createClass(QuerySelector, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        wstype: this.props.wstype\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.wstype !== prevProps.wstype) {\n        this.setState({\n          wstype: this.props.wstype\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Paper, {\n        elevation: 0,\n        classes: {\n          root: classes.paperRoot\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        classes: {\n          root: classes.titleRoot\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"ACIS Query Builder\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ToggleButtonGroup, {\n        value: this.state.wstype,\n        exclusive: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.query_types.map(function (item) {\n        return React.createElement(ToggleButton, {\n          key: item,\n          value: item,\n          classes: {\n            root: classes.root,\n            selected: classes.selected\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, item);\n      })))));\n    }\n  }]);\n\n  return QuerySelector;\n}(Component);\n\nexport default withStyles(styles)(QuerySelector);","map":{"version":3,"sources":["/Users/kle1/progs/React/QueryBuilder3/src/QuerySelector.jsx"],"names":["React","Component","Paper","Grid","Typography","ToggleButton","ToggleButtonGroup","withStyles","styles","root","background","color","textTransform","borderRight","selected","paperRoot","margin","titleRoot","QuerySelector","props","handleChange","event","value","setState","wstype","state","prevProps","classes","query_types","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = {\n  // classes for ToggleButton\n  root: {\n    background:\"white\",\n    color:\"darkblue\",\n    textTransform:\"none\",\n    borderRight:\"1pt solid lightgray\"\n  },\n  selected: {\n    background: \"blue !important\",\n    color:\"white !important\"\n  },\n  // class for Paper\n  paperRoot: {\n    margin: \"0 0 2em\"\n  },\n  // class for page title typography\n  titleRoot: {\n    color: \"darkblue\"\n  },\n}\n\nclass QuerySelector extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      wstype: '',\n    }\n  }\n\n  handleChange = (event, value) => {\n    if (value) {\n      this.setState({ wstype: value})\n      this.props.handleChange(value)\n    }\n  }\n\n  componentDidMount() {\n    this.setState({wstype: this.props.wstype})\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.wstype !== prevProps.wstype) {\n      this.setState({wstype: this.props.wstype})\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    return (\n      <Paper elevation={0} classes={{root:classes.paperRoot}}>\n        <Grid container spacing={0}>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h5\" classes={{root:classes.titleRoot}}>\n              ACIS Query Builder\n            </Typography>\n          </Grid>\n          <Grid item>\n            <ToggleButtonGroup value={this.state.wstype} exclusive onChange={this.handleChange}>\n              {this.props.query_types.map((item) => (\n                <ToggleButton \n                  key={item} \n                  value={item}\n                  classes={{root:classes.root, selected:classes.selected}}\n                >\n                  {item}\n              </ToggleButton>                  \n              ))}\n            </ToggleButtonGroup>\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  }\n}\n\nexport default withStyles(styles)(QuerySelector)"]},"metadata":{},"sourceType":"module"}