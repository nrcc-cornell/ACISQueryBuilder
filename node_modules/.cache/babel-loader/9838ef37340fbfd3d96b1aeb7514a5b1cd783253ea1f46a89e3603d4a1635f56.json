{"ast":null,"code":"import React from'react';import Box from'@mui/material/Box';import Grid from'@mui/material/Grid';import Typography from'@mui/material/Typography';import ToggleButton from'@mui/material/ToggleButton';import ToggleButtonGroup from'@mui/material/ToggleButtonGroup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ResultsButtons=function ResultsButtons(props){var buttonLabels=['JSON','Basic format','Full format'];return/*#__PURE__*/_jsx(Box,{sx:{my:\"0.5em\"},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Results:\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:props.showButtons&&/*#__PURE__*/_jsx(ToggleButtonGroup,{value:props.selectedButton,exclusive:true,onChange:function onChange(e){return props.handleFormat(e.target.value);},children:buttonLabels.map(function(item){return/*#__PURE__*/_jsx(ToggleButton,{value:item,children:item},item);})})})]})});};export default ResultsButtons;","map":{"version":3,"names":["React","Box","Grid","Typography","ToggleButton","ToggleButtonGroup","ResultsButtons","props","buttonLabels","my","showButtons","selectedButton","e","handleFormat","target","value","map","item"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/ResultsButtons.jsx"],"sourcesContent":["import React from 'react'\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\nconst ResultsButtons = (props) => {\n  const buttonLabels = ['JSON', 'Basic format', 'Full format']\n\n  return (\n    <Box sx={{my:\"0.5em\"}}>\n      <Grid container spacing={4}>\n        <Grid item>\n          <Typography variant=\"h6\">\n            Results:\n          </Typography>\n        </Grid>\n        <Grid item>\n          {props.showButtons &&\n            <ToggleButtonGroup \n              value={props.selectedButton} \n              exclusive \n              onChange={e => props.handleFormat(e.target.value)}\n            >\n              {buttonLabels.map((item) => (\n                <ToggleButton \n                  key={item} \n                  value={item}\n                >\n                  {item}\n                </ToggleButton>                  \n              ))}\n            </ToggleButtonGroup>\n          }\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default ResultsButtons"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,IAAG,KAAM,mBAAmB,CACnC,MAAOC,KAAI,KAAM,oBAAoB,CACrC,MAAOC,WAAU,KAAM,0BAA0B,CACjD,MAAOC,aAAY,KAAM,4BAA4B,CACrD,MAAOC,kBAAiB,KAAM,iCAAiC,yFAE/D,GAAMC,eAAc,CAAG,QAAjBA,eAAc,CAAIC,KAAK,CAAK,CAChC,GAAMC,aAAY,CAAG,CAAC,MAAM,CAAE,cAAc,CAAE,aAAa,CAAC,CAE5D,mBACE,KAAC,GAAG,EAAC,EAAE,CAAE,CAACC,EAAE,CAAC,OAAO,CAAE,uBACpB,MAAC,IAAI,EAAC,SAAS,MAAC,OAAO,CAAE,CAAE,wBACzB,KAAC,IAAI,EAAC,IAAI,4BACR,KAAC,UAAU,EAAC,OAAO,CAAC,IAAI,UAAC,UAEzB,EAAa,EACR,cACP,KAAC,IAAI,EAAC,IAAI,eACPF,KAAK,CAACG,WAAW,eAChB,KAAC,iBAAiB,EAChB,KAAK,CAAEH,KAAK,CAACI,cAAe,CAC5B,SAAS,MACT,QAAQ,CAAE,kBAAAC,CAAC,QAAIL,MAAK,CAACM,YAAY,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,EAAC,UAEjDP,YAAY,CAACQ,GAAG,CAAC,SAACC,IAAI,qBACrB,KAAC,YAAY,EAEX,KAAK,CAAEA,IAAK,UAEXA,IAAI,EAHAA,IAAI,CAII,EAChB,CAAC,EACgB,EAEjB,GACF,EACH,CAEV,CAAC,CAED,cAAeX,eAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}