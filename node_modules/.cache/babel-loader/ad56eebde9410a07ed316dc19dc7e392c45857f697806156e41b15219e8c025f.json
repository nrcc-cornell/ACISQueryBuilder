{"ast":null,"code":"import React from'react';import Box from'@mui/material/Box';import Grid from'@mui/material/Grid';import Typography from'@mui/material/Typography';import ToggleButton from'@mui/material/ToggleButton';import ToggleButtonGroup from'@mui/material/ToggleButtonGroup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuerySelector=function QuerySelector(props){var handleChange=function handleChange(event,value){if(value){props.handleChange(value);}};return/*#__PURE__*/_jsx(Box,{sx:{mb:\"1em\"},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:0,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"ACIS Query Builder\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(ToggleButtonGroup,{value:props.wstype,exclusive:true,onChange:handleChange,children:props.query_types.map(function(item){return/*#__PURE__*/_jsx(ToggleButton,{value:item,children:item},item);})})})]})});};export default QuerySelector;","map":{"version":3,"names":["React","Box","Grid","Typography","ToggleButton","ToggleButtonGroup","QuerySelector","props","handleChange","event","value","mb","wstype","query_types","map","item"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/QuerySelector.jsx"],"sourcesContent":["import React from 'react'\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\nconst QuerySelector = (props) => {\n\n  const handleChange = (event, value) => {\n    if (value) {\n      props.handleChange(value)\n    }\n  }\n\n  return (\n    <Box sx={{mb:\"1em\"}}>\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={4}>\n          <Typography variant=\"h5\">\n            ACIS Query Builder\n          </Typography>\n        </Grid>\n        <Grid item>\n          <ToggleButtonGroup \n            value={props.wstype} \n            exclusive \n            onChange={handleChange}\n          >\n            {props.query_types.map((item) => (\n              <ToggleButton \n                key={item} \n                value={item}\n              >\n                {item}\n              </ToggleButton>                  \n            ))}\n          </ToggleButtonGroup>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default QuerySelector"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,IAAG,KAAM,mBAAmB,CACnC,MAAOC,KAAI,KAAM,oBAAoB,CACrC,MAAOC,WAAU,KAAM,0BAA0B,CACjD,MAAOC,aAAY,KAAM,4BAA4B,CACrD,MAAOC,kBAAiB,KAAM,iCAAiC,yFAE/D,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIC,KAAK,CAAK,CAE/B,GAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIC,KAAK,CAAEC,KAAK,CAAK,CACrC,GAAIA,KAAK,CAAE,CACTH,KAAK,CAACC,YAAY,CAACE,KAAK,CAAC,CAC3B,CACF,CAAC,CAED,mBACE,KAAC,GAAG,EAAC,EAAE,CAAE,CAACC,EAAE,CAAC,KAAK,CAAE,uBAClB,MAAC,IAAI,EAAC,SAAS,MAAC,OAAO,CAAE,CAAE,wBACzB,KAAC,IAAI,EAAC,IAAI,MAAC,EAAE,CAAE,EAAG,CAAC,EAAE,CAAE,CAAE,uBACvB,KAAC,UAAU,EAAC,OAAO,CAAC,IAAI,UAAC,oBAEzB,EAAa,EACR,cACP,KAAC,IAAI,EAAC,IAAI,4BACR,KAAC,iBAAiB,EAChB,KAAK,CAAEJ,KAAK,CAACK,MAAO,CACpB,SAAS,MACT,QAAQ,CAAEJ,YAAa,UAEtBD,KAAK,CAACM,WAAW,CAACC,GAAG,CAAC,SAACC,IAAI,qBAC1B,KAAC,YAAY,EAEX,KAAK,CAAEA,IAAK,UAEXA,IAAI,EAHAA,IAAI,CAII,EAChB,CAAC,EACgB,EACf,GACF,EACH,CAEV,CAAC,CAED,cAAeT,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}