{"ast":null,"code":"import _objectSpread from \"/Users/keith/progs/React/ACISQueryBuilder/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/keith/progs/React/ACISQueryBuilder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/keith/progs/React/ACISQueryBuilder/src/GridData2Input.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport RenderTextField from './RenderTextField';\nimport DateSelection from './DateSelection';\nimport { buildElement, updateState, buildImage, checkElemsError } from './builders.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GridData2Input = function GridData2Input(props) {\n  _s();\n  var _useState = useState({\n      loc: '',\n      state: '',\n      county: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      meta: '',\n      output: '',\n      image: '',\n      elem: '',\n      elem_string: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      area_reduce: '',\n      elem_sdate: '',\n      elem_edate: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    datastate = _useState2[0],\n    setDatastate = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    notdly = _useState4[0],\n    setNotdly = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    hasInterval = _useState6[0],\n    setHasInterval = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hasElemsError = _useState8[0],\n    setHasElemsError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    hasNestElemsError = _useState10[0],\n    setHasNestElemsError = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    mapcontrols = _useState12[0],\n    setMapcontrols = _useState12[1];\n  var _useState13 = useState('pair'),\n    _useState14 = _slicedToArray(_useState13, 2),\n    datetype = _useState14[0],\n    setDatetype = _useState14[1];\n  var datafields = ['loc', 'state', 'bbox', 'sdate', 'edate', 'date', 'grid', 'elems', 'meta', 'output', 'image'];\n  var imagefields = ['info_only', 'proj', 'overlays', 'interp', 'cmap', 'width', 'height', 'levels'];\n  var elementKeys = Object.keys(datastate).filter(function (item) {\n    return ![\"elem_string\"].concat(datafields, imagefields).includes(item);\n  });\n  var updateParam = function updateParam(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n    props.updateInputParams(update);\n  };\n  var updateElemBuild = function updateElemBuild(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n  };\n  var addElement = function addElement(event) {\n    var action = event.currentTarget.id; //\"add\" or \"replace\"\n    var newElems = JSON.stringify(buildElement(elementKeys, datastate, action));\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      elems: newElems\n    }));\n    props.updateInputParams({\n      elems: newElems\n    });\n    props.updateHelpFor(\"\");\n  };\n  var clearElements = function clearElements() {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      elems: ''\n    }));\n    props.updateInputParams({\n      elems: \"\"\n    });\n    props.updateHelpFor(\"\");\n    setHasInterval(false);\n    setHasElemsError(false);\n  };\n  var updateElems = function updateElems(update) {\n    setDatastate(_objectSpread(_objectSpread({}, datastate), update));\n    var elemsError = checkElemsError(update.elems);\n    setHasElemsError(elemsError);\n    if (!elemsError) {\n      props.updateInputParams(update);\n    }\n  };\n  var updateImage = function updateImage(update) {\n    var updatedstate = _objectSpread(_objectSpread({}, datastate), update);\n    setDatastate(updatedstate);\n    var image = buildImage(imagefields, updatedstate);\n    props.updateInputParams({\n      image: image\n    });\n  };\n  var updateOutput = function updateOutput(update) {\n    if (update.output === 'image') {\n      var image = buildImage(imagefields, datastate);\n      updateParam({\n        output: \"image\",\n        image: image\n      });\n      setMapcontrols(true);\n    } else {\n      updateParam(update);\n    }\n  };\n  var handleMapControlClick = function handleMapControlClick(event) {\n    if (datastate.output !== 'image' || event.target.checked) {\n      var image = event.target.checked ? buildImage(imagefields, datastate) : \"\";\n      updateParam({\n        image: image\n      });\n      setMapcontrols(event.target.checked);\n    }\n  };\n  var updateHelpFor = function updateHelpFor(helpFor) {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta';\n    } else if (helpFor === 'output') {\n      helpFor = 'grid2_output';\n    } else if (helpFor === 'elems') {\n      helpFor = 'grid2_elems';\n    } else if (helpFor === 'name') {\n      helpFor = 'grid2_name';\n    } else if (helpFor === 'reduce') {\n      helpFor = 'grid2_reduce';\n    } else if (helpFor === 'grid') {\n      helpFor = 'grid2';\n    } else if (helpFor === 'bbox') {\n      helpFor = 'grid2_bbox';\n    } else if (helpFor === 'elem_sdate' || helpFor === 'elem_edate') {\n      helpFor = 'date';\n    }\n    props.updateHelpFor(helpFor);\n  };\n  var nestElement = function nestElement() {\n    var newElems = buildElement(elementKeys, datastate, \"add\");\n    var newElemString = JSON.stringify(newElems[0]);\n    setDatastate(_objectSpread(_objectSpread({}, datastate), {\n      elem: newElems[0],\n      elem_string: newElemString,\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      elem_sdate: '',\n      elem_edate: ''\n    }));\n  };\n  var updateNestElement = function updateNestElement(update) {\n    try {\n      var newNest = JSON.parse(update.elem);\n      setHasNestElemsError(false);\n      setDatastate(_objectSpread(_objectSpread({}, datastate), {\n        elem: newNest,\n        elem_string: update.elem\n      }));\n    } catch (_unused) {\n      setHasNestElemsError(true);\n      setDatastate(_objectSpread(_objectSpread({}, datastate), {\n        elem_string: update.elem\n      }));\n    }\n  };\n\n  // Update local variable storage whenever input_params updates\n  useEffect(function () {\n    var _updateState = updateState(datafields, elementKeys, props.input_params, props.resetElemsBuilder),\n      newstate = _updateState.newstate,\n      checkHasIntervalStatus = _updateState.checkHasIntervalStatus,\n      checkElemsErrorStatus = _updateState.checkElemsErrorStatus;\n    setDatastate(_objectSpread(_objectSpread({}, datastate), newstate));\n    setHasInterval(checkHasIntervalStatus);\n    setHasElemsError(checkElemsErrorStatus);\n    props.setResetElemsBuilder(false);\n    if (Object.keys(props.input_params).includes(\"date\") && datetype === \"pair\") {\n      setDatetype(\"single\");\n    } else if (Object.keys(props.input_params).includes(\"sdate\") && datetype === \"single\") {\n      setDatetype(\"pair\");\n    }\n    // eslint-disable-next-line\n  }, [props.input_params]);\n\n  // Check for change to notdly whenever duration or interval changes\n  useEffect(function () {\n    if (datastate.duration) {\n      setNotdly(datastate.duration.length === 3 && datastate.duration !== 'dly' || datastate.duration.length > 0 && !isNaN(Number(datastate.duration)) && (datastate.duration !== \"1\" || datastate.interval !== 'dly' && !(datastate.interval.includes('[') && datastate.interval.length === 7)));\n    }\n  }, [datastate.duration, datastate.interval]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Required input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \"Enter information for one of the grid selection types:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, _this), datastate.state.length === 0 && datastate.county.length === 0 && datastate.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"loc\",\n          fieldlabel: \"Point location\",\n          value: datastate.loc,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, _this), datastate.loc.length === 0 && datastate.county.length === 0 && datastate.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"state\",\n          fieldlabel: \"State\",\n          value: datastate.state,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, _this), datastate.loc.length === 0 && datastate.state.length === 0 && datastate.bbox.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"county\",\n          fieldlabel: \"County\",\n          value: datastate.county,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, _this), datastate.loc.length === 0 && datastate.county.length === 0 && datastate.state.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"bbox\",\n          fieldlabel: \"Bounding box\",\n          value: datastate.bbox,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(DateSelection, {\n          sdate: datastate.sdate,\n          edate: datastate.edate,\n          date: datastate.date,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam,\n          datetype: datetype,\n          setDatetype: setDatetype\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"grid\",\n          fieldlabel: \"Grid id\",\n          value: datastate.grid,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"elems\",\n          fieldlabel: \"Elements\",\n          value: datastate.elems,\n          options: {\n            width: 0.9,\n            multiline: true,\n            placeholder: \"Build using Element setup\",\n            error: hasElemsError,\n            helperText: hasElemsError ? \"Error in elements encoding\" : \"\"\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, _this), datastate.elems.includes(\"{\") && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          onMouseDown: clearElements,\n          children: \"Clear elements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Optional elements builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, _this), datastate.elem_string.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"name\",\n          fieldlabel: \"Name\",\n          value: datastate.name,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, _this), datastate.elem_string.length > 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"elem\",\n          fieldlabel: \"Elem\",\n          value: datastate.elem_string,\n          options: {\n            width: 0.9,\n            multiline: true,\n            error: hasNestElemsError,\n            helperText: hasNestElemsError ? \"Error in elements encoding\" : \"\"\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateNestElement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, _this), datastate.name.includes(\"dd\") && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"base\",\n          fieldlabel: \"Base\",\n          value: datastate.base,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"interval\",\n          fieldlabel: \"Interval\",\n          value: datastate.interval,\n          options: {\n            disabled: hasInterval\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"duration\",\n          fieldlabel: \"Duration\",\n          value: datastate.duration,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, _this), datastate.duration === 'std' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"season_start\",\n          fieldlabel: \"Season start\",\n          value: datastate.season_start,\n          options: {\n            required: true\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"reduce\",\n          fieldlabel: \"Reduce\",\n          value: datastate.reduce,\n          options: {\n            required: notdly\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, _this), notdly && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"maxmissing\",\n          fieldlabel: \"Max missing\",\n          value: datastate.maxmissing,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"smry\",\n          fieldlabel: \"Summary\",\n          value: datastate.smry,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, _this), datastate.smry.length > 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"smry_only\",\n          fieldlabel: \"Summary only\",\n          value: datastate.smry_only,\n          updateHelpFor: props.updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"elem_sdate\",\n          fieldlabel: \"Start date\",\n          value: datastate.elem_sdate,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"elem_edate\",\n          fieldlabel: \"End date\",\n          value: datastate.elem_edate,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, _this), datastate.loc.length === 0 && datastate.county.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"area_reduce\",\n          fieldlabel: \"Area reduction\",\n          value: datastate.area_reduce,\n          updateHelpFor: updateHelpFor,\n          updateParam: updateElemBuild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, _this), (datastate.name.length > 0 || datastate.elem_string.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"outlined\",\n            onMouseDown: nestElement,\n            children: \"Nest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"add\",\n            size: \"small\",\n            variant: \"outlined\",\n            sx: {\n              ml: 1\n            },\n            onMouseDown: addElement,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, _this), datastate.name.length > 0 && datastate.elems.includes(\"{\") && /*#__PURE__*/_jsxDEV(Button, {\n          id: \"replace\",\n          size: \"small\",\n          variant: \"outlined\",\n          onMouseDown: addElement,\n          children: \"Replace elements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Optional input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"meta\",\n          fieldlabel: \"Meta options\",\n          value: datastate.meta,\n          options: {\n            width: 0.95\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n          id: \"output\",\n          fieldlabel: \"Output type\",\n          value: datastate.output,\n          options: {\n            disabled: datastate.meta.length && datastate.output === 'json' ? true : false\n          },\n          updateHelpFor: updateHelpFor,\n          updateParam: updateOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            value: mapcontrols,\n            onChange: handleMapControlClick,\n            checked: mapcontrols,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, _this),\n          label: \"Map settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, _this), mapcontrols && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pl: \"1em\"\n          },\n          children: [datastate.output !== 'image' && /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"info_only\",\n            fieldlabel: \"Info only\",\n            value: datastate.info_only,\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"proj\",\n            fieldlabel: \"Proj\",\n            value: datastate.proj,\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"overlays\",\n            fieldlabel: \"Overlays\",\n            value: datastate.overlays,\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"interp\",\n            fieldlabel: \"Interp\",\n            value: datastate.interp,\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"cmap\",\n            fieldlabel: \"Cmap\",\n            value: datastate.cmap,\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, _this), datastate.height.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"width\",\n            fieldlabel: \"Width\",\n            value: datastate.width,\n            options: {\n              required: mapcontrols\n            },\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 17\n          }, _this), datastate.width.length === 0 && /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"height\",\n            fieldlabel: \"Height\",\n            value: datastate.height,\n            options: {\n              required: mapcontrols\n            },\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(RenderTextField, {\n            id: \"levels\",\n            fieldlabel: \"Levels\",\n            value: datastate.levels,\n            updateHelpFor: updateHelpFor,\n            updateParam: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, _this);\n};\n_s(GridData2Input, \"oPr3HLYwlJ+G0OjDIZbMD/rUvds=\");\n_c = GridData2Input;\nexport default GridData2Input;\nvar _c;\n$RefreshReg$(_c, \"GridData2Input\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","Box","Button","FormControlLabel","Switch","RenderTextField","DateSelection","buildElement","updateState","buildImage","checkElemsError","GridData2Input","props","loc","state","county","bbox","sdate","edate","date","grid","elems","meta","output","image","elem","elem_string","name","base","interval","duration","season_start","reduce","maxmissing","area_reduce","elem_sdate","elem_edate","info_only","proj","overlays","interp","cmap","width","height","levels","datastate","setDatastate","notdly","setNotdly","hasInterval","setHasInterval","hasElemsError","setHasElemsError","hasNestElemsError","setHasNestElemsError","mapcontrols","setMapcontrols","datetype","setDatetype","datafields","imagefields","elementKeys","Object","keys","filter","item","includes","updateParam","update","updateInputParams","updateElemBuild","addElement","event","action","currentTarget","id","newElems","JSON","stringify","updateHelpFor","clearElements","updateElems","elemsError","updateImage","updatedstate","updateOutput","handleMapControlClick","target","checked","helpFor","nestElement","newElemString","updateNestElement","newNest","parse","input_params","resetElemsBuilder","newstate","checkHasIntervalStatus","checkElemsErrorStatus","setResetElemsBuilder","length","isNaN","Number","multiline","placeholder","error","helperText","disabled","required","smry","smry_only","ml","pl"],"sources":["/Users/keith/progs/React/ACISQueryBuilder/src/GridData2Input.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Typography from '@mui/material/Typography'\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport { buildElement, updateState, buildImage, checkElemsError } from './builders.js'\n\nconst GridData2Input = (props) => { \n\n  const [ datastate, setDatastate ] = useState({\n    loc: '',\n    state: '',\n    county: '',\n    bbox: '',\n    sdate: '',\n    edate: '',\n    date: '',\n    grid: '',\n    elems: '',\n    meta: '',\n    output: '',\n    image: '',\n    elem: '',\n    elem_string: '',\n    name: '',\n    base: '',\n    interval: '',\n    duration: '',\n    season_start: '',\n    reduce: '',\n    maxmissing: '',\n    area_reduce: '',\n    elem_sdate: '',\n    elem_edate: '',\n    info_only: '',\n    proj: '',\n    overlays: '',\n    interp: '',\n    cmap: '',\n    width: '',\n    height: '',\n    levels: '',\n  })\n  \n  const [ notdly, setNotdly ] = useState(false)\n  const [ hasInterval, setHasInterval ] = useState(false)\n  const [ hasElemsError, setHasElemsError ] = useState(false)\n  const [ hasNestElemsError, setHasNestElemsError ] = useState(false)\n  const [ mapcontrols, setMapcontrols ] = useState(false)\n  const [ datetype, setDatetype ] = useState('pair')\n  \n  const datafields = ['loc','state','bbox','sdate','edate','date','grid','elems','meta','output','image']\n  const imagefields = ['info_only','proj','overlays','interp','cmap','width','height','levels']\n  const elementKeys = Object.keys(datastate).filter(\n    item => (![\"elem_string\", ...datafields, ...imagefields].includes(item)\n  ))  \n\n  const updateParam = (update) => {\n    setDatastate({...datastate, ...update})\n    props.updateInputParams(update)\n  }\n\n  const updateElemBuild = (update) => {\n    setDatastate({...datastate, ...update})\n  }\n\n  const addElement = (event) => {\n    const action = event.currentTarget.id   //\"add\" or \"replace\"\n    const newElems = JSON.stringify(buildElement(elementKeys, datastate, action))\n    setDatastate({...datastate, ...{elems: newElems}})\n    props.updateInputParams({elems: newElems})\n    props.updateHelpFor(\"\")\n  }\n\n  const clearElements = () => {\n    setDatastate({...datastate, ...{elems: ''}})\n    props.updateInputParams({elems: \"\"})\n    props.updateHelpFor(\"\")\n    setHasInterval(false)\n    setHasElemsError(false)\n  }\n\n  const updateElems = (update) => {\n    setDatastate({...datastate, ...update})\n    const elemsError = checkElemsError(update.elems)\n    setHasElemsError(elemsError)\n    if (!elemsError) {\n      props.updateInputParams(update)\n    }\n  }\n\n  const updateImage = (update) => {\n    const updatedstate = {...datastate, ...update}\n    setDatastate(updatedstate)\n    const image = buildImage(imagefields, updatedstate)\n    props.updateInputParams({image: image})\n  }\n\n  const updateOutput = (update) => {\n    if (update.output === 'image') {\n      const image = buildImage(imagefields, datastate)\n      updateParam({output:\"image\", image:image})\n      setMapcontrols(true)\n    } else {\n      updateParam(update)\n    }\n  }\n\n  const handleMapControlClick = event => {\n    if (datastate.output !== 'image' || event.target.checked) {\n      const image = event.target.checked ? buildImage(imagefields, datastate) : \"\"\n      updateParam({image: image})\n      setMapcontrols(event.target.checked)\n    }\n  }\n  \n  const updateHelpFor = (helpFor) => {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta'\n    } else if (helpFor === 'output') {\n      helpFor = 'grid2_output'\n    } else if (helpFor === 'elems') {\n      helpFor = 'grid2_elems'\n    } else if (helpFor === 'name') {\n      helpFor = 'grid2_name'\n    } else if (helpFor === 'reduce') { \n      helpFor = 'grid2_reduce'\n    } else if (helpFor === 'grid') {\n      helpFor = 'grid2'\n    } else if (helpFor === 'bbox') {\n      helpFor = 'grid2_bbox'\n    } else if (helpFor === 'elem_sdate' || helpFor === 'elem_edate') {\n      helpFor = 'date'\n    }\n    props.updateHelpFor(helpFor)\n  }\n\n  const nestElement = () => {\n    const newElems = buildElement(elementKeys, datastate, \"add\")\n    const newElemString = JSON.stringify(newElems[0])\n    setDatastate({...datastate, ...{\n      elem: newElems[0],\n      elem_string: newElemString,\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      elem_sdate: '',\n      elem_edate: '',\n    }})\n  }\n\n  const updateNestElement = (update) => {\n    try {\n      const newNest = JSON.parse(update.elem)\n      setHasNestElemsError(false)\n      setDatastate({...datastate, ...{\n        elem: newNest,\n        elem_string: update.elem,\n      }})\n    } catch {\n      setHasNestElemsError(true)\n      setDatastate({...datastate, ...{elem_string: update.elem}})\n    }\n  }\n\n  // Update local variable storage whenever input_params updates\n  useEffect(() => {\n    const {newstate, checkHasIntervalStatus, checkElemsErrorStatus} = updateState(datafields, elementKeys, props.input_params, props.resetElemsBuilder)\n    setDatastate({...datastate, ...newstate})\n    setHasInterval(checkHasIntervalStatus)\n    setHasElemsError(checkElemsErrorStatus)\n    props.setResetElemsBuilder(false)\n    if (Object.keys(props.input_params).includes(\"date\") && datetype === \"pair\") {\n      setDatetype(\"single\")\n    } else if (Object.keys(props.input_params).includes(\"sdate\") && datetype === \"single\") {\n      setDatetype(\"pair\")\n    }\n    // eslint-disable-next-line\n  }, [props.input_params])\n\n  // Check for change to notdly whenever duration or interval changes\n  useEffect(() => {\n    if (datastate.duration) {\n      setNotdly((datastate.duration.length === 3 && datastate.duration !== 'dly') || \n        (datastate.duration.length > 0 && !isNaN(Number(datastate.duration)) && \n        (datastate.duration !== \"1\" || (datastate.interval !== 'dly' && !(datastate.interval.includes('[') && datastate.interval.length === 7)))))\n    }\n  }, [datastate.duration, datastate.interval])\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Required input\n          </Typography>\n          <Typography variant=\"caption\">\n            Enter information for one of the grid selection types:\n          </Typography>\n          {datastate.state.length === 0 && \n            datastate.county.length === 0 && \n            datastate.bbox.length === 0 && \n            <RenderTextField\n              id=\"loc\"\n              fieldlabel=\"Point location\"\n              value={datastate.loc}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {datastate.loc.length === 0 && \n            datastate.county.length === 0 && \n            datastate.bbox.length === 0 && \n            <RenderTextField\n              id=\"state\"\n              fieldlabel=\"State\"\n              value={datastate.state}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {datastate.loc.length === 0 &&\n            datastate.state.length === 0 && \n            datastate.bbox.length === 0 && \n            <RenderTextField\n              id=\"county\"\n              fieldlabel=\"County\"\n              value={datastate.county}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          {datastate.loc.length === 0 && \n            datastate.county.length === 0 && \n            datastate.state.length === 0 && \n            <RenderTextField\n              id=\"bbox\"\n              fieldlabel=\"Bounding box\"\n              value={datastate.bbox}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateParam}\n            />\n          }\n          <DateSelection\n            sdate={datastate.sdate}\n            edate={datastate.edate}\n            date={datastate.date}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateParam}\n            datetype={datetype}\n            setDatetype={setDatetype}  \n          />\n          <RenderTextField\n            id=\"grid\"\n            fieldlabel=\"Grid id\"\n            value={datastate.grid}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"elems\"\n            fieldlabel=\"Elements\"\n            value={datastate.elems}\n            options={{\n              width:0.9,\n              multiline: true, \n              placeholder: \"Build using Element setup\",\n              error: hasElemsError,\n              helperText: hasElemsError ? \"Error in elements encoding\" : \"\",\n            }}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElems}\n          />\n          {datastate.elems.includes(\"{\") &&\n            <Button \n              size=\"small\"\n              variant=\"outlined\"\n              onMouseDown={clearElements}\n            >\n              Clear elements\n            </Button>\n          }\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional elements builder\n          </Typography>\n          {datastate.elem_string.length === 0 &&\n            <RenderTextField\n              id=\"name\"\n              fieldlabel=\"Name\"\n              value={datastate.name}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          {datastate.elem_string.length > 0 &&\n            <RenderTextField\n              id=\"elem\"\n              fieldlabel=\"Elem\"\n              value={datastate.elem_string}\n              options={{\n                width:0.9,\n                multiline: true,\n                error: hasNestElemsError,\n                helperText: hasNestElemsError ? \"Error in elements encoding\" : \"\",\n              }}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateNestElement}\n            />\n          }\n          {datastate.name.includes(\"dd\") &&\n            <RenderTextField\n              id=\"base\"\n              fieldlabel=\"Base\"\n              value={datastate.base}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"interval\"\n            fieldlabel=\"Interval\"\n            value={datastate.interval}\n            options={{disabled:hasInterval}}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          <RenderTextField\n            id=\"duration\"\n            fieldlabel=\"Duration\"\n            value={datastate.duration}\n\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {datastate.duration === 'std' &&\n            <RenderTextField\n              id=\"season_start\"\n              fieldlabel=\"Season start\"\n              value={datastate.season_start}\n              options={{required:true}}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"reduce\"\n            fieldlabel=\"Reduce\"\n            value={datastate.reduce}\n            options={{required:notdly}}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {notdly &&\n            <RenderTextField\n              id=\"maxmissing\"\n              fieldlabel=\"Max missing\"\n              value={datastate.maxmissing}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"smry\"\n            fieldlabel=\"Summary\"\n            value={datastate.smry}\n            updateHelpFor={props.updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {datastate.smry.length > 0 &&\n            <RenderTextField\n              id=\"smry_only\"\n              fieldlabel=\"Summary only\"\n              value={datastate.smry_only}\n              updateHelpFor={props.updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"elem_sdate\"\n            fieldlabel=\"Start date\"\n            value={datastate.elem_sdate}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          <RenderTextField\n            id=\"elem_edate\"\n            fieldlabel=\"End date\"\n            value={datastate.elem_edate}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateElemBuild}\n          />\n          {(datastate.loc.length === 0 && datastate.county.length === 0) && \n            <RenderTextField\n              id=\"area_reduce\"\n              fieldlabel=\"Area reduction\"\n              value={datastate.area_reduce}\n              updateHelpFor={updateHelpFor}\n              updateParam={updateElemBuild}\n            />\n          }\n\n          {(datastate.name.length > 0 || datastate.elem_string.length > 0) &&\n            <div>\n              <Button \n                size=\"small\"\n                variant=\"outlined\"\n                onMouseDown={nestElement}\n              >\n                Nest\n              </Button>\n              <Button \n                id=\"add\"\n                size=\"small\"\n                variant=\"outlined\"\n                sx={{ml:1}}\n                onMouseDown={addElement}\n              >\n                Add\n              </Button>\n            </div>\n          }\n          {datastate.name.length > 0 && datastate.elems.includes(\"{\") &&\n            <Button \n              id=\"replace\"\n              size=\"small\"\n              variant=\"outlined\"\n              onMouseDown={addElement}\n            >\n              Replace elements\n            </Button>\n          }\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional input\n          </Typography>\n          <RenderTextField\n            id=\"meta\"\n            fieldlabel=\"Meta options\"\n            value={datastate.meta}\n            options={{width:0.95}}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateParam}\n          />\n          <RenderTextField\n            id=\"output\"\n            fieldlabel=\"Output type\"\n            value={datastate.output}\n            options={{disabled: datastate.meta.length && datastate.output === 'json' ? true : false}}\n            updateHelpFor={updateHelpFor}\n            updateParam={updateOutput}\n          />\n\n          <FormControlLabel\n            control={\n              <Switch\n                value={mapcontrols}\n                onChange={handleMapControlClick}\n                checked={mapcontrols}\n                color=\"primary\"\n              />\n            }\n            label=\"Map settings\"\n          />\n          {mapcontrols &&\n            <Box sx={{pl:\"1em\"}}>\n              {datastate.output !== 'image' &&\n                <RenderTextField\n                  id=\"info_only\"\n                  fieldlabel=\"Info only\"\n                  value={datastate.info_only}\n                  updateHelpFor={updateHelpFor}\n                  updateParam={updateImage}\n                />\n              }\n              <RenderTextField\n                id=\"proj\"\n                fieldlabel=\"Proj\"\n                value={datastate.proj}\n                updateHelpFor={updateHelpFor}\n                updateParam={updateImage}\n              />\n              <RenderTextField\n                id=\"overlays\"\n                fieldlabel=\"Overlays\"\n                value={datastate.overlays}\n                updateHelpFor={updateHelpFor}\n                updateParam={updateImage}\n              />\n              <RenderTextField\n                id=\"interp\"\n                fieldlabel=\"Interp\"\n                value={datastate.interp}\n                updateHelpFor={updateHelpFor}\n                updateParam={updateImage}\n              />\n              <RenderTextField\n                id=\"cmap\"\n                fieldlabel=\"Cmap\"\n                value={datastate.cmap}\n                updateHelpFor={updateHelpFor}\n                updateParam={updateImage}\n              />\n              {datastate.height.length === 0 &&\n                <RenderTextField\n                  id=\"width\"\n                  fieldlabel=\"Width\"\n                  value={datastate.width}\n                  options={{required: mapcontrols}}\n                  updateHelpFor={updateHelpFor}\n                  updateParam={updateImage}\n                />\n              }\n              {datastate.width.length === 0 &&\n                <RenderTextField\n                  id=\"height\"\n                  fieldlabel=\"Height\"\n                  value={datastate.height}\n                  options={{required: mapcontrols}}\n                  updateHelpFor={updateHelpFor}\n                  updateParam={updateImage}\n                />\n              }\n              <RenderTextField\n                id=\"levels\"\n                fieldlabel=\"Levels\"\n                value={datastate.levels}\n                updateHelpFor={updateHelpFor}\n                updateParam={updateImage}\n              />\n            </Box>\n          }\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default GridData2Input"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}