{"ast":null,"code":"var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}","map":{"version":3,"names":["DateProto","Date","prototype","INVALID_DATE","TO_STRING","$toString","getTime","NaN","require","toString","value","call"],"sources":["/Users/kle1/progs/React/QueryBuilder3/node_modules/core-js/modules/es6.date.to-string.js"],"sourcesContent":["var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,IAAI,CAACC,SAAS;AAC9B,IAAIC,YAAY,GAAG,cAAc;AACjC,IAAIC,SAAS,GAAG,UAAU;AAC1B,IAAIC,SAAS,GAAGL,SAAS,CAACI,SAAS,CAAC;AACpC,IAAIE,OAAO,GAAGN,SAAS,CAACM,OAAO;AAC/B,IAAI,IAAIL,IAAI,CAACM,GAAG,CAAC,GAAG,EAAE,IAAIJ,YAAY,EAAE;EACtCK,OAAO,CAAC,aAAa,CAAC,CAACR,SAAS,EAAEI,SAAS,EAAE,SAASK,QAAQ,GAAG;IAC/D,IAAIC,KAAK,GAAGJ,OAAO,CAACK,IAAI,CAAC,IAAI,CAAC;IAC9B;IACA,OAAOD,KAAK,KAAKA,KAAK,GAAGL,SAAS,CAACM,IAAI,CAAC,IAAI,CAAC,GAAGR,YAAY;EAC9D,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}