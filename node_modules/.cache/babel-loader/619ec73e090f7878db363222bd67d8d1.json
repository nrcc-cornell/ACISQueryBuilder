{"ast":null,"code":"import _toConsumableArray from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/kle1/progs/React/QueryBuilder3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport function buildElement(elementKeys, elementValues) {\n  var elem = {};\n  var subelems = [];\n  var mustBeNumber = ['duration', 'vX', 'vN', 'prec', 'base'];\n  elementKeys.forEach(function (item) {\n    if (elementValues[item] !== '') {\n      if (mustBeNumber.includes(item) && !isNaN(Number(elementValues[item]))) {\n        elem[item] = Number(elementValues[item]);\n      } else {\n        elem[item] = elementValues[item];\n      }\n    }\n  }); // if interval is a list, make it an array (not a string)\n\n  if (elem.hasOwnProperty('interval') && (elem.interval.includes(\",\") || elem.interval.includes(\"[\"))) {\n    elem.interval = elem.interval.replace(/[[\\]]/g, \"\").split(\",\").map(function (item) {\n      return Number(item);\n    });\n  } // figure out whether or not selection is for single day\n\n\n  var notdly = typeof elem.duration === \"string\" && elem.duration !== 'dly' || typeof elem.duration === 'number' && (elem.duration !== 1 || elem.interval !== 'dly' && !(Array.isArray(elem.interval) && elem.interval.length === 3)); // can only have add for dly/dly; can only have reduce and max_missing if not dly/dly\n\n  if (notdly) {\n    delete elem.add;\n  } else {\n    delete elem.reduce;\n    delete elem.maxmissing;\n  } // can only have groupby if interval is not yly\n\n\n  if (elem.hasOwnProperty('interval') && (elem.interval === 'yly' || Array.isArray(elem.interval) && elem.interval.length === 1)) {\n    delete elem.groupby;\n  } // can only have base for degree days\n\n\n  if (elem.hasOwnProperty('name') && !elem.name.includes(\"dd\")) {\n    delete elem.base;\n  } // can only have season_start for std\n\n\n  if (elem.hasOwnProperty('duration') && elem.duration !== 'std') {\n    delete elem.season_start;\n  } // if season_start is a list, make it an array (not a string)\n\n\n  if (elem.hasOwnProperty('season_start') && (elem.season_start.includes(\",\") || elem.season_start.includes(\"[\"))) {\n    elem.season_start = elem.season_start.replace(/[[\\]]/g, \"\").split(\",\").map(function (item) {\n      return Number(item);\n    });\n  } // convert name of element sdate and edate\n\n\n  if (elem.hasOwnProperty('elem_sdate')) {\n    elem.sdate = elem.elem_sdate;\n    delete elem.elem_sdate;\n  }\n\n  if (elem.hasOwnProperty('elem_edate')) {\n    elem.edate = elem.elem_edate;\n    delete elem.elem_edate;\n  } // build reduce object, if necessary\n\n\n  subelems = elementKeys.filter(function (item) {\n    return item.includes('reduce_');\n  });\n\n  if (elem.hasOwnProperty('reduce')) {\n    // can only have reduce_run_maxmissing if reduce is 'run'\n    if (!elem.reduce.includes('run')) {\n      delete elem.reduce_run_maxmissing;\n    }\n\n    var newObject = {};\n    subelems.forEach(function (item) {\n      if (elem.hasOwnProperty(item)) {\n        newObject[item.replace('reduce_', '')] = elem[item];\n        delete elem[item];\n      }\n    });\n\n    if (Object.keys(newObject).length > 0) {\n      elem.reduce = _objectSpread({}, newObject, {\n        reduce: elem.reduce\n      });\n    }\n  } else {\n    subelems.forEach(function (item) {\n      if (elem.hasOwnProperty(item)) {\n        delete elem[item];\n      }\n    });\n  } // build smry object, if necessary\n\n\n  subelems = elementKeys.filter(function (item) {\n    return item.includes('smry_') && item !== 'smry_only';\n  });\n\n  if (elem.hasOwnProperty('smry')) {\n    // can only have smry_run_maxmissing if smry is 'run'\n    if (!elem.smry.includes('run')) {\n      delete elem.smry_run_maxmissing;\n    }\n\n    var _newObject = {};\n    subelems.forEach(function (item) {\n      if (elem.hasOwnProperty(item)) {\n        _newObject[item.replace('smry_', '')] = elem[item];\n        delete elem[item];\n      }\n    });\n\n    if (Object.keys(_newObject).length > 0) {\n      elem.smry = _objectSpread({}, _newObject, {\n        reduce: elem.smry\n      });\n    }\n  } else {\n    subelems.forEach(function (item) {\n      if (elem.hasOwnProperty(item)) {\n        delete elem[item];\n      }\n    });\n    delete elem.smry_only;\n  }\n\n  return elementValues.elems.includes(\"{\") ? [].concat(_toConsumableArray(JSON.parse(elementValues.elems)), [elem]) : [elem];\n}\nexport function buildImage(imageKeys, imageValues) {\n  var image = {};\n  imageKeys.forEach(function (item) {\n    if (imageValues[item] !== '') {\n      // width and height must be an integer (not a string)\n      image[item] = item === 'width' || item === 'height' ? Number(imageValues[item]) : imageValues[item];\n    }\n  }); // levels must be an array (not a string)\n\n  if (image.hasOwnProperty('levels')) {\n    image.levels = image.levels.replace(/[[\\]]/g, '').split(\",\").map(function (item) {\n      return Number(item);\n    });\n  } // overlays must be an array if more than one are specified\n\n\n  if (image.hasOwnProperty('overlays') && image.overlays.includes(\",\")) {\n    image.overlays = image.overlays.replace(/[[\\]]/g, '').split(\",\").map(function (item) {\n      return item.replace(/[\"']/g, '');\n    });\n  }\n\n  return image;\n}\nexport function buildExplanation(params) {\n  var explanation = \"\";\n  var elems = null;\n  var monthName = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  var formatDate = function formatDate(date, rlen) {\n    var ymd = [];\n\n    if (date.includes(\"-\")) {\n      ymd = date.split(\"-\").map(function (item) {\n        return Number(item);\n      });\n    } else if (rlen === \"day\" && date.length === 8 || rlen === \"month\" && date.length === 6 || rlen === \"year\" && date.length === 4) {\n      ymd = [Number(date.substr(0, 4)), Number(date.substr(4, 2)), Number(date.substr(6, 2))];\n    } else if (date === 'por') {\n      return 'period of record';\n    } else {\n      return null;\n    }\n\n    if (rlen === \"year\") {\n      return ymd[0];\n    } else if (rlen === \"month\") {\n      return monthName[ymd[1] - 1] + \" \" + ymd[0];\n    } else if (rlen === \"day\") {\n      return monthName[ymd[1] - 1] + \" \" + ymd[2] + \", \" + ymd[0];\n    }\n\n    return null;\n  };\n\n  var badintervalMessage = \"Not a valid interval. Clear this element and add again with a valid interval.\";\n  var baddurationlMessage = \"Not a valid duration. Clear this element and add again with a valid duration.\";\n  var noreduceMessage = \"You need to specify a reduction for this request. Clear this element and add again with a reduction.\";\n  var noseasonstartMessage = \"You need to specify a 'season start' for a duration of 'std'. Clear this element and add again with a season start.\";\n  var baddateMessage = \"Invalid date specifications.\";\n  var durationText = {\n    mtd: \"month-to-date\",\n    std: \"season-to-date\",\n    ytd: \"year-to-date\"\n  };\n  var ymd = ['year', 'month', 'day'];\n\n  if (!params.hasOwnProperty('elems')) {\n    return null;\n  } //process last element\n\n\n  try {\n    elems = typeof params.elems === \"string\" ? JSON.parse(params.elems).slice(-1)[0] : params.elems.slice(-1)[0];\n  } catch (_unused) {\n    return null;\n  } // interpret the interval portion of the request\n\n\n  if (!elems.hasOwnProperty('interval')) {\n    return null;\n  }\n\n  var interval = elems.interval;\n\n  if (typeof interval === 'string') {\n    if (interval === 'dly') {\n      interval = [0, 0, 1];\n    } else if (interval === 'mly') {\n      interval = [0, 1];\n    } else if (interval === 'yly') {\n      interval = [1];\n    } else {\n      return badintervalMessage;\n    }\n  }\n\n  var intcnt = Math.max.apply(Math, _toConsumableArray(interval));\n  var intpos = interval.indexOf(intcnt);\n\n  if (interval.length < 1 || interval.length > 3 || intpos < 0) {\n    return badintervalMessage;\n  }\n\n  var intfreq = ymd[interval.length - 1];\n  var inttype = ymd[intpos]; // preocess duration/reduce portion\n\n  var duration = elems.hasOwnProperty('duration') ? elems.duration : 1;\n  var reduce = elems.hasOwnProperty('reduce') ? typeof elems.reduce === 'object' ? elems.reduce.reduce : elems.reduce : null;\n\n  if (duration === 'dly' || duration === 'mly' || duration === 'yly') {\n    duration = 1;\n  } else if (!isNaN(Number(duration))) {\n    duration = Number(duration);\n  }\n\n  if ((duration !== 1 || intfreq !== 'day') && !reduce) {\n    return noreduceMessage;\n  } else if (typeof duration === 'string' && !durationText.hasOwnProperty(duration)) {\n    return baddurationlMessage;\n  } else if (duration === 'std' && !elems.hasOwnProperty(\"season_start\")) {\n    return noseasonstartMessage;\n  } else if (duration !== 1 || intfreq !== 'day') {\n    var durphrase = typeof duration === 'string' ? durationText[duration] : duration + \"-\" + intfreq;\n    explanation += \"Each data value returned for this query element will be a \" + durphrase + \" \" + reduce; // include season_start when appropriate\n\n    if (duration === 'std') {\n      if (typeof elems.season_start === \"string\") {\n        elems.season_start = elems.season_start.split(\"-\").map(function (item) {\n          return Number(item);\n        });\n      }\n\n      if (elems.season_start.length === 1) {\n        elems.season_start.push(1);\n      }\n\n      var season_start = monthName[elems.season_start[0] - 1] + \" \" + elems.season_start[1];\n      explanation += \" since \" + season_start;\n    }\n\n    explanation += \". \";\n  }\n\n  var intphrase = intcnt === 1 ? inttype : intcnt + \" \" + inttype + \"s\";\n  explanation += \"Results will consist of one value every \" + intphrase; // date portion\n\n  if (params.hasOwnProperty('sdate') && params.hasOwnProperty('edate') || params.hasOwnProperty('date') || elems.hasOwnProperty('sdate') && elems.hasOwnProperty('edate')) {\n    var sdate = elems.sdate || params.sdate || params.date;\n    var edate = elems.edate || params.edate || null;\n    var sdatestr = formatDate(sdate, intfreq);\n    var edatestr = edate ? formatDate(edate, intfreq) : 'na';\n\n    if (!sdatestr || !edatestr) {\n      return baddateMessage;\n    }\n\n    if (intfreq === 'day' && intpos < 2) {\n      var sdparts = sdatestr.split(\", \");\n      var edparts = edatestr.split(\", \");\n      edatestr = sdparts[0] + \", \" + edparts[1];\n    } else if (intfreq === 'month' && intpos < 1) {\n      var _sdparts = sdatestr.split(\" \");\n\n      var _edparts = edatestr.split(\" \");\n\n      edatestr = _sdparts[0] + \" \" + _edparts[1];\n    }\n\n    var datephrase = elems.hasOwnProperty('reduce') ? \"the periods ending \" : \"\";\n    explanation += \" for \" + datephrase + sdatestr + (edatestr !== 'na' ? \" through \" + edatestr : \"\");\n  }\n\n  explanation += \". \";\n  return explanation;\n}","map":{"version":3,"sources":["/Users/kle1/progs/React/QueryBuilder3/src/Builders.jsx"],"names":["buildElement","elementKeys","elementValues","elem","subelems","mustBeNumber","forEach","item","includes","isNaN","Number","hasOwnProperty","interval","replace","split","map","notdly","duration","Array","isArray","length","add","reduce","maxmissing","groupby","name","base","season_start","sdate","elem_sdate","edate","elem_edate","filter","reduce_run_maxmissing","newObject","Object","keys","smry","smry_run_maxmissing","smry_only","elems","JSON","parse","buildImage","imageKeys","imageValues","image","levels","overlays","buildExplanation","params","explanation","monthName","formatDate","date","rlen","ymd","substr","badintervalMessage","baddurationlMessage","noreduceMessage","noseasonstartMessage","baddateMessage","durationText","mtd","std","ytd","slice","intcnt","Math","max","intpos","indexOf","intfreq","inttype","durphrase","push","intphrase","sdatestr","edatestr","sdparts","edparts","datephrase"],"mappings":";;AAAA,OAAO,SAASA,YAAT,CAAsBC,WAAtB,EAAmCC,aAAnC,EAAkD;AACvD,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAMC,YAAY,GAAG,CAAC,UAAD,EAAY,IAAZ,EAAiB,IAAjB,EAAsB,MAAtB,EAA6B,MAA7B,CAArB;AACAJ,EAAAA,WAAW,CAACK,OAAZ,CAAoB,UAACC,IAAD,EAAU;AAC5B,QAAIL,aAAa,CAACK,IAAD,CAAb,KAAwB,EAA5B,EAAgC;AAC9B,UAAIF,YAAY,CAACG,QAAb,CAAsBD,IAAtB,KAA+B,CAACE,KAAK,CAACC,MAAM,CAACR,aAAa,CAACK,IAAD,CAAd,CAAP,CAAzC,EAAwE;AACtEJ,QAAAA,IAAI,CAACI,IAAD,CAAJ,GAAaG,MAAM,CAACR,aAAa,CAACK,IAAD,CAAd,CAAnB;AACD,OAFD,MAEO;AACLJ,QAAAA,IAAI,CAACI,IAAD,CAAJ,GAAaL,aAAa,CAACK,IAAD,CAA1B;AACD;AACF;AACF,GARD,EAJuD,CAavD;;AACA,MAAIJ,IAAI,CAACQ,cAAL,CAAoB,UAApB,MAAoCR,IAAI,CAACS,QAAL,CAAcJ,QAAd,CAAuB,GAAvB,KAA+BL,IAAI,CAACS,QAAL,CAAcJ,QAAd,CAAuB,GAAvB,CAAnE,CAAJ,EAAqG;AACnGL,IAAAA,IAAI,CAACS,QAAL,GAAgBT,IAAI,CAACS,QAAL,CAAcC,OAAd,CAAsB,QAAtB,EAA+B,EAA/B,EAAmCC,KAAnC,CAAyC,GAAzC,EAA8CC,GAA9C,CAAkD,UAACR,IAAD,EAAU;AAAC,aAAOG,MAAM,CAACH,IAAD,CAAb;AAAoB,KAAjF,CAAhB;AACD,GAhBsD,CAiBvD;;;AACA,MAAMS,MAAM,GAAI,OAAOb,IAAI,CAACc,QAAZ,KAAyB,QAAzB,IAAqCd,IAAI,CAACc,QAAL,KAAkB,KAAxD,IACZ,OAAOd,IAAI,CAACc,QAAZ,KAAyB,QAAzB,KAAsCd,IAAI,CAACc,QAAL,KAAkB,CAAlB,IAAwBd,IAAI,CAACS,QAAL,KAAkB,KAAlB,IAA2B,EAAEM,KAAK,CAACC,OAAN,CAAchB,IAAI,CAACS,QAAnB,KAAgCT,IAAI,CAACS,QAAL,CAAcQ,MAAd,KAAyB,CAA3D,CAAzF,CADH,CAlBuD,CAoBvD;;AACA,MAAIJ,MAAJ,EAAY;AACV,WAAOb,IAAI,CAACkB,GAAZ;AACD,GAFD,MAEO;AACL,WAAOlB,IAAI,CAACmB,MAAZ;AACA,WAAOnB,IAAI,CAACoB,UAAZ;AACD,GA1BsD,CA2BvD;;;AACA,MAAIpB,IAAI,CAACQ,cAAL,CAAoB,UAApB,MAAoCR,IAAI,CAACS,QAAL,KAAkB,KAAlB,IAA4BM,KAAK,CAACC,OAAN,CAAchB,IAAI,CAACS,QAAnB,KAAgCT,IAAI,CAACS,QAAL,CAAcQ,MAAd,KAAyB,CAAzH,CAAJ,EAAkI;AAChI,WAAOjB,IAAI,CAACqB,OAAZ;AACD,GA9BsD,CA+BvD;;;AACA,MAAIrB,IAAI,CAACQ,cAAL,CAAoB,MAApB,KAA+B,CAACR,IAAI,CAACsB,IAAL,CAAUjB,QAAV,CAAmB,IAAnB,CAApC,EAA8D;AAC5D,WAAOL,IAAI,CAACuB,IAAZ;AACD,GAlCsD,CAmCvD;;;AACA,MAAIvB,IAAI,CAACQ,cAAL,CAAoB,UAApB,KAAmCR,IAAI,CAACc,QAAL,KAAkB,KAAzD,EAAgE;AAC9D,WAAOd,IAAI,CAACwB,YAAZ;AACD,GAtCsD,CAuCvD;;;AACA,MAAIxB,IAAI,CAACQ,cAAL,CAAoB,cAApB,MAAwCR,IAAI,CAACwB,YAAL,CAAkBnB,QAAlB,CAA2B,GAA3B,KAAmCL,IAAI,CAACwB,YAAL,CAAkBnB,QAAlB,CAA2B,GAA3B,CAA3E,CAAJ,EAAiH;AAC/GL,IAAAA,IAAI,CAACwB,YAAL,GAAoBxB,IAAI,CAACwB,YAAL,CAAkBd,OAAlB,CAA0B,QAA1B,EAAmC,EAAnC,EAAuCC,KAAvC,CAA6C,GAA7C,EAAkDC,GAAlD,CAAsD,UAACR,IAAD,EAAU;AAAC,aAAOG,MAAM,CAACH,IAAD,CAAb;AAAoB,KAArF,CAApB;AACD,GA1CsD,CA2CvD;;;AACA,MAAIJ,IAAI,CAACQ,cAAL,CAAoB,YAApB,CAAJ,EAAuC;AACrCR,IAAAA,IAAI,CAACyB,KAAL,GAAazB,IAAI,CAAC0B,UAAlB;AACA,WAAO1B,IAAI,CAAC0B,UAAZ;AACD;;AACD,MAAI1B,IAAI,CAACQ,cAAL,CAAoB,YAApB,CAAJ,EAAuC;AACrCR,IAAAA,IAAI,CAAC2B,KAAL,GAAa3B,IAAI,CAAC4B,UAAlB;AACA,WAAO5B,IAAI,CAAC4B,UAAZ;AACD,GAnDsD,CAoDvD;;;AACA3B,EAAAA,QAAQ,GAAGH,WAAW,CAAC+B,MAAZ,CAAmB,UAAAzB,IAAI;AAAA,WAAIA,IAAI,CAACC,QAAL,CAAc,SAAd,CAAJ;AAAA,GAAvB,CAAX;;AACA,MAAIL,IAAI,CAACQ,cAAL,CAAoB,QAApB,CAAJ,EAAmC;AACjC;AACA,QAAI,CAACR,IAAI,CAACmB,MAAL,CAAYd,QAAZ,CAAqB,KAArB,CAAL,EAAkC;AAChC,aAAOL,IAAI,CAAC8B,qBAAZ;AACD;;AACD,QAAIC,SAAS,GAAG,EAAhB;AACA9B,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,IAAD,EAAU;AACzB,UAAIJ,IAAI,CAACQ,cAAL,CAAoBJ,IAApB,CAAJ,EAA+B;AAC7B2B,QAAAA,SAAS,CAAC3B,IAAI,CAACM,OAAL,CAAa,SAAb,EAAuB,EAAvB,CAAD,CAAT,GAAwCV,IAAI,CAACI,IAAD,CAA5C;AACA,eAAOJ,IAAI,CAACI,IAAD,CAAX;AACD;AACF,KALD;;AAMA,QAAI4B,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBd,MAAvB,GAAgC,CAApC,EAAuC;AACrCjB,MAAAA,IAAI,CAACmB,MAAL,qBAAkBY,SAAlB;AAA6BZ,QAAAA,MAAM,EAACnB,IAAI,CAACmB;AAAzC;AACD;AACF,GAfD,MAeO;AACLlB,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,IAAD,EAAU;AACzB,UAAIJ,IAAI,CAACQ,cAAL,CAAoBJ,IAApB,CAAJ,EAA+B;AAC3B,eAAOJ,IAAI,CAACI,IAAD,CAAX;AACH;AACF,KAJD;AAKD,GA3EsD,CA4EvD;;;AACAH,EAAAA,QAAQ,GAAGH,WAAW,CAAC+B,MAAZ,CAAmB,UAAAzB,IAAI;AAAA,WAAIA,IAAI,CAACC,QAAL,CAAc,OAAd,KAA0BD,IAAI,KAAK,WAAvC;AAAA,GAAvB,CAAX;;AACA,MAAIJ,IAAI,CAACQ,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC/B;AACA,QAAI,CAACR,IAAI,CAACkC,IAAL,CAAU7B,QAAV,CAAmB,KAAnB,CAAL,EAAgC;AAC9B,aAAOL,IAAI,CAACmC,mBAAZ;AACD;;AACD,QAAIJ,UAAS,GAAG,EAAhB;AACA9B,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,IAAD,EAAU;AACzB,UAAIJ,IAAI,CAACQ,cAAL,CAAoBJ,IAApB,CAAJ,EAA+B;AAC7B2B,QAAAA,UAAS,CAAC3B,IAAI,CAACM,OAAL,CAAa,OAAb,EAAqB,EAArB,CAAD,CAAT,GAAsCV,IAAI,CAACI,IAAD,CAA1C;AACA,eAAOJ,IAAI,CAACI,IAAD,CAAX;AACD;AACF,KALD;;AAMA,QAAI4B,MAAM,CAACC,IAAP,CAAYF,UAAZ,EAAuBd,MAAvB,GAAgC,CAApC,EAAuC;AACrCjB,MAAAA,IAAI,CAACkC,IAAL,qBAAgBH,UAAhB;AAA2BZ,QAAAA,MAAM,EAACnB,IAAI,CAACkC;AAAvC;AACD;AACF,GAfD,MAeO;AACLjC,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,IAAD,EAAU;AACzB,UAAIJ,IAAI,CAACQ,cAAL,CAAoBJ,IAApB,CAAJ,EAA+B;AAC7B,eAAOJ,IAAI,CAACI,IAAD,CAAX;AACD;AACF,KAJD;AAKA,WAAOJ,IAAI,CAACoC,SAAZ;AACD;;AACD,SAAOrC,aAAa,CAACsC,KAAd,CAAoBhC,QAApB,CAA6B,GAA7B,iCAAyCiC,IAAI,CAACC,KAAL,CAAWxC,aAAa,CAACsC,KAAzB,CAAzC,IAA0ErC,IAA1E,KAAkF,CAACA,IAAD,CAAzF;AACD;AAED,OAAO,SAASwC,UAAT,CAAoBC,SAApB,EAA+BC,WAA/B,EAA4C;AACjD,MAAIC,KAAK,GAAG,EAAZ;AACAF,EAAAA,SAAS,CAACtC,OAAV,CAAkB,UAACC,IAAD,EAAU;AAC1B,QAAIsC,WAAW,CAACtC,IAAD,CAAX,KAAsB,EAA1B,EAA8B;AAC5B;AACAuC,MAAAA,KAAK,CAACvC,IAAD,CAAL,GAAeA,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,QAA9B,GAA0CG,MAAM,CAACmC,WAAW,CAACtC,IAAD,CAAZ,CAAhD,GAAsEsC,WAAW,CAACtC,IAAD,CAA/F;AACD;AACF,GALD,EAFiD,CAQjD;;AACA,MAAIuC,KAAK,CAACnC,cAAN,CAAqB,QAArB,CAAJ,EAAoC;AAClCmC,IAAAA,KAAK,CAACC,MAAN,GAAeD,KAAK,CAACC,MAAN,CAAalC,OAAb,CAAqB,QAArB,EAA8B,EAA9B,EAAkCC,KAAlC,CAAwC,GAAxC,EAA6CC,GAA7C,CAAiD,UAACR,IAAD,EAAU;AAAC,aAAOG,MAAM,CAACH,IAAD,CAAb;AAAoB,KAAhF,CAAf;AACD,GAXgD,CAYjD;;;AACA,MAAIuC,KAAK,CAACnC,cAAN,CAAqB,UAArB,KAAoCmC,KAAK,CAACE,QAAN,CAAexC,QAAf,CAAwB,GAAxB,CAAxC,EAAsE;AACpEsC,IAAAA,KAAK,CAACE,QAAN,GAAiBF,KAAK,CAACE,QAAN,CAAenC,OAAf,CAAuB,QAAvB,EAAgC,EAAhC,EAAoCC,KAApC,CAA0C,GAA1C,EAA+CC,GAA/C,CAAmD,UAACR,IAAD,EAAU;AAAC,aAAOA,IAAI,CAACM,OAAL,CAAa,OAAb,EAAqB,EAArB,CAAP;AAAgC,KAA9F,CAAjB;AACD;;AACD,SAAOiC,KAAP;AACD;AAED,OAAO,SAASG,gBAAT,CAA0BC,MAA1B,EAAkC;AACvC,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIX,KAAK,GAAG,IAAZ;AACA,MAAMY,SAAS,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAlB;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,IAAP,EAAgB;AACjC,QAAIC,GAAG,GAAG,EAAV;;AACA,QAAIF,IAAI,CAAC9C,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACtBgD,MAAAA,GAAG,GAAGF,IAAI,CAACxC,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAAAR,IAAI,EAAI;AAAC,eAAOG,MAAM,CAACH,IAAD,CAAb;AAAoB,OAAjD,CAAN;AACD,KAFD,MAEO,IAAKgD,IAAI,KAAK,KAAT,IAAkBD,IAAI,CAAClC,MAAL,KAAgB,CAAnC,IAA0CmC,IAAI,KAAK,OAAT,IAAoBD,IAAI,CAAClC,MAAL,KAAgB,CAA9E,IAAqFmC,IAAI,KAAK,MAAT,IAAmBD,IAAI,CAAClC,MAAL,KAAgB,CAA5H,EAAgI;AACrIoC,MAAAA,GAAG,GAAG,CAAC9C,MAAM,CAAC4C,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAD,CAAP,EAA2B/C,MAAM,CAAC4C,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAD,CAAjC,EAAqD/C,MAAM,CAAC4C,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAD,CAA3D,CAAN;AACD,KAFM,MAEA,IAAIH,IAAI,KAAK,KAAb,EAAoB;AACzB,aAAO,kBAAP;AACD,KAFM,MAEA;AACL,aAAO,IAAP;AACD;;AACD,QAAIC,IAAI,KAAK,MAAb,EAAqB;AACnB,aAAOC,GAAG,CAAC,CAAD,CAAV;AACD,KAFD,MAEO,IAAID,IAAI,KAAK,OAAb,EAAsB;AAC3B,aAAOH,SAAS,CAACI,GAAG,CAAC,CAAD,CAAH,GAAO,CAAR,CAAT,GAAsB,GAAtB,GAA4BA,GAAG,CAAC,CAAD,CAAtC;AACD,KAFM,MAEA,IAAID,IAAI,KAAK,KAAb,EAAoB;AACzB,aAAOH,SAAS,CAACI,GAAG,CAAC,CAAD,CAAH,GAAO,CAAR,CAAT,GAAsB,GAAtB,GAA4BA,GAAG,CAAC,CAAD,CAA/B,GAAqC,IAArC,GAA4CA,GAAG,CAAC,CAAD,CAAtD;AACD;;AACD,WAAO,IAAP;AACD,GAnBD;;AAoBA,MAAME,kBAAkB,GAAG,+EAA3B;AACA,MAAMC,mBAAmB,GAAG,+EAA5B;AACA,MAAMC,eAAe,GAAG,sGAAxB;AACA,MAAMC,oBAAoB,GAAG,qHAA7B;AACA,MAAMC,cAAc,GAAG,8BAAvB;AACC,MAAMC,YAAY,GAAG;AAACC,IAAAA,GAAG,EAAC,eAAL;AAAsBC,IAAAA,GAAG,EAAC,gBAA1B;AAA4CC,IAAAA,GAAG,EAAC;AAAhD,GAArB;AACD,MAAMV,GAAG,GAAG,CAAC,MAAD,EAAQ,OAAR,EAAgB,KAAhB,CAAZ;;AACA,MAAI,CAACN,MAAM,CAACvC,cAAP,CAAsB,OAAtB,CAAL,EAAqC;AACnC,WAAO,IAAP;AACD,GAjCsC,CAkCvC;;;AACA,MAAI;AACF6B,IAAAA,KAAK,GAAG,OAAOU,MAAM,CAACV,KAAd,KAAwB,QAAxB,GAAmCC,IAAI,CAACC,KAAL,CAAWQ,MAAM,CAACV,KAAlB,EAAyB2B,KAAzB,CAA+B,CAAC,CAAhC,EAAmC,CAAnC,CAAnC,GAA0EjB,MAAM,CAACV,KAAP,CAAa2B,KAAb,CAAmB,CAAC,CAApB,EAAuB,CAAvB,CAAlF;AACD,GAFD,CAEE,gBAAM;AACN,WAAO,IAAP;AACD,GAvCsC,CAwCvC;;;AACA,MAAI,CAAC3B,KAAK,CAAC7B,cAAN,CAAqB,UAArB,CAAL,EAAuC;AACrC,WAAO,IAAP;AACD;;AACD,MAAIC,QAAQ,GAAG4B,KAAK,CAAC5B,QAArB;;AACA,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,QAAIA,QAAQ,KAAK,KAAjB,EAAwB;AACtBA,MAAAA,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAX;AACD,KAFD,MAEO,IAAIA,QAAQ,KAAK,KAAjB,EAAwB;AAC7BA,MAAAA,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,CAAX;AACD,KAFM,MAEA,IAAIA,QAAQ,KAAK,KAAjB,EAAwB;AAC7BA,MAAAA,QAAQ,GAAG,CAAC,CAAD,CAAX;AACD,KAFM,MAEA;AACL,aAAO8C,kBAAP;AACD;AACF;;AACD,MAAMU,MAAM,GAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQzD,QAAR,EAAnB;AACA,MAAM2D,MAAM,GAAG3D,QAAQ,CAAC4D,OAAT,CAAiBJ,MAAjB,CAAf;;AACA,MAAIxD,QAAQ,CAACQ,MAAT,GAAkB,CAAlB,IAAuBR,QAAQ,CAACQ,MAAT,GAAkB,CAAzC,IAA8CmD,MAAM,GAAG,CAA3D,EAA8D;AAC5D,WAAOb,kBAAP;AACD;;AACD,MAAMe,OAAO,GAAGjB,GAAG,CAAC5C,QAAQ,CAACQ,MAAT,GAAgB,CAAjB,CAAnB;AACA,MAAMsD,OAAO,GAAGlB,GAAG,CAACe,MAAD,CAAnB,CA9DuC,CAgEvC;;AACA,MAAItD,QAAQ,GAAGuB,KAAK,CAAC7B,cAAN,CAAqB,UAArB,IAAmC6B,KAAK,CAACvB,QAAzC,GAAoD,CAAnE;AACA,MAAMK,MAAM,GAAGkB,KAAK,CAAC7B,cAAN,CAAqB,QAArB,IAAkC,OAAO6B,KAAK,CAAClB,MAAb,KAAwB,QAAxB,GAAmCkB,KAAK,CAAClB,MAAN,CAAaA,MAAhD,GAAyDkB,KAAK,CAAClB,MAAjG,GAA2G,IAA1H;;AACA,MAAIL,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,KAAnC,IAA4CA,QAAQ,KAAK,KAA7D,EAAoE;AAClEA,IAAAA,QAAQ,GAAG,CAAX;AACD,GAFD,MAEO,IAAI,CAACR,KAAK,CAACC,MAAM,CAACO,QAAD,CAAP,CAAV,EAA8B;AACnCA,IAAAA,QAAQ,GAAGP,MAAM,CAACO,QAAD,CAAjB;AACD;;AACD,MAAI,CAACA,QAAQ,KAAK,CAAb,IAAkBwD,OAAO,KAAK,KAA/B,KAAyC,CAACnD,MAA9C,EAAsD;AACpD,WAAOsC,eAAP;AACD,GAFD,MAEO,IAAI,OAAO3C,QAAP,KAAoB,QAApB,IAAgC,CAAC8C,YAAY,CAACpD,cAAb,CAA4BM,QAA5B,CAArC,EAA4E;AACjF,WAAO0C,mBAAP;AACD,GAFM,MAEA,IAAI1C,QAAQ,KAAK,KAAb,IAAsB,CAACuB,KAAK,CAAC7B,cAAN,CAAqB,cAArB,CAA3B,EAAiE;AACtE,WAAOkD,oBAAP;AACD,GAFM,MAEA,IAAI5C,QAAQ,KAAK,CAAb,IAAkBwD,OAAO,KAAK,KAAlC,EAAyC;AAC9C,QAAME,SAAS,GAAG,OAAO1D,QAAP,KAAoB,QAApB,GAA+B8C,YAAY,CAAC9C,QAAD,CAA3C,GAAyDA,QAAQ,GAAG,GAAX,GAAiBwD,OAA5F;AACAtB,IAAAA,WAAW,IAAI,+DAA+DwB,SAA/D,GAA2E,GAA3E,GAAiFrD,MAAhG,CAF8C,CAG9C;;AACA,QAAIL,QAAQ,KAAK,KAAjB,EAAwB;AACtB,UAAI,OAAOuB,KAAK,CAACb,YAAb,KAA8B,QAAlC,EAA4C;AAC1Ca,QAAAA,KAAK,CAACb,YAAN,GAAqBa,KAAK,CAACb,YAAN,CAAmBb,KAAnB,CAAyB,GAAzB,EAA8BC,GAA9B,CAAkC,UAAAR,IAAI,EAAI;AAAE,iBAAOG,MAAM,CAACH,IAAD,CAAb;AAAqB,SAAjE,CAArB;AACD;;AACD,UAAIiC,KAAK,CAACb,YAAN,CAAmBP,MAAnB,KAA8B,CAAlC,EAAqC;AACnCoB,QAAAA,KAAK,CAACb,YAAN,CAAmBiD,IAAnB,CAAwB,CAAxB;AACD;;AACD,UAAMjD,YAAY,GAAGyB,SAAS,CAACZ,KAAK,CAACb,YAAN,CAAmB,CAAnB,IAAsB,CAAvB,CAAT,GAAqC,GAArC,GAA2Ca,KAAK,CAACb,YAAN,CAAmB,CAAnB,CAAhE;AACAwB,MAAAA,WAAW,IAAI,YAAYxB,YAA3B;AACD;;AACDwB,IAAAA,WAAW,IAAI,IAAf;AACD;;AACD,MAAM0B,SAAS,GAAGT,MAAM,KAAK,CAAX,GAAeM,OAAf,GAA0BN,MAAM,GAAG,GAAT,GAAeM,OAAf,GAAyB,GAArE;AACAvB,EAAAA,WAAW,IAAI,6CAA6C0B,SAA5D,CA/FuC,CAgGvC;;AACA,MAAK3B,MAAM,CAACvC,cAAP,CAAsB,OAAtB,KAAkCuC,MAAM,CAACvC,cAAP,CAAsB,OAAtB,CAAnC,IACAuC,MAAM,CAACvC,cAAP,CAAsB,MAAtB,CADA,IAEC6B,KAAK,CAAC7B,cAAN,CAAqB,OAArB,KAAiC6B,KAAK,CAAC7B,cAAN,CAAqB,OAArB,CAFtC,EAEsE;AACpE,QAAMiB,KAAK,GAAGY,KAAK,CAACZ,KAAN,IAAesB,MAAM,CAACtB,KAAtB,IAA+BsB,MAAM,CAACI,IAApD;AACA,QAAMxB,KAAK,GAAGU,KAAK,CAACV,KAAN,IAAeoB,MAAM,CAACpB,KAAtB,IAA+B,IAA7C;AACA,QAAIgD,QAAQ,GAAGzB,UAAU,CAACzB,KAAD,EAAQ6C,OAAR,CAAzB;AACA,QAAIM,QAAQ,GAAGjD,KAAK,GAAGuB,UAAU,CAACvB,KAAD,EAAQ2C,OAAR,CAAb,GAAgC,IAApD;;AACA,QAAI,CAACK,QAAD,IAAa,CAACC,QAAlB,EAA4B;AAC1B,aAAOjB,cAAP;AACD;;AACD,QAAIW,OAAO,KAAK,KAAZ,IAAqBF,MAAM,GAAG,CAAlC,EAAqC;AACnC,UAAMS,OAAO,GAAGF,QAAQ,CAAChE,KAAT,CAAe,IAAf,CAAhB;AACA,UAAMmE,OAAO,GAAGF,QAAQ,CAACjE,KAAT,CAAe,IAAf,CAAhB;AACAiE,MAAAA,QAAQ,GAAGC,OAAO,CAAC,CAAD,CAAP,GAAa,IAAb,GAAoBC,OAAO,CAAC,CAAD,CAAtC;AACD,KAJD,MAIO,IAAIR,OAAO,KAAK,OAAZ,IAAuBF,MAAM,GAAG,CAApC,EAAuC;AAC5C,UAAMS,QAAO,GAAGF,QAAQ,CAAChE,KAAT,CAAe,GAAf,CAAhB;;AACA,UAAMmE,QAAO,GAAGF,QAAQ,CAACjE,KAAT,CAAe,GAAf,CAAhB;;AACAiE,MAAAA,QAAQ,GAAGC,QAAO,CAAC,CAAD,CAAP,GAAa,GAAb,GAAmBC,QAAO,CAAC,CAAD,CAArC;AACD;;AACD,QAAMC,UAAU,GAAG1C,KAAK,CAAC7B,cAAN,CAAqB,QAArB,IAAiC,qBAAjC,GAAyD,EAA5E;AACAwC,IAAAA,WAAW,IAAI,UAAU+B,UAAV,GAAuBJ,QAAvB,IAAmCC,QAAQ,KAAK,IAAb,GAAoB,cAAcA,QAAlC,GAA6C,EAAhF,CAAf;AACD;;AACD5B,EAAAA,WAAW,IAAI,IAAf;AAEA,SAAOA,WAAP;AACD","sourcesContent":["export function buildElement(elementKeys, elementValues) {\n  let elem = {}\n  let subelems = []\n  const mustBeNumber = ['duration','vX','vN','prec','base']\n  elementKeys.forEach((item) => {\n    if (elementValues[item] !== '') {\n      if (mustBeNumber.includes(item) && !isNaN(Number(elementValues[item]))) {\n        elem[item] = Number(elementValues[item])\n      } else {\n        elem[item] = elementValues[item]\n      }\n    }\n  })\n  // if interval is a list, make it an array (not a string)\n  if (elem.hasOwnProperty('interval') && (elem.interval.includes(\",\") || elem.interval.includes(\"[\"))) {\n    elem.interval = elem.interval.replace(/[[\\]]/g,\"\").split(\",\").map((item) => {return Number(item)})\n  }\n  // figure out whether or not selection is for single day\n  const notdly = (typeof elem.duration === \"string\" && elem.duration !== 'dly') || \n    (typeof elem.duration === 'number' && (elem.duration !== 1 || (elem.interval !== 'dly' && !(Array.isArray(elem.interval) && elem.interval.length === 3))))\n  // can only have add for dly/dly; can only have reduce and max_missing if not dly/dly\n  if (notdly) {\n    delete elem.add\n  } else {\n    delete elem.reduce\n    delete elem.maxmissing\n  }\n  // can only have groupby if interval is not yly\n  if (elem.hasOwnProperty('interval') && (elem.interval === 'yly' || (Array.isArray(elem.interval) && elem.interval.length === 1))) {\n    delete elem.groupby\n  }\n  // can only have base for degree days\n  if (elem.hasOwnProperty('name') && !elem.name.includes(\"dd\")) {\n    delete elem.base\n  }\n  // can only have season_start for std\n  if (elem.hasOwnProperty('duration') && elem.duration !== 'std') {\n    delete elem.season_start\n  }\n  // if season_start is a list, make it an array (not a string)\n  if (elem.hasOwnProperty('season_start') && (elem.season_start.includes(\",\") || elem.season_start.includes(\"[\"))) {\n    elem.season_start = elem.season_start.replace(/[[\\]]/g,\"\").split(\",\").map((item) => {return Number(item)})\n  }\n  // convert name of element sdate and edate\n  if (elem.hasOwnProperty('elem_sdate')) {\n    elem.sdate = elem.elem_sdate\n    delete elem.elem_sdate\n  }\n  if (elem.hasOwnProperty('elem_edate')) {\n    elem.edate = elem.elem_edate\n    delete elem.elem_edate\n  }\n  // build reduce object, if necessary\n  subelems = elementKeys.filter(item => item.includes('reduce_'))\n  if (elem.hasOwnProperty('reduce')) {\n    // can only have reduce_run_maxmissing if reduce is 'run'\n    if (!elem.reduce.includes('run')) {\n      delete elem.reduce_run_maxmissing\n    }\n    let newObject = {}\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n        newObject[item.replace('reduce_','')] = elem[item]\n        delete elem[item]\n      }\n    })\n    if (Object.keys(newObject).length > 0) {\n      elem.reduce = {...newObject, reduce:elem.reduce}\n    }\n  } else {\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n          delete elem[item]\n      }\n    })\n  }\n  // build smry object, if necessary\n  subelems = elementKeys.filter(item => item.includes('smry_') && item !== 'smry_only')\n  if (elem.hasOwnProperty('smry')) {\n    // can only have smry_run_maxmissing if smry is 'run'\n    if (!elem.smry.includes('run')) {\n      delete elem.smry_run_maxmissing\n    }\n    let newObject = {}\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n        newObject[item.replace('smry_','')] = elem[item]\n        delete elem[item]\n      }\n    })\n    if (Object.keys(newObject).length > 0) {\n      elem.smry = {...newObject, reduce:elem.smry}\n    }\n  } else {\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n        delete elem[item]\n      }\n    })\n    delete elem.smry_only\n  }\n  return elementValues.elems.includes(\"{\")  ? [...JSON.parse(elementValues.elems), elem] : [elem]\n}\n\nexport function buildImage(imageKeys, imageValues) {\n  let image = {}\n  imageKeys.forEach((item) => {\n    if (imageValues[item] !== '') {\n      // width and height must be an integer (not a string)\n      image[item] = (item === 'width' || item === 'height') ? Number(imageValues[item]) : imageValues[item]\n    }\n  })\n  // levels must be an array (not a string)\n  if (image.hasOwnProperty('levels')) {\n    image.levels = image.levels.replace(/[[\\]]/g,'').split(\",\").map((item) => {return Number(item)})\n  }\n  // overlays must be an array if more than one are specified\n  if (image.hasOwnProperty('overlays') && image.overlays.includes(\",\")) {\n    image.overlays = image.overlays.replace(/[[\\]]/g,'').split(\",\").map((item) => {return item.replace(/[\"']/g,'')})\n  }\n  return image\n}\n\nexport function buildExplanation(params) {\n  let explanation = \"\"\n  let elems = null\n  const monthName = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  const formatDate = (date, rlen) => {\n    let ymd = []\n    if (date.includes(\"-\")) {\n      ymd = date.split(\"-\").map(item => {return Number(item)})\n    } else if ((rlen === \"day\" && date.length === 8) || (rlen === \"month\" && date.length === 6) || (rlen === \"year\" && date.length === 4)) {\n      ymd = [Number(date.substr(0,4)), Number(date.substr(4,2)), Number(date.substr(6,2))]\n    } else if (date === 'por') {\n      return 'period of record'\n    } else {\n      return null\n    }\n    if (rlen === \"year\") {\n      return ymd[0]\n    } else if (rlen === \"month\") {\n      return monthName[ymd[1]-1] + \" \" + ymd[0]\n    } else if (rlen === \"day\") {\n      return monthName[ymd[1]-1] + \" \" + ymd[2] + \", \" + ymd[0]\n    }\n    return null\n  }\n  const badintervalMessage = \"Not a valid interval. Clear this element and add again with a valid interval.\"\n  const baddurationlMessage = \"Not a valid duration. Clear this element and add again with a valid duration.\"\n  const noreduceMessage = \"You need to specify a reduction for this request. Clear this element and add again with a reduction.\"\n  const noseasonstartMessage = \"You need to specify a 'season start' for a duration of 'std'. Clear this element and add again with a season start.\"\n  const baddateMessage = \"Invalid date specifications.\"\n   const durationText = {mtd:\"month-to-date\", std:\"season-to-date\", ytd:\"year-to-date\"}\n  const ymd = ['year','month','day']\n  if (!params.hasOwnProperty('elems')) {\n    return null\n  }\n  //process last element\n  try {\n    elems = typeof params.elems === \"string\" ? JSON.parse(params.elems).slice(-1)[0]: params.elems.slice(-1)[0]\n  } catch {\n    return null\n  }\n  // interpret the interval portion of the request\n  if (!elems.hasOwnProperty('interval')) {\n    return null\n  }\n  let interval = elems.interval\n  if (typeof interval === 'string') {\n    if (interval === 'dly') {\n      interval = [0,0,1]\n    } else if (interval === 'mly') {\n      interval = [0,1]\n    } else if (interval === 'yly') {\n      interval = [1]\n    } else {\n      return badintervalMessage\n    }\n  }\n  const intcnt = Math.max(...interval)\n  const intpos = interval.indexOf(intcnt)\n  if (interval.length < 1 || interval.length > 3 || intpos < 0) {\n    return badintervalMessage\n  }\n  const intfreq = ymd[interval.length-1]\n  const inttype = ymd[intpos]\n  \n  // preocess duration/reduce portion\n  let duration = elems.hasOwnProperty('duration') ? elems.duration : 1\n  const reduce = elems.hasOwnProperty('reduce') ? (typeof elems.reduce === 'object' ? elems.reduce.reduce : elems.reduce) : null\n  if (duration === 'dly' || duration === 'mly' || duration === 'yly') {\n    duration = 1\n  } else if (!isNaN(Number(duration))) {\n    duration = Number(duration)\n  }\n  if ((duration !== 1 || intfreq !== 'day') && !reduce) {\n    return noreduceMessage\n  } else if (typeof duration === 'string' && !durationText.hasOwnProperty(duration)) {\n    return baddurationlMessage\n  } else if (duration === 'std' && !elems.hasOwnProperty(\"season_start\")) {\n    return noseasonstartMessage\n  } else if (duration !== 1 || intfreq !== 'day') {\n    const durphrase = typeof duration === 'string' ? durationText[duration] : (duration + \"-\" + intfreq)\n    explanation += \"Each data value returned for this query element will be a \" + durphrase + \" \" + reduce\n    // include season_start when appropriate\n    if (duration === 'std') {\n      if (typeof elems.season_start === \"string\") {\n        elems.season_start = elems.season_start.split(\"-\").map(item => { return Number(item) })\n      }\n      if (elems.season_start.length === 1) {\n        elems.season_start.push(1)\n      }\n      const season_start = monthName[elems.season_start[0]-1] + \" \" + elems.season_start[1]\n      explanation += \" since \" + season_start\n    }\n    explanation += \". \"\n  }\n  const intphrase = intcnt === 1 ? inttype : (intcnt + \" \" + inttype + \"s\")\n  explanation += \"Results will consist of one value every \" + intphrase\n  // date portion\n  if ((params.hasOwnProperty('sdate') && params.hasOwnProperty('edate')) || \n      params.hasOwnProperty('date') ||\n      (elems.hasOwnProperty('sdate') && elems.hasOwnProperty('edate'))) {\n    const sdate = elems.sdate || params.sdate || params.date\n    const edate = elems.edate || params.edate || null\n    let sdatestr = formatDate(sdate, intfreq)\n    let edatestr = edate ? formatDate(edate, intfreq) : 'na'\n    if (!sdatestr || !edatestr) {\n      return baddateMessage\n    }\n    if (intfreq === 'day' && intpos < 2) {\n      const sdparts = sdatestr.split(\", \")\n      const edparts = edatestr.split(\", \")\n      edatestr = sdparts[0] + \", \" + edparts[1]\n    } else if (intfreq === 'month' && intpos < 1) {\n      const sdparts = sdatestr.split(\" \")\n      const edparts = edatestr.split(\" \")\n      edatestr = sdparts[0] + \" \" + edparts[1]\n    }\n    const datephrase = elems.hasOwnProperty('reduce') ? \"the periods ending \" : \"\"\n    explanation += \" for \" + datephrase + sdatestr + (edatestr !== 'na' ? \" through \" + edatestr : \"\")\n  }\n  explanation += \". \" \n    \n  return explanation\n}"]},"metadata":{},"sourceType":"module"}