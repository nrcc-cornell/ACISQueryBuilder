{"ast":null,"code":"'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\nvar maybeToString = function maybeToString(it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n  // `String.prototype.replace` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n  function replace(searchValue, replaceValue) {\n    var O = defined(this);\n    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n    return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);\n  },\n  // `RegExp.prototype[@@replace]` method\n  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n  function (regexp, replaceValue) {\n    var res = maybeCallNative($replace, regexp, this, replaceValue);\n    if (res.done) return res.value;\n    var rx = anObject(regexp);\n    var S = String(this);\n    var functionalReplace = typeof replaceValue === 'function';\n    if (!functionalReplace) replaceValue = String(replaceValue);\n    var global = rx.global;\n    if (global) {\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n    }\n    var results = [];\n    while (true) {\n      var result = regExpExec(rx, S);\n      if (result === null) break;\n      results.push(result);\n      if (!global) break;\n      var matchStr = String(result[0]);\n      if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n    }\n    var accumulatedResult = '';\n    var nextSourcePosition = 0;\n    for (var i = 0; i < results.length; i++) {\n      result = results[i];\n      var matched = String(result[0]);\n      var position = max(min(toInteger(result.index), S.length), 0);\n      var captures = [];\n      // NOTE: This is equivalent to\n      //   captures = result.slice(1).map(maybeToString)\n      // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n      // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n      // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n      for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n      var namedCaptures = result.groups;\n      if (functionalReplace) {\n        var replacerArgs = [matched].concat(captures, position, S);\n        if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n        var replacement = String(replaceValue.apply(undefined, replacerArgs));\n      } else {\n        replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n      }\n      if (position >= nextSourcePosition) {\n        accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n        nextSourcePosition = position + matched.length;\n      }\n    }\n    return accumulatedResult + S.slice(nextSourcePosition);\n  }];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$':\n          return '$';\n        case '&':\n          return matched;\n        case '`':\n          return str.slice(0, position);\n        case \"'\":\n          return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default:\n          // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});","map":{"version":3,"names":["anObject","require","toObject","toLength","toInteger","advanceStringIndex","regExpExec","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","it","undefined","String","defined","REPLACE","$replace","maybeCallNative","replace","searchValue","replaceValue","O","fn","call","regexp","res","done","value","rx","S","functionalReplace","global","fullUnicode","unicode","lastIndex","results","result","push","matchStr","accumulatedResult","nextSourcePosition","i","length","matched","position","index","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","apply","getSubstitution","slice","str","tailPos","m","symbols","match","ch","capture","charAt","n","f"],"sources":["/Users/kle1/progs/React/QueryBuilder3/node_modules/core-js/modules/es6.regexp.replace.js"],"sourcesContent":["'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}