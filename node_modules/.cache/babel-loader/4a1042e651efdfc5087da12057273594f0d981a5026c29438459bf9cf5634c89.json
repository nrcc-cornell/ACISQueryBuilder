{"ast":null,"code":"var _jsxFileName = \"/Users/kle1/progs/React/QueryBuilder3/src/ResultsButtons.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    // ToggleButton selected\n    selected: {\n      background: \"blue !important\",\n      color: \"white !important\"\n    },\n    // Paper\n    paperRoot: {\n      margin: \"1em 0\"\n    }\n  };\n});\nvar ResultsButtons = function ResultsButtons(props) {\n  _s();\n  var classes = useStyles();\n  var buttonLabels = ['JSON', 'Basic format', 'Full format'];\n  var handleChange = function handleChange(event) {\n    var value = event.currentTarget.value;\n    setSelectedButton(value);\n    props.handleFormat(value);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 0,\n    classes: {\n      root: classes.paperRoot\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 16,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: props.showButtons && /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: props.selectedButton,\n          exclusive: true,\n          onChange: props.handleFormat,\n          children: buttonLabels.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: item,\n              classes: {\n                selected: classes.selected\n              },\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n_s(ResultsButtons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = ResultsButtons;\nexport default ResultsButtons;\nvar _c;\n$RefreshReg$(_c, \"ResultsButtons\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Grid","Typography","ToggleButton","ToggleButtonGroup","makeStyles","useStyles","theme","selected","background","color","paperRoot","margin","ResultsButtons","props","classes","buttonLabels","handleChange","event","value","currentTarget","setSelectedButton","handleFormat","root","showButtons","selectedButton","map","item"],"sources":["/Users/kle1/progs/React/QueryBuilder3/src/ResultsButtons.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Paper from '@mui/material/Paper'\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport { makeStyles } from '@mui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n   // ToggleButton selected\n  selected: {\n    background: \"blue !important\",\n    color: \"white !important\"\n  },\n  // Paper\n  paperRoot: {\n    margin: \"1em 0\",\n  }\n}))\n\nconst ResultsButtons = (props) => {\n\n  const classes = useStyles()\n\n  const buttonLabels = ['JSON', 'Basic format', 'Full format']\n\n  const handleChange = (event) => {\n    const value = event.currentTarget.value\n    setSelectedButton(value)\n    props.handleFormat(value)\n  }\n\n \n\n  return (\n    <Paper elevation={0} classes={{root:classes.paperRoot}}>\n      <Grid container spacing={16}>\n        <Grid item>\n          <Typography variant=\"h6\">\n            Results:\n          </Typography>\n        </Grid>\n        <Grid item>\n          {props.showButtons &&\n            <ToggleButtonGroup \n              value={props.selectedButton} \n              exclusive \n              onChange={props.handleFormat}\n            >\n              {buttonLabels.map((item) => (\n                <ToggleButton \n                  key={item} \n                  value={item} \n                  classes={{selected:classes.selected}}\n                >\n                  {item}\n                </ToggleButton>                  \n              ))}\n            </ToggleButtonGroup>\n          }\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default ResultsButtons"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,SAASC,UAAU,QAAQ,aAAa;AAAA;AAExC,IAAMC,SAAS,GAAGD,UAAU,CAAC,UAACE,KAAK;EAAA,OAAM;IACtC;IACDC,QAAQ,EAAE;MACRC,UAAU,EAAE,iBAAiB;MAC7BC,KAAK,EAAE;IACT,CAAC;IACD;IACAC,SAAS,EAAE;MACTC,MAAM,EAAE;IACV;EACF,CAAC;AAAA,CAAC,CAAC;AAEH,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAK;EAAA;EAEhC,IAAMC,OAAO,GAAGT,SAAS,EAAE;EAE3B,IAAMU,YAAY,GAAG,CAAC,MAAM,EAAE,cAAc,EAAE,aAAa,CAAC;EAE5D,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAK;IAC9B,IAAMC,KAAK,GAAGD,KAAK,CAACE,aAAa,CAACD,KAAK;IACvCE,iBAAiB,CAACF,KAAK,CAAC;IACxBL,KAAK,CAACQ,YAAY,CAACH,KAAK,CAAC;EAC3B,CAAC;EAID,oBACE,QAAC,KAAK;IAAC,SAAS,EAAE,CAAE;IAAC,OAAO,EAAE;MAACI,IAAI,EAACR,OAAO,CAACJ;IAAS,CAAE;IAAA,uBACrD,QAAC,IAAI;MAAC,SAAS;MAAC,OAAO,EAAE,EAAG;MAAA,wBAC1B,QAAC,IAAI;QAAC,IAAI;QAAA,uBACR,QAAC,UAAU;UAAC,OAAO,EAAC,IAAI;UAAA,UAAC;QAEzB;UAAA;UAAA;UAAA;QAAA;MAAa;QAAA;QAAA;QAAA;MAAA,SACR,eACP,QAAC,IAAI;QAAC,IAAI;QAAA,UACPG,KAAK,CAACU,WAAW,iBAChB,QAAC,iBAAiB;UAChB,KAAK,EAAEV,KAAK,CAACW,cAAe;UAC5B,SAAS;UACT,QAAQ,EAAEX,KAAK,CAACQ,YAAa;UAAA,UAE5BN,YAAY,CAACU,GAAG,CAAC,UAACC,IAAI;YAAA,oBACrB,QAAC,YAAY;cAEX,KAAK,EAAEA,IAAK;cACZ,OAAO,EAAE;gBAACnB,QAAQ,EAACO,OAAO,CAACP;cAAQ,CAAE;cAAA,UAEpCmB;YAAI,GAJAA,IAAI;cAAA;cAAA;cAAA;YAAA,SAKI;UAAA,CAChB;QAAC;UAAA;UAAA;UAAA;QAAA;MACgB;QAAA;QAAA;QAAA;MAAA,SAEjB;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,SACD;AAEZ,CAAC;AAAA,GA5CKd,cAAc;EAAA,QAEFP,SAAS;AAAA;AAAA,KAFrBO,cAAc;AA8CpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}