{"version":3,"sources":["QuerySelector.jsx","RenderTextField.jsx","DateSelection.jsx","StnMetaInput.jsx","Builders.jsx","QueryExplain.jsx","StnDataInput.jsx","MultiStnDataInput.jsx","StnHourlyInput.jsx","GridDataInput.jsx","GridData2Input.jsx","GeneralInput.jsx","ResultsButtons.jsx","Output.jsx","HelpTable.jsx","Footer.jsx","App.jsx","index.js"],"names":["QuerySelector","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","value","setState","wstype","state","prevProps","classes","react_default","a","createElement","Paper_default","elevation","root","paperRoot","Grid_default","container","spacing","item","xs","sm","Typography_default","variant","titleRoot","ToggleButtonGroup_default","exclusive","onChange","query_types","map","ToggleButton_default","key","selected","Component","withStyles","background","color","textTransform","borderRight","margin","RenderTextField","name","target","updateParam","defineProperty","handleFocus","updateHelpFor","handleBlur","shouldComponentUpdate","nextProps","nextState","id","fieldlabel","options","style","hasOwnProperty","required","multiline","disabled","placeholder","TextField_default","label","inputProps","paddingTop","paddingBottom","fontSize","width","InputLabelProps","shrink","onFocus","onBlur","DateSelection","update","updateDates","sdate","edate","date","handleChipClick","datetype","componentDidUpdate","Chip_default","clickable","tabIndex","marginBottom","marginTop","onClick","RenderTextField_RenderTextField","StnMetaInput","helpFor","updateAppState","updateInputParams","metafields","some","input_params","forEach","sids","county","climdiv","cwa","basin","bbox","meta","elems","output","network","keys","length","includes","DateSelection_DateSelection","buildElement","elementKeys","elementValues","elem","subelems","mustBeNumber","isNaN","Number","interval","replace","split","duration","Array","isArray","add","reduce","maxmissing","groupby","base","season_start","elem_sdate","elem_edate","filter","reduce_run_maxmissing","newObject","objectSpread","smry","smry_run_maxmissing","smry_only","concat","toConsumableArray","JSON","parse","buildImage","imageKeys","imageValues","image","levels","overlays","QueryExplain","exptext","params","explanation","monthName","formatDate","rlen","ymd","substr","badintervalMessage","durationText","mtd","std","ytd","slice","_unused","intcnt","Math","max","apply","intpos","indexOf","intfreq","inttype","push","sdatestr","edatestr","sdparts","edparts","buildExplanation","border","padding","backgroundColor","fontWeight","StnDataInput","addElement","newElems","stringify","haveInterval","clearElements","replaceElements","updateElems","updateElemBuild","datafields","sid","reduce_add","reduce_n","smry_add","smry_n","normal","prec","_this2","notdly","Button_default","size","onMouseDown","QueryExplain_QueryExplain","marginLeft","MultiStnDataInput","elementKays","vX","vN","GridDataInput","updateImage","imagefields","updateOutput","mapcontrols","handleMapControlClick","checked","loc","grid","area_reduce","units","info_only","proj","interp","cmap","height","className","button","FormControlLabel_default","control","Switch_default","switchBase","bar","&$checked","& + $bar","GridData2Input","nestElement","elem_string","includeImageControls","GeneralInput","updateArea","generalArea","componentDidMount","paramfields","select","SelectProps","MenuItem_default","buttonLabels","ResultsButtons","currentTarget","selectedButton","handleFormat","showButtons","Output","handleParamsChange","input_params_string","results","changedInput","handleSubmit","isCsv","dataimage","url","acisServer","fetch","method","body","headers","Content-Type","then","response","ok","json","text","data","results_json","format","catch","error","message","basicFormat","results_string","results_button","basicFormatResults","hasImage","console","log","fullWidth","fontFamily","src_ResultsButtons","src","alt","whiteSpace","wordBreak","tabledata","nohelp","heads","contents","foots","hrly_sid","grid2_bbox","hrly_elems","grid_output","grid2_output","grid_reduce","grid2_reduce","grid2","grid_meta","grid_elems","grid2_name","grid2_elems","general_id","general_meta","HelpTable","helpid","helpdata","ncols","Table_default","TableHead_default","TableRow_default","cell","i","TableCell_default","TableBody_default","row","hover","j","colSpan","TableFooter_default","Footer","handleOpenMenu","anchorEl","handleCloseMenu","handleMenuSelect","server","footer","Menu_default","open","Boolean","onClose","option","menuitem","align","href","lineHeight","acis_servers","StnMeta","StnData","MultiStnData","GridData","GridData2","StnHourly","General","App","handleQueryChange","handleInputStringChange","inputString","changes","change","ReactGA","initialize","pageview","datarccindex","substring","toLowerCase","src_QuerySelector","StnMetaInput_StnMetaInput","StnDataInput_StnDataInput","MultiStnDataInput_MultiStnDataInput","StnHourlyInput_StnDataInput","src_GridDataInput","GridData2Input_GridData2Input","GeneralInput_GeneralInput","HelpTable_HelpTable","Output_Output","src_Footer","document","title","theme","createMuiTheme","palette","primary","main","green","typography","useNextVariants","overrides","MuiListItem","ReactDOM","render","styles","App_App","getElementById"],"mappings":"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","file":"static/js/main.6c4f4a53.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = {\n  // classes for ToggleButton\n  root: {\n    background:\"white\",\n    color:\"darkblue\",\n    textTransform:\"none\",\n    borderRight:\"1pt solid lightgray\"\n  },\n  selected: {\n    background: \"blue !important\",\n    color:\"white !important\"\n  },\n  // class for Paper\n  paperRoot: {\n    margin: \"0 0 2em\"\n  },\n  // class for page title typography\n  titleRoot: {\n    color: \"darkblue\"\n  },\n}\n\nclass QuerySelector extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      wstype: '',\n    }\n  }\n\n  handleChange = (event, value) => {\n    if (value) {\n      this.setState({ wstype: value})\n      this.props.handleChange(value)\n    }\n  }\n\n  componentDidMount() {\n    this.setState({wstype: this.props.wstype})\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.wstype !== prevProps.wstype) {\n      this.setState({wstype: this.props.wstype})\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    return (\n      <Paper elevation={0} classes={{root:classes.paperRoot}}>\n        <Grid container spacing={0}>\n          <Grid item xs={12} sm={4}>\n            <Typography variant=\"h5\" classes={{root:classes.titleRoot}}>\n              ACIS Query Builder\n            </Typography>\n          </Grid>\n          <Grid item>\n            <ToggleButtonGroup value={this.state.wstype} exclusive onChange={this.handleChange}>\n              {this.props.query_types.map((item) => (\n                <ToggleButton \n                  key={item} \n                  value={item}\n                  classes={{root:classes.root, selected:classes.selected}}\n                >\n                  {item}\n              </ToggleButton>                  \n              ))}\n            </ToggleButtonGroup>\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  }\n}\n\nexport default withStyles(styles)(QuerySelector)","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nexport default class RenderTextField extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      value: '',\n     }\n  }\n\n  handleChange = name => event => {\n    this.setState({value: event.target.value})\n    this.props.updateParam({[name]:event.target.value})\n  }\n\n  handleFocus = name => event => {\n    this.props.updateHelpFor(name)\n  }\n\n  handleBlur = () => {\n    this.props.updateHelpFor(null)\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    return this.props !== nextProps || this.state !== nextState\n  }\n\n  componentDidMount() {\n    this.setState({value: this.props.value})\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      this.setState({value: this.props.value})\n    }\n  }\n\n  render() {\n    const id = this.props.id\n    const fieldlabel = this.props.fieldlabel\n    const options = this.props.options\n    const style = options.hasOwnProperty('style') ? options.style : {}\n    const required = options.hasOwnProperty('required') ? options.required : false\n    const multiline = options.hasOwnProperty('multiline') ? options.multiline : false\n    const disabled = options.hasOwnProperty('disabled') ? options.disabled : false\n    const placeholder = options.hasOwnProperty('placeholder') ? options.placeholder : \"\"\n    return (\n      <div>\n        <TextField\n          id={id}\n          label={fieldlabel}\n          value={this.state.value}\n          margin=\"dense\"\n          variant=\"outlined\"\n          required={required}\n          multiline={multiline}\n          disabled={disabled}\n          placeholder={placeholder}\n          inputProps={{style:{\"paddingTop\":\"7px\", \"paddingBottom\":\"7px\", \"fontSize\":\"80%\", \"width\":\"100%\"}}}\n          InputLabelProps={{ shrink: true, style:{color: required ? \"limegreen\" : \"gray\"}}}\n          style={style}\n          onChange={this.handleChange(id)}\n          onFocus={this.handleFocus(id)}\n          onBlur={this.handleBlur}\n    \n        />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport RenderTextField from './RenderTextField'\n\nexport default class DateSelection extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      sdate: '',\n      edate: '',\n      date: '',\n      datetype: 'pair',\n    }\n  }\n\n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateParam(update)\n  }\n\n  updateDates = () => {\n    this.props.updateParam({\n      sdate:this.state.sdate,\n      edate:this.state.edate,\n      date:this.state.date\n    })\n  }\n\n  handleChipClick = () => {\n    if (this.state.datetype === 'pair') {\n      const sdate = this.state.sdate\n      this.setState({\n        sdate:\"\", \n        edate:\"\", \n        date:sdate, \n        datetype:\"single\"\n      }, this.updateDates)\n    } else {\n      const date = this.state.date\n      this.setState({\n        date: \"\", \n        sdate:date, \n        datetype:\"pair\"\n      }, this.updateDates)\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props !== prevProps) {\n      this.setState({\n        sdate: this.props.sdate,\n        edate: this.props.edate,\n        date: this.props.date,\n      })\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Chip\n          label={this.state.datetype === 'pair' ? \"Change to single date\" : \"Change to start/end dates\"}\n          clickable={true}\n          variant=\"outlined\"\n          tabIndex=\"-1\"\n          style={{marginBottom:\"0.5em\", marginTop:\"0.5em\"}}\n          onClick={this.handleChipClick}\n        />\n        {this.state.datetype === 'pair' &&\n          <div>\n            <RenderTextField\n            id=\"sdate\"\n            fieldlabel=\"Start date\"\n            value={this.state.sdate}\n            options={{}}\n            updateHelpFor={this.props.updateHelpFor}\n            updateParam={this.updateParam}\n            />\n            <RenderTextField\n            id=\"edate\"\n            fieldlabel=\"End date\"\n            value={this.state.edate}\n            options={{}}\n            updateHelpFor={this.props.updateHelpFor}\n            updateParam={this.updateParam}\n            />\n          </div>\n        }\n        {this.state.datetype === 'single' &&\n          <RenderTextField\n              id=\"date\"\n              fieldlabel=\"Date\"\n              value={this.state.date}\n              options={{}}\n              updateHelpFor={this.props.updateHelpFor}\n              updateParam={this.updateParam}\n          />\n        }\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\n//import { buildInputParams } from './Builders.jsx'\n\nexport default class StnMetaInput extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      sids: '',\n      county: '',\n      climdiv: '',\n      cwa: '',\n      basin: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      meta: '',\n      elems: '',\n      output: '',\n      network: '',\n    }\n    this.metafields = Object.keys(this.state)\n  }\n\n  updateHelpFor = (helpFor) => {\n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.metafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.metafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          this.setState({[key]: this.props.input_params[key]})\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={4}>\n            <Typography variant=\"h6\">\n              Required input\n            </Typography>\n            <Typography variant=\"caption\">\n              Enter at least one of the following:\n            </Typography>\n            {this.state.county.length === 0 && \n              this.state.climdiv.length === 0 && \n              this.state.cwa.length === 0 && \n              this.state.basin.length === 0 && \n              this.state.state.length === 0 &&\n              this.state.bbox.length === 0 &&\n              <RenderTextField\n                id=\"sids\"\n                fieldlabel=\"Station ID(s)\"\n                value={this.state.sids}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n            }\n            {this.state.sids.length === 0 &&\n              <div>\n                <RenderTextField\n                  id=\"state\"\n                  fieldlabel=\"State\"\n                  value={this.state.state}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n                <RenderTextField\n                  id=\"county\"\n                  fieldlabel=\"County\"\n                  value={this.state.county}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n                <RenderTextField\n                  id=\"climdiv\"\n                  fieldlabel=\"Climate Division\"\n                  value={this.state.climdiv}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n                <RenderTextField\n                  id=\"cwa\"\n                  fieldlabel=\"CWA\"\n                  value={this.state.cwa}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n                <RenderTextField\n                  id=\"basin\"\n                  fieldlabel=\"Basin\"\n                  value={this.state.basin}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n                <RenderTextField\n                  id=\"bbox\"\n                  fieldlabel=\"Bounding box\"\n                  value={this.state.bbox}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              </div>\n            }\n          </Grid>\n\n          <Grid item xs={4}>\n            <Typography variant=\"h6\">\n              Optional input\n            </Typography>\n            <Typography variant=\"caption\">\n              Enter any or all of the following:\n            </Typography>\n            <RenderTextField\n              id=\"meta\"\n              fieldlabel=\"Meta options\"\n              value={this.state.meta}\n              options={{style: {width:\"95%\"}}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateParam}\n            />\n            {(this.state.sids.length === 0 || this.state.meta.includes('valid_daterange')) &&\n              <RenderTextField\n                id=\"elems\"\n                fieldlabel=\"Elements\"\n                value={this.state.elems}\n                options={{required: this.state.meta.includes('valid_daterange') ? true : false}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n            }\n            <RenderTextField\n              id=\"network\"\n              fieldlabel=\"Network\"\n              value={this.state.network}\n              options={{}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateParam}\n            />\n            <RenderTextField\n              id=\"output\"\n              fieldlabel=\"Output type\"\n              value={this.state.output}\n              options={{disabled: this.state.meta.length && this.state.output === 'json' ? true : false}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateParam}\n            />\n\n            {this.state.sids.length === 0 &&\n              <DateSelection\n                sdate={this.state.sdate}\n                edate={this.state.edate}\n                date={this.state.date}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n            }\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}","export function buildElement(elementKeys, elementValues) {\n  let elem = {}\n  let subelems = []\n  const mustBeNumber = ['duration','vX','vN','prec','base']\n  elementKeys.forEach((item) => {\n    if (elementValues[item] !== '') {\n      if (mustBeNumber.includes(item) && !isNaN(Number(elementValues[item]))) {\n        elem[item] = Number(elementValues[item])\n      } else {\n        elem[item] = elementValues[item]\n      }\n    }\n  })\n  // if interval is a list, make it an array (not a string)\n  if (elem.hasOwnProperty('interval') && (elem.interval.includes(\",\") || elem.interval.includes(\"[\"))) {\n    elem.interval = elem.interval.replace(/[[\\]]/g,\"\").split(\",\").map((item) => {return Number(item)})\n  }\n  // figure out whether or not selection is for single day\n  const notdly = (typeof elem.duration === \"string\" && elem.duration !== 'dly') || \n    (typeof elem.duration === 'number' && (elem.duration !== 1 || (elem.interval !== 'dly' && !(Array.isArray(elem.interval) && elem.interval.length === 3))))\n  // can only have add for dly/dly; can only have reduce and max_missing if not dly/dly\n  if (notdly) {\n    delete elem.add\n  } else {\n    delete elem.reduce\n    delete elem.maxmissing\n  }\n  // can only have groupby if interval is not yly\n  if (elem.hasOwnProperty('interval') && (elem.interval === 'yly' || (Array.isArray(elem.interval) && elem.interval.length === 1))) {\n    delete elem.groupby\n  }\n  // can only have base for degree days\n  if (elem.hasOwnProperty('name') && !elem.name.includes(\"dd\")) {\n    delete elem.base\n  }\n  // can only have season_start for std\n  if (elem.hasOwnProperty('duration') && elem.duration !== 'std') {\n    delete elem.season_start\n  }\n  // if season_start is a list, make it an array (not a string)\n  if (elem.hasOwnProperty('season_start') && (elem.season_start.includes(\",\") || elem.season_start.includes(\"[\"))) {\n    elem.season_start = elem.season_start.replace(/[[\\]]/g,\"\").split(\",\").map((item) => {return Number(item)})\n  }\n  // convert name of element sdate and edate\n  if (elem.hasOwnProperty('elem_sdate')) {\n    elem.sdate = elem.elem_sdate\n    delete elem.elem_sdate\n  }\n  if (elem.hasOwnProperty('elem_edate')) {\n    elem.edate = elem.elem_edate\n    delete elem.elem_edate\n  }\n  // build reduce object, if necessary\n  subelems = elementKeys.filter(item => item.includes('reduce_'))\n  if (elem.hasOwnProperty('reduce')) {\n    // can only have reduce_run_maxmissing if reduce is 'run'\n    if (!elem.reduce.includes('run')) {\n      delete elem.reduce_run_maxmissing\n    }\n    let newObject = {}\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n        newObject[item.replace('reduce_','')] = elem[item]\n        delete elem[item]\n      }\n    })\n    if (Object.keys(newObject).length > 0) {\n      elem.reduce = {...newObject, reduce:elem.reduce}\n    }\n  } else {\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n          delete elem[item]\n      }\n    })\n  }\n  // build smry object, if necessary\n  subelems = elementKeys.filter(item => item.includes('smry_') && item !== 'smry_only')\n  if (elem.hasOwnProperty('smry')) {\n    // can only have smry_run_maxmissing if smry is 'run'\n    if (!elem.smry.includes('run')) {\n      delete elem.smry_run_maxmissing\n    }\n    let newObject = {}\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n        newObject[item.replace('smry_','')] = elem[item]\n        delete elem[item]\n      }\n    })\n    if (Object.keys(newObject).length > 0) {\n      elem.smry = {...newObject, reduce:elem.smry}\n    }\n  } else {\n    subelems.forEach((item) => { \n      if (elem.hasOwnProperty(item)) {\n        delete elem[item]\n      }\n    })\n    delete elem.smry_only\n  }\n  return elementValues.elems.includes(\"{\")  ? [...JSON.parse(elementValues.elems), elem] : [elem]\n}\n\nexport function buildImage(imageKeys, imageValues) {\n  let image = {}\n  imageKeys.forEach((item) => {\n    if (imageValues[item] !== '') {\n      // width and height must be an integer (not a string)\n      image[item] = (item === 'width' || item === 'height') ? Number(imageValues[item]) : imageValues[item]\n    }\n  })\n  // levels must be an array (not a string)\n  if (image.hasOwnProperty('levels')) {\n    image.levels = image.levels.replace(/[[\\]]/g,'').split(\",\").map((item) => {return Number(item)})\n  }\n  // overlays must be an array if more than one are specified\n  if (image.hasOwnProperty('overlays') && image.overlays.includes(\",\")) {\n    image.overlays = image.overlays.replace(/[[\\]]/g,'').split(\",\").map((item) => {return item.replace(/[\"']/g,'')})\n  }\n  return image\n}\n\nexport function buildExplanation(params) {\n  let explanation = \"\"\n  let elems = null\n  const monthName = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  const formatDate = (date, rlen) => {\n    let ymd = []\n    if (date.includes(\"-\")) {\n      ymd = date.split(\"-\").map(item => {return Number(item)})\n    } else if ((rlen === \"day\" && date.length === 8) || (rlen === \"month\" && date.length === 6) || (rlen === \"year\" && date.length === 4)) {\n      ymd = [Number(date.substr(0,4)), Number(date.substr(4,2)), Number(date.substr(6,2))]\n    } else if (date === 'por') {\n      return 'period of record'\n    } else {\n      return null\n    }\n    if (rlen === \"year\") {\n      return ymd[0]\n    } else if (rlen === \"month\") {\n      return monthName[ymd[1]-1] + \" \" + ymd[0]\n    } else if (rlen === \"day\") {\n      return monthName[ymd[1]-1] + \" \" + ymd[2] + \", \" + ymd[0]\n    }\n    return null\n  }\n  const badintervalMessage = \"Not a valid interval. Clear this element and add again with a valid interval.\"\n  const baddurationlMessage = \"Not a valid duration. Clear this element and add again with a valid duration.\"\n  const noreduceMessage = \"You need to specify a reduction for this request. Clear this element and add again with a reduction.\"\n  const noseasonstartMessage = \"You need to specify a 'season start' for a duration of 'std'. Clear this element and add again with a season start.\"\n  const baddateMessage = \"Invalid date specifications.\"\n   const durationText = {mtd:\"month-to-date\", std:\"season-to-date\", ytd:\"year-to-date\"}\n  const ymd = ['year','month','day']\n  if (!params.hasOwnProperty('elems')) {\n    return null\n  }\n  //process last element\n  try {\n    elems = typeof params.elems === \"string\" ? JSON.parse(params.elems).slice(-1)[0]: params.elems.slice(-1)[0]\n  } catch {\n    return null\n  }\n  // interpret the interval portion of the request\n  if (!elems.hasOwnProperty('interval')) {\n    return null\n  }\n  let interval = elems.interval\n  if (typeof interval === 'string') {\n    if (interval === 'dly') {\n      interval = [0,0,1]\n    } else if (interval === 'mly') {\n      interval = [0,1]\n    } else if (interval === 'yly') {\n      interval = [1]\n    } else {\n      return badintervalMessage\n    }\n  }\n  const intcnt = Math.max(...interval)\n  const intpos = interval.indexOf(intcnt)\n  if (interval.length < 1 || interval.length > 3 || intpos < 0) {\n    return badintervalMessage\n  }\n  const intfreq = ymd[interval.length-1]\n  const inttype = ymd[intpos]\n  \n  // preocess duration/reduce portion\n  let duration = elems.hasOwnProperty('duration') ? elems.duration : 1\n  const reduce = elems.hasOwnProperty('reduce') ? (typeof elems.reduce === 'object' ? elems.reduce.reduce : elems.reduce) : null\n  if (duration === 'dly' || duration === 'mly' || duration === 'yly') {\n    duration = 1\n  } else if (!isNaN(Number(duration))) {\n    duration = Number(duration)\n  }\n  if ((duration !== 1 || intfreq !== 'day') && !reduce) {\n    return noreduceMessage\n  } else if (typeof duration === 'string' && !durationText.hasOwnProperty(duration)) {\n    return baddurationlMessage\n  } else if (duration === 'std' && !elems.hasOwnProperty(\"season_start\")) {\n    return noseasonstartMessage\n  } else if (duration !== 1 || intfreq !== 'day') {\n    const durphrase = typeof duration === 'string' ? durationText[duration] : (duration + \"-\" + intfreq)\n    explanation += \"Each data value returned for this query element will be a \" + durphrase + \" \" + reduce\n    // include season_start when appropriate\n    if (duration === 'std') {\n      if (typeof elems.season_start === \"string\") {\n        elems.season_start = elems.season_start.split(\"-\").map(item => { return Number(item) })\n      }\n      if (elems.season_start.length === 1) {\n        elems.season_start.push(1)\n      }\n      const season_start = monthName[elems.season_start[0]-1] + \" \" + elems.season_start[1]\n      explanation += \" since \" + season_start\n    }\n    explanation += \". \"\n  }\n  const intphrase = intcnt === 1 ? inttype : (intcnt + \" \" + inttype + \"s\")\n  explanation += \"Results will consist of one value every \" + intphrase\n  // date portion\n  if ((params.hasOwnProperty('sdate') && params.hasOwnProperty('edate')) || \n      params.hasOwnProperty('date') ||\n      (elems.hasOwnProperty('sdate') && elems.hasOwnProperty('edate'))) {\n    const sdate = elems.sdate || params.sdate || params.date\n    const edate = elems.edate || params.edate || null\n    let sdatestr = formatDate(sdate, intfreq)\n    let edatestr = edate ? formatDate(edate, intfreq) : 'na'\n    if (!sdatestr || !edatestr) {\n      return baddateMessage\n    }\n    if (intfreq === 'day' && intpos < 2) {\n      const sdparts = sdatestr.split(\", \")\n      const edparts = edatestr.split(\", \")\n      edatestr = sdparts[0] + \", \" + edparts[1]\n    } else if (intfreq === 'month' && intpos < 1) {\n      const sdparts = sdatestr.split(\" \")\n      const edparts = edatestr.split(\" \")\n      edatestr = sdparts[0] + \" \" + edparts[1]\n    }\n    const datephrase = elems.hasOwnProperty('reduce') ? \"the periods ending \" : \"\"\n    explanation += \" for \" + datephrase + sdatestr + (edatestr !== 'na' ? \" through \" + edatestr : \"\")\n  }\n  explanation += \". \" \n    \n  return explanation\n}","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport { buildExplanation } from './Builders.jsx'\n\nexport default class QueryExplain extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      exptext: null,\n    }\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.props.input_params.elems !== nextProps.input_params.elems ||\n        this.props.input_params.sdate !== nextProps.input_params.sdate || \n        this.props.input_params.edate !== nextProps.input_params.edate) {\n      return true\n    }\n    if (this.state.exptext !== nextState.exptext) {\n      return true\n    }\n    return false\n  }\n\n  componentDidUpdate = prevProps => {\n    const exptext = buildExplanation(this.props.input_params)\n    this.setState({exptext})\n  }\n\n  render() {\n    return (\n      <Paper elevation={0} style={{marginTop:\"1em\"}}>\n        {this.state.exptext &&\n          <div>\n            <Paper \n              elevation={3} \n              style={{\n                border:\"1px solid lightgray\", \n                margin:\"0\", \n                padding:\"10px\", \n                width:\"85%\",\n                backgroundColor:\"#f4ffff\"\n              }}\n            >\n            <Typography variant=\"body2\" style={{fontWeight:\"bold\"}}>\n              Expected return:\n            </Typography>\n            <Typography style={{fontSize:\"80%\"}}>\n              {this.state.exptext}\n            </Typography>\n            </Paper>\n          </div>\n        }\n      </Paper>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport QueryExplain from './QueryExplain'\nimport { buildElement } from './Builders.jsx'\n\nexport default class StnDataInput extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      sid: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      elems: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      add: '',\n      reduce: '',\n      reduce_add: '',\n      reduce_n: '',\n      reduce_run_maxmissing: '',\n      maxmissing: '',\n      smry: '',\n      smry_add: '',\n      smry_n: '',\n      smry_run_maxmissing: '',\n      smry_only: '',\n      normal: '',\n      groupby: '',\n      prec: '',\n      meta: '',\n      output: '',\n      haveInterval: false,\n    }\n    this.datafields = ['sid','sdate','edate','date','elems','meta','output']\n    this.elementKeys = Object.keys(this.state).filter(\n      item => (![\"haveInterval\",...this.datafields].includes(item)\n    ))\n  }\n\n  addElement = () => {\n    const newElems = JSON.stringify(buildElement(this.elementKeys, this.state))\n    this.setState({\n      elems: newElems,\n      haveInterval: this.state.interval !== \"\",\n    })\n    this.props.updateInputParams({elems: newElems})\n    this.props.updateAppState({helpFor: null})\n  }\n\n  clearElements = () => {\n    this.setState({\n      elems: '',\n      haveInterval: false\n    })\n    this.props.updateInputParams({elems: \"\"})\n    this.props.updateAppState({helpFor: null})\n  }\n\n  replaceElements = () => {\n    this.setState({\n      elems: ''\n    }, this.addElement)\n  }\n\n  updateHelpFor = (helpFor) => {\n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n\n  updateElems = (update) => {\n    if (update.elems.length === 0) {\n      this.setState({haveInterval: false})\n    }\n    this.updateParam(update)\n  }\n\n  updateElemBuild = (update) => {\n    this.setState(update)\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.datafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.datafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          if (key === 'elems' && typeof this.props.input_params.elems === 'object') {\n            this.setState({[key]: JSON.stringify(this.props.input_params[key])})\n          } else {\n            this.setState({[key]: this.props.input_params[key]})\n          }\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n\n  render () {\n    const notdly = (this.state.duration.length === 3 && this.state.duration !== 'dly') || \n      (this.state.duration.length > 0 && !isNaN(Number(this.state.duration)) && \n      (this.state.duration !== \"1\" || (this.state.interval !== 'dly' && !(this.state.interval.includes('[') && this.state.interval.length === 7))))\n    return (\n      <Grid container>\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Required input\n          </Typography>\n          <RenderTextField\n            id=\"sid\"\n            fieldlabel=\"Station ID\"\n            value={this.state.sid}\n            options={{}}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateParam}\n          />\n          <DateSelection\n            sdate={this.state.sdate}\n            edate={this.state.edate}\n            date={this.state.date}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateParam}\n          />\n          <RenderTextField\n            id=\"elems\"\n            fieldlabel=\"Elements\"\n            value={this.state.elems}\n            options={{style: {width:\"90%\"}, multiline: true, placeholder: \"Enter directly or build using Element setup\"}}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateElems}\n          />\n          {this.state.elems.includes(\"{\") &&\n            <Button \n              size=\"small\"\n              variant=\"outlined\"\n              style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n              onMouseDown={this.clearElements}\n            >\n              Clear elements\n            </Button>\n          }\n          <QueryExplain\n            input_params={this.props.input_params}\n            wstype=\"StnData\"\n          />\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional element setup\n          </Typography>\n          <RenderTextField\n            id=\"name\"\n            fieldlabel=\"Name\"\n            value={this.state.name}\n            options={{}}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateElemBuild}\n          />\n          {this.state.name.includes(\"dd\") &&\n            <RenderTextField\n              id=\"base\"\n              fieldlabel=\"Base\"\n              value={this.state.base}\n              options={{}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"interval\"\n            fieldlabel=\"Interval\"\n            value={this.state.interval}\n            options={{disabled:this.state.haveInterval}}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateElemBuild}\n          />\n          <RenderTextField\n            id=\"duration\"\n            fieldlabel=\"Duration\"\n            value={this.state.duration}\n            options={{}}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateElemBuild}\n          />\n          {this.state.duration === 'std' &&\n            <RenderTextField\n              id=\"season_start\"\n              fieldlabel=\"Season start\"\n              value={this.state.season_start}\n              options={{required:true}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          {!notdly &&\n            <RenderTextField\n              id=\"add\"\n              fieldlabel=\"Add\"\n              value={this.state.add}\n              options={{}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          {notdly &&\n            <RenderTextField\n              id=\"reduce\"\n              fieldlabel=\"Reduce\"\n              value={this.state.reduce}\n              options={{required:true}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          {this.state.reduce.length > 0 && notdly &&\n            <div>\n              <RenderTextField\n                id=\"reduce_add\"\n                fieldlabel=\"- Reduce Add\"\n                value={this.state.reduce_add}\n                options={{style:{marginLeft:\"2em\"}}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n            </div>\n          }\n          {this.state.reduce.length > 0 && notdly &&\n            <RenderTextField\n              id=\"reduce_n\"\n              fieldlabel=\"- Reduce Number\"\n              value={this.state.reduce_n}\n              options={{style:{marginLeft:\"2em\"}}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          {this.state.reduce.includes(\"run\") && notdly &&\n            <RenderTextField\n              id=\"reduce_run_maxmissing\"\n              fieldlabel=\"- Run max missing\"\n              value={this.state.reduce_run_maxmissing}\n              options={{style:{marginLeft:\"2em\"}}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          {notdly &&\n            <RenderTextField\n              id=\"maxmissing\"\n              fieldlabel=\"Max missing\"\n              value={this.state.maxmissing}\n              options={{}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"smry\"\n            fieldlabel=\"Summary\"\n            value={this.state.smry}\n            options={{}}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateElemBuild}\n          />\n          {this.state.smry.length > 0 &&\n            <div>\n              <RenderTextField\n                id=\"smry_add\"\n                fieldlabel=\"- Smry Add\"\n                value={this.state.smry_add}\n                options={{style:{marginLeft:\"2em\"}}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n            </div>\n          }\n          {this.state.smry.length > 0 &&\n            <RenderTextField\n              id=\"smry_n\"\n              fieldlabel=\"- Smry Number\"\n              value={this.state.smry_n}\n              options={{style:{marginLeft:\"2em\"}}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          {this.state.smry.length > 0 && this.state.smry.includes('run') &&\n            <RenderTextField\n              id=\"smry_run_maxmissing\"\n              fieldlabel=\"- Smry Max missing\"\n              value={this.state.smry_run_maxmissing}\n              options={{style:{marginLeft:\"2em\"}}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          {this.state.smry.length > 0 &&\n            <RenderTextField\n              id=\"smry_only\"\n              fieldlabel=\"Summary only\"\n              value={this.state.smry_only}\n              options={{}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"normal\"\n            fieldlabel=\"Normal\"\n            value={this.state.normal}\n            options={{}}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateElemBuild}\n          />\n          {this.state.interval !== 'yly' && this.state.interval !== \"[1]\" &&\n            <RenderTextField\n              id=\"groupby\"\n              fieldlabel=\"Group by\"\n              value={this.state.groupby}\n              options={{}}\n              updateHelpFor={this.updateHelpFor}\n              updateParam={this.updateElemBuild}\n            />\n          }\n          <RenderTextField\n            id=\"prec\"\n            fieldlabel=\"Precision\"\n            value={this.state.prec}\n            options={{}}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateElemBuild}\n          />\n\n          {this.state.name.length > 0 &&\n            <Button \n              size=\"small\"\n              variant=\"outlined\"\n              style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n              onMouseDown={this.addElement}\n            >\n              Add element\n            </Button>\n          }\n          {this.state.name.length > 0 && this.state.elems.includes(\"{\") &&\n            <Button \n              size=\"small\"\n              variant=\"outlined\"\n              style={{marginTop:\"0.5em\", marginLeft:\"0.5em\", backgroundColor:\"lightcyan\"}}\n              onMouseDown={this.replaceElements}\n            >\n              Replace elements\n            </Button>\n          }\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography variant=\"h6\">\n            Optional input\n          </Typography>\n          <RenderTextField\n            id=\"meta\"\n            fieldlabel=\"Meta options\"\n            value={this.state.meta}\n            options={{style: {width:\"95%\"}}}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateParam}\n          />\n          <RenderTextField\n            id=\"output\"\n            fieldlabel=\"Output type\"\n            value={this.state.output}\n            options={{disabled: this.state.meta.length && this.state.output === 'json' ? true : false}}\n            updateHelpFor={this.updateHelpFor}\n            updateParam={this.updateParam}\n          />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport QueryExplain from './QueryExplain'\nimport { buildElement } from './Builders.jsx'\n\nexport default class MultiStnDataInput extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      sids: '',\n      county: '',\n      climdiv: '',\n      cwa: '',\n      basin: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      elems: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      add: '',\n      reduce: '',\n      reduce_add: '',\n      reduce_n: '',\n      reduce_run_maxmissing: '',\n      maxmissing: '',\n      smry: '',\n      smry_add: '',\n      smry_n: '',\n      smry_run_maxmissing: '',\n      smry_only: '',\n      normal: '',\n      groupby: '',\n      prec: '',\n      meta: '',\n      output: '',\n      haveInterval: false,\n      network: '',\n    }\n    this.datafields = ['sids','county','climdiv','cwa','basin','state','bbox','sdate','edate','date','elems','meta','output']\n    this.elementKays = Object.keys(this.state).filter(\n      item => (![\"haveInterval\",...this.datafields].includes(item)\n    ))\n  }\n\n  addElement = () => {\n    const newElems = JSON.stringify(buildElement(this.elementKays, this.state))\n    this.setState({\n      elems: newElems,\n      haveInterval: true,\n    })\n    this.props.updateInputParams({elems: newElems})\n}\n\n  clearElements = () => {\n    this.setState({\n      elems: '',\n      haveInterval: false,\n    })\n    this.props.updateInputParams({elems: \"\"})\n  }\n\n  replaceElements = () => {\n    this.setState({\n      elems: ''\n    }, this.addElement)\n  }\n\n  updateHelpFor = (helpFor) => {\n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n\n  updateElems = (update) => {\n    if (update.elems.length === 0) {\n      this.setState({haveInterval: false})\n    }\n    this.updateParam(update)\n  }\n\n  updateElemBuild = (update) => {\n    this.setState(update)\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.datafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.datafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          if (key === 'elems' && typeof this.props.input_params.elems === 'object') {\n            this.setState({[key]: JSON.stringify(this.props.input_params[key])})\n          } else {\n            this.setState({[key]: this.props.input_params[key]})\n          }\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n\n  render () {\n    const notdly = (this.state.duration.length === 3 && this.state.duration !== 'dly') || \n      (this.state.duration.length > 0 && !isNaN(Number(this.state.duration)) && \n      (this.state.duration !== \"1\" || (this.state.interval !== 'dly' && !(this.state.interval.includes('[') && this.state.interval.length === 7))))\n    return (\n        <div>\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Required input\n              </Typography>\n              <Typography variant=\"caption\">\n                Enter id(s) for one of the following area types:\n              </Typography>\n              {this.state.county.length === 0 &&                \n               this.state.sids.length === 0 &&\n               this.state.bbox.length === 0 &&\n                <RenderTextField\n                  id=\"state\"\n                  fieldlabel=\"State\"\n                  value={this.state.state}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.sids.length === 0 && \n               this.state.climdiv.length === 0 && \n               this.state.cwa.length === 0 && \n               this.state.basin.length === 0 && \n               this.state.state.length === 0 &&\n               this.state.bbox.length === 0 &&\n                <RenderTextField\n                  id=\"county\"\n                  fieldlabel=\"County\"\n                  value={this.state.county}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.county.length === 0 && \n               this.state.sids.length === 0 && \n               this.state.cwa.length === 0 && \n               this.state.basin.length === 0 && \n               this.state.bbox.length === 0 &&\n                <RenderTextField\n                  id=\"climdiv\"\n                  fieldlabel=\"Climate Division\"\n                  value={this.state.climdiv}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.county.length === 0 && \n               this.state.climdiv.length === 0 && \n               this.state.sids.length === 0 && \n               this.state.basin.length === 0 && \n               this.state.bbox.length === 0 &&\n                <RenderTextField\n                  id=\"cwa\"\n                  fieldlabel=\"CWA\"\n                  value={this.state.cwa}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.county.length === 0 && \n               this.state.climdiv.length === 0 && \n               this.state.cwa.length === 0 && \n               this.state.sids.length === 0 && \n               this.state.bbox.length === 0 &&\n                <RenderTextField\n                  id=\"basin\"\n                  fieldlabel=\"Basin\"\n                  value={this.state.basin}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.county.length === 0 && \n               this.state.climdiv.length === 0 && \n               this.state.cwa.length === 0 && \n               this.state.basin.length === 0 && \n               this.state.state.length === 0 &&\n               this.state.sids.length === 0 &&\n                <RenderTextField\n                  id=\"bbox\"\n                  fieldlabel=\"Bounding box\"\n                  value={this.state.bbox}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.county.length === 0 && \n               this.state.climdiv.length === 0 && \n               this.state.cwa.length === 0 && \n               this.state.basin.length === 0 && \n               this.state.state.length === 0 &&\n               this.state.bbox.length === 0 &&\n                <RenderTextField\n                  id=\"sids\"\n                  fieldlabel=\"Station IDs\"\n                  value={this.state.sids}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              <DateSelection\n                sdate={this.state.sdate}\n                edate={this.state.edate}\n                date={this.state.date}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"elems\"\n                fieldlabel=\"Elements\"\n                value={this.state.elems}\n                options={{style: {width:\"90%\"}, multiline: true, placeholder: \"Enter directly or build using Element setup\"}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElems}\n              />\n              {this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.clearElements}\n                >\n                  Clear elements\n                </Button>\n              }\n              <QueryExplain\n                input_params={this.props.input_params}\n                wstype=\"StnData\"\n              />\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional element setup\n              </Typography>\n              <RenderTextField\n                id=\"name\"\n                fieldlabel=\"Name\"\n                value={this.state.name}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.name.includes(\"dd\") &&\n                <RenderTextField\n                  id=\"base\"\n                  fieldlabel=\"Base\"\n                  value={this.state.base}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"interval\"\n                fieldlabel=\"Interval\"\n                value={this.state.interval}\n                options={{disabled:this.state.haveInterval}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"duration\"\n                fieldlabel=\"Duration\"\n                value={this.state.duration}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.duration === 'std' &&\n                <RenderTextField\n                  id=\"season_start\"\n                  fieldlabel=\"Season start\"\n                  value={this.state.season_start}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {!notdly &&\n                <RenderTextField\n                  id=\"add\"\n                  fieldlabel=\"Add\"\n                  value={this.state.add}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"reduce\"\n                  fieldlabel=\"Reduce\"\n                  value={this.state.reduce}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {this.state.reduce.length > 0 && notdly &&\n                <div>\n                  <RenderTextField\n                    id=\"reduce_add\"\n                    fieldlabel=\"- Reduce Add\"\n                    value={this.state.reduce_add}\n                    options={{style:{marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateElemBuild}\n                  />\n                </div>\n              }\n              {this.state.reduce.length > 0 && notdly &&\n                <RenderTextField\n                  id=\"reduce_n\"\n                  fieldlabel=\"- Reduce Number\"\n                  value={this.state.reduce_n}\n                  options={{style:{marginLeft:\"2em\"}}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {this.state.reduce.includes(\"run\") && notdly &&\n                <RenderTextField\n                  id=\"reduce_run_maxmissing\"\n                  fieldlabel=\"- Run max missing\"\n                  value={this.state.reduce_run_maxmissing}\n                  options={{style:{marginLeft:\"2em\"}}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"maxmissing\"\n                  fieldlabel=\"Max missing\"\n                  value={this.state.maxmissing}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"smry\"\n                fieldlabel=\"Summary\"\n                value={this.state.smry}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.smry.length > 0 &&\n                <div>\n                  <RenderTextField\n                    id=\"smry_add\"\n                    fieldlabel=\"- Smry Add\"\n                    value={this.state.smry_add}\n                    options={{style:{marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateElemBuild}\n                  />\n                </div>\n              }\n              {this.state.smry.length > 0 &&\n                <RenderTextField\n                  id=\"smry_n\"\n                  fieldlabel=\"- Smry Number\"\n                  value={this.state.smry_n}\n                  options={{style:{marginLeft:\"2em\"}}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {this.state.smry.length > 0 && this.state.smry.includes('run') &&\n                <RenderTextField\n                  id=\"smry_run_maxmissing\"\n                  fieldlabel=\"- Smry Max missing\"\n                  value={this.state.smry_run_maxmissing}\n                  options={{style:{marginLeft:\"2em\"}}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {this.state.smry.length > 0 &&\n                <RenderTextField\n                  id=\"smry_only\"\n                  fieldlabel=\"Summary only\"\n                  value={this.state.smry_only}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"normal\"\n                fieldlabel=\"Normal\"\n                value={this.state.normal}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.interval !== 'yly' &&\n                <RenderTextField\n                  id=\"groupby\"\n                  fieldlabel=\"Group by\"\n                  value={this.state.groupby}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"prec\"\n                fieldlabel=\"Precision\"\n                value={this.state.prec}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n\n              {this.state.name.length > 0 &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.addElement}\n                >\n                  Add element\n                </Button>\n              }\n              {this.state.name.length > 0 && this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", marginLeft:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.replaceElements}\n                >\n                  Replace elements\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional input\n              </Typography>\n              <RenderTextField\n                id=\"meta\"\n                fieldlabel=\"Meta options\"\n                value={this.state.meta}\n                options={{style: {width:\"95%\"}}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"network\"\n                fieldlabel=\"Network\"\n                value={this.state.network}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"output\"\n                fieldlabel=\"Output type\"\n                value={this.state.output}\n                options={{disabled: this.state.meta.length && this.state.output === 'json' ? true : false}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n            </Grid>\n          </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport { buildElement } from './Builders.jsx'\n\nexport default class StnDataInput extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      sid: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      elems: '',\n      vX: '',\n      vN: '',\n      prec: '',\n      meta: '',\n    }\n    this.datafields = ['sid','sdate','edate','date','elems','meta']\n    this.elementKays = ['vX','vN','prec']\n  }\n\n  addElement = () => {\n    const newElems = JSON.stringify(buildElement(this.elementKays, this.state))\n    this.setState({\n      elems: newElems,\n      haveInterval: true,\n    })\n    this.props.updateInputParams({elems: newElems})\n  }\n\n  clearElements = () => {\n    this.setState({\n      elems: '',\n      haveInterval: false,\n    })\n    this.props.updateInputParams({elems: \"\"})\n  }\n\n  replaceElements = () => {\n    this.setState({\n      elems: ''\n    }, this.addElement)\n  }\n\n  updateHelpFor = (helpFor) => {\n    if (helpFor === 'sid') {\n      helpFor = 'hrly_sid'\n    } else if (helpFor === 'elems') {\n      helpFor = \"hrly_elems\"\n    }\n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n\n  updateElems = (update) => {\n    if (update.elems.length === 0) {\n      this.setState({haveInterval: false})\n    }\n    this.updateParam(update)\n  }\n\n  updateElemBuild = (update) => {\n    this.setState(update)\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.datafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.datafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          if (key === 'elems' && typeof this.props.input_params.elems === 'object') {\n            this.setState({[key]: JSON.stringify(this.props.input_params[key])})\n          } else {\n            this.setState({[key]: this.props.input_params[key]})\n          }\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n\n  render () {\n    return (\n        <div>\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Required input\n              </Typography>\n              <RenderTextField\n                id=\"sid\"\n                fieldlabel=\"Station ID\"\n                value={this.state.sid}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <DateSelection\n                sdate={this.state.sdate}\n                edate={this.state.edate}\n                date={this.state.date}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"elems\"\n                fieldlabel=\"Elements\"\n                value={this.state.elems}\n                options={{style: {width:\"90%\"}, multiline: true, placeholder: \"Enter directly or build using Element setup\"}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElems}\n              />\n              {this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.clearElements}\n                >\n                  Clear elements\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional element setup\n              </Typography>\n              <RenderTextField\n                id=\"vX\"\n                fieldlabel=\"Var major\"\n                value={this.state.vX}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"vN\"\n                fieldlabel=\"Var minor\"\n                value={this.state.vN}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"prec\"\n                fieldlabel=\"Precision\"\n                value={this.state.prec}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n\n              {this.state.vX.length > 0 &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.addElement}\n                >\n                  Add element\n                </Button>\n              }\n              {this.state.vX.length > 0 && this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", marginLeft:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.replaceElements}\n                >\n                  Replace elements\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional input\n              </Typography>\n              <RenderTextField\n                id=\"meta\"\n                fieldlabel=\"Meta options\"\n                value={this.state.meta}\n                options={{style: {width:\"95%\"}}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n            </Grid>\n          </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport { withStyles } from '@material-ui/core/styles'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport QueryExplain from './QueryExplain'\nimport { buildElement, buildImage } from './Builders.jsx'\n\nconst styles = {\n  switchBase: {\n    color: \"lightcyan\",\n    '&$checked': {\n      color: \"blue\",\n      '& + $bar': {\n        backgroundColor: \"blue\",\n      },\n    },\n  },\n  checked: {},\n  bar: {},\n  button: {\n    marginTop: \"0.5em\", \n    backgroundColor: \"lightcyan\",\n  }\n}\n\nclass GridDataInput extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      loc: '',\n      state: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      smry: '',\n      smry_only: '',\n      area_reduce: '',\n      prec: '',\n      units: '',\n      meta: '',\n      output: '',\n      image: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: '',\n      mapcontrols: '',\n      haveInterval: false,\n    }\n    this.datafields = ['loc','state','bbox','sdate','edate','date','grid','elems','meta','output','image']\n    this.imagefields = ['info_only','proj','overlays','interp','cmap','width','height','levels']\n    this.elementKeys = Object.keys(this.state).filter(\n      item => (![\"mapcontrols\",\"haveInterval\",...this.datafields,...this.imagefields].includes(item)\n    ))\n  }\n\n  addElement = () => {\n    const newElems = JSON.stringify(buildElement(this.elementKeys, this.state))\n    this.setState({\n      elems: newElems,\n      haveInterval: true,\n    })\n    this.props.updateInputParams({elems: newElems})\n  }\n\n  clearElements = () => {\n    this.setState({\n      elems: '',\n      haveInterval: false,\n    })\n    this.props.updateInputParams({elems: \"\"})\n  }\n  \n  replaceElements = () => {\n    this.setState({\n      elems: ''\n    }, this.addElement)\n  }\n\n  updateHelpFor = (helpFor) => {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta'\n    } else if (helpFor === 'output') {\n      helpFor = 'grid_output'\n    } else if (helpFor === 'reduce') {\n      helpFor = 'grid_reduce'\n    } else if (helpFor === 'name' || helpFor === 'elems') {\n      helpFor = 'grid_elems'\n    } \n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n  \n  updateElems = (update) => {\n    if (update.elems.length === 0) {\n      this.setState({haveInterval: false})\n    }\n    this.updateParam(update)\n  }\n\n  updateElemBuild = (update) => {\n    this.setState(update)\n  }\n\n  updateImage = (update) => {\n    this.setState(update, () => {\n      const image = buildImage(this.imagefields, this.state)\n      this.updateParam({image: image})\n    })\n  }\n\n  updateOutput = (update) => {\n    if (update.output === 'image') {\n      const image = buildImage(this.imagefields, this.state)\n      this.updateParam({output:\"image\", image:image})\n      this.setState({\n        mapcontrols: true,\n      })\n    } else {\n      this.updateParam(update)\n    }\n  }\n\n  handleMapControlClick = event => {\n    if (this.state.output !== 'image' || event.target.checked) {\n      const image = event.target.checked ? buildImage(this.imagefields, this.state) : \"\"\n      this.updateParam({image: image})\n      this.setState({\n        mapcontrols: event.target.checked, \n      })\n    }\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.datafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.datafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          if (key === 'elems' && typeof this.props.input_params.elems === 'object') {\n            this.setState({[key]: JSON.stringify(this.props.input_params[key])})\n          } else {\n            this.setState({[key]: this.props.input_params[key]})\n          }\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n  \n  render () {\n    const { classes } = this.props\n    const notdly = (this.state.duration.length === 3 && this.state.duration !== 'dly') || \n      (this.state.duration.length > 0 && !isNaN(Number(this.state.duration)) && \n      (this.state.duration !== \"1\" || (this.state.interval !== 'dly' && !(this.state.interval.includes('[') && this.state.interval.length === 7))))\n    return (\n        <div>\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Required input\n              </Typography>\n              <Typography variant=\"caption\">\n                Enter information for one of the grid selection types:\n              </Typography>\n              {this.state.state.length === 0 && \n               this.state.bbox.length === 0 && \n                <RenderTextField\n                  id=\"loc\"\n                  fieldlabel=\"Point location\"\n                  value={this.state.loc}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 && \n               this.state.bbox.length === 0 && \n                <RenderTextField\n                  id=\"state\"\n                  fieldlabel=\"State\"\n                  value={this.state.state}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 && \n               this.state.state.length === 0 && \n                <RenderTextField\n                  id=\"bbox\"\n                  fieldlabel=\"Bounding box\"\n                  value={this.state.bbox}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              <DateSelection\n                sdate={this.state.sdate}\n                edate={this.state.edate}\n                date={this.state.date}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"grid\"\n                fieldlabel=\"Grid id\"\n                value={this.state.grid}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"elems\"\n                fieldlabel=\"Elements\"\n                value={this.state.elems}\n                options={{style: {width:\"90%\"}, multiline: true, placeholder: \"Enter directly or build using Element setup\"}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElems}\n              />\n              {this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  className={classes.button}\n                  onMouseDown={this.clearElements}\n                >\n                  Clear elements\n                </Button>\n              }\n              <QueryExplain\n                input_params={this.props.input_params}\n                wstype=\"GridData\"\n              />\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional element setup\n              </Typography>\n              <RenderTextField\n                id=\"name\"\n                fieldlabel=\"Name\"\n                value={this.state.name}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.name.includes(\"dd\") &&\n                <RenderTextField\n                  id=\"base\"\n                  fieldlabel=\"Base\"\n                  value={this.state.base}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"interval\"\n                fieldlabel=\"Interval\"\n                value={this.state.interval}\n                options={{disabled:this.state.haveInterval}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"duration\"\n                fieldlabel=\"Duration\"\n                value={this.state.duration}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.duration === 'std' &&\n                <RenderTextField\n                  id=\"season_start\"\n                  fieldlabel=\"Season start\"\n                  value={this.state.season_start}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"reduce\"\n                  fieldlabel=\"Reduce\"\n                  value={this.state.reduce}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"maxmissing\"\n                  fieldlabel=\"Max missing\"\n                  value={this.state.maxmissing}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"smry\"\n                fieldlabel=\"Summary\"\n                value={this.state.smry}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.smry.length > 0 &&\n                <RenderTextField\n                  id=\"smry_only\"\n                  fieldlabel=\"Summary only\"\n                  value={this.state.smry_only}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"units\"\n                fieldlabel=\"Units\"\n                value={this.state.units}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.loc.length === 0 &&  \n                <RenderTextField\n                  id=\"area_reduce\"\n                  fieldlabel=\"Area reduction\"\n                  value={this.state.area_reduce}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n\n              {this.state.name.length > 0 &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  className={classes.button}\n                  onMouseDown={this.addElement}\n                >\n                  Add element\n                </Button>\n              }\n              {this.state.name.length > 0 && this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", marginLeft:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.replaceElements}\n                >\n                  Replace elements\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional input\n              </Typography>\n              <RenderTextField\n                id=\"meta\"\n                fieldlabel=\"Meta options\"\n                value={this.state.meta}\n                options={{style: {width:\"95%\"}}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"output\"\n                fieldlabel=\"Output type\"\n                value={this.state.output}\n                options={{disabled: this.state.meta.length && this.state.output === 'json' ? true : false}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateOutput}\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    value={this.state.mapcontrols}\n                    onChange={this.handleMapControlClick}\n                    checked={this.state.mapcontrols}\n                    classes={{\n                      switchBase: classes.switchBase, \n                      checked: classes.checked,\n                      bar: classes.bar,\n                    }}\n                  />\n                }\n                label=\"Map settings\"\n              />\n              {this.state.mapcontrols &&\n                <div>\n                  {this.state.output !== 'image' &&\n                    <RenderTextField\n                      id=\"info_only\"\n                      fieldlabel=\"Info only\"\n                      value={this.state.info_only}\n                      options={{style: {marginLeft:\"2em\"}}}\n                      updateHelpFor={this.updateHelpFor}\n                      updateParam={this.updateImage}\n                    />\n                  }\n                  <RenderTextField\n                    id=\"proj\"\n                    fieldlabel=\"Proj\"\n                    value={this.state.proj}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  <RenderTextField\n                    id=\"overlays\"\n                    fieldlabel=\"Overlays\"\n                    value={this.state.overlays}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  <RenderTextField\n                    id=\"interp\"\n                    fieldlabel=\"Interp\"\n                    value={this.state.interp}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  <RenderTextField\n                    id=\"cmap\"\n                    fieldlabel=\"Cmap\"\n                    value={this.state.cmap}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                  {this.state.height.length === 0 &&\n                    <RenderTextField\n                      id=\"width\"\n                      fieldlabel=\"Width\"\n                      value={this.state.width}\n                      options={{style: {marginLeft:\"2em\"}, required: this.state.mapcontrols}}\n                      updateHelpFor={this.updateHelpFor}\n                      updateParam={this.updateImage}\n                    />\n                  }\n                  {this.state.width.length === 0 &&\n                    <RenderTextField\n                      id=\"height\"\n                      fieldlabel=\"Height\"\n                      value={this.state.height}\n                      options={{style: {marginLeft:\"2em\"}, required: this.state.mapcontrols}}\n                      updateHelpFor={this.updateHelpFor}\n                      updateParam={this.updateImage}\n                    />\n                  }\n                  <RenderTextField\n                    id=\"levels\"\n                    fieldlabel=\"Levels\"\n                    value={this.state.levels}\n                    options={{style: {marginLeft:\"2em\"}}}\n                    updateHelpFor={this.updateHelpFor}\n                    updateParam={this.updateImage}\n                  />\n                </div>\n              }\n            </Grid>\n          </Grid>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(GridDataInput)","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport RenderTextField from './RenderTextField'\nimport DateSelection from './DateSelection'\nimport { buildElement, buildImage } from './Builders.jsx'\n\nexport default class GridData2Input extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      loc: '',\n      state: '',\n      county: '',\n      bbox: '',\n      sdate: '',\n      edate: '',\n      date: '',\n      grid: '',\n      elems: '',\n      elem: '',\n      elem_string: '',\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      area_reduce: '',\n      elem_sdate: '',\n      elem_edate: '',\n      meta: '',\n      output: '',\n      image: '',\n      info_only: '',\n      proj: '',\n      overlays: '',\n      interp: '',\n      cmap: '',\n      width: '',\n      height: '',\n      levels: '',\n      mapcontrols: '',\n      haveInterval: false,\n      includeImageControls: false,\n    }\n    this.datafields = ['loc','state','bbox','sdate','edate','date','grid','elems','meta','output','image']\n    this.imagefields = ['info_only','proj','overlays','interp','cmap','width','height','levels']\n    this.elementKeys = [\"elem\", \"name\", \"base\", \"interval\", \"duration\", \"season_start\", \"reduce\", \"maxmissing\", \"area_reduce\", \"elem_sdate\", \"elem_edate\"]\n  }\n\n  addElement = () => {\n    const newElems = JSON.stringify(buildElement(this.elementKeys, this.state))\n    this.setState({\n      elems: newElems,\n      haveInterval: true,\n    })\n    this.props.updateInputParams({elems: newElems})\n  }\n\n  nestElement = () => {\n    const elem = buildElement(this.elementKeys, this.state)\n    this.setState({\n      elem: elem[0],\n      elem_string: JSON.stringify(elem[0]),\n      name: '',\n      base: '',\n      interval: '',\n      duration: '',\n      season_start: '',\n      reduce: '',\n      maxmissing: '',\n      elem_sdate: '',\n      elem_edate: '',\n    })\n  }\n\n  clearElements = () => {\n    this.setState({\n      elems: '',\n      haveInterval:false,\n    })\n    this.props.updateInputParams({elems: \"\"})\n  }\n\n  replaceElements = () => {\n    this.setState({\n      elems: ''\n    }, this.addElement)\n  }\n\n  updateHelpFor = (helpFor) => {\n    if (helpFor === 'meta') {\n      helpFor = 'grid_meta'\n    } else if (helpFor === 'output') {\n      helpFor = 'grid2_output'\n    } else if (helpFor === 'elems') {\n      helpFor = 'grid2_elems'\n    } else if (helpFor === 'name') {\n      helpFor = 'grid2_name'\n    } else if (helpFor === 'reduce') {\n      helpFor = 'grid2_reduce'\n    } else if (helpFor === 'grid') {\n      helpFor = 'grid2'\n    } else if (helpFor === 'bbox') {\n      helpFor = 'grid2_bbox'\n    } else if (helpFor === 'elem_sdate' || helpFor === 'elem_edate') {\n      helpFor = 'date'\n    }\n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n\n  updateElems = (update) => {\n    if (update.elems.length === 0) {\n      this.setState({haveInterval: false})\n    }\n    this.updateParam(update)\n  }\n\n  updateElemBuild = (update) => {\n    this.setState(update)\n  }\n\n  // images are currently disabled (this.state.includeImageControls: false)\n  updateImage = (update) => {\n    this.setState(update, () => {\n      const image = buildImage(this.imagefields, this.state)\n      this.updateParam({image: image})\n    })\n  }\n // images are currently disabled (this.state.includeImageControls: false)\n  updateOutput = (update) => {\n    if (update.output === 'image') {\n      const image = buildImage(this.imagefields, this.state)\n      this.updateParam({output:\"image\", image:image})\n      this.setState({\n        mapcontrols: true,\n      })\n    } else {\n      this.updateParam(update)\n    }\n  }\n // images are currently disabled (this.state.includeImageControls: false)\n  handleMapControlClick = event => {\n    if (this.state.output !== 'image' || event.target.checked) {\n      const image = event.target.checked ? buildImage(this.imagefields, this.state) : \"\"\n      this.updateParam({image: image})\n      this.setState({\n        mapcontrols: event.target.checked, \n      })\n    }\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.datafields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.datafields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n          if (key === 'elems' && typeof this.props.input_params.elems === 'object') {\n            this.setState({[key]: JSON.stringify(this.props.input_params[key])})\n          } else {\n            this.setState({[key]: this.props.input_params[key]})\n          }\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n\n  render () {\n    const notdly = (this.state.duration.length === 3 && this.state.duration !== 'dly') || \n      (this.state.duration.length > 0 && !isNaN(Number(this.state.duration)) && \n      (this.state.duration !== \"1\" || (this.state.interval !== 'dly' && !(this.state.interval.includes('[') && this.state.interval.length === 7))))\n    return (\n        <div>\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Required input\n              </Typography>\n              <Typography variant=\"caption\">\n                Enter information for one of the grid selection types:\n              </Typography>\n              {this.state.state.length === 0 && \n               this.state.county.length === 0 && \n               this.state.bbox.length === 0 && \n                <RenderTextField\n                  id=\"loc\"\n                  fieldlabel=\"Point location\"\n                  value={this.state.loc}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 && \n               this.state.county.length === 0 && \n               this.state.bbox.length === 0 && \n                <RenderTextField\n                  id=\"state\"\n                  fieldlabel=\"State\"\n                  value={this.state.state}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 &&\n               this.state.state.length === 0 && \n               this.state.bbox.length === 0 && \n               <RenderTextField\n                  id=\"county\"\n                  fieldlabel=\"County\"\n                  value={this.state.county}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.loc.length === 0 && \n               this.state.county.length === 0 && \n               this.state.state.length === 0 && \n                <RenderTextField\n                  id=\"bbox\"\n                  fieldlabel=\"Bounding box\"\n                  value={this.state.bbox}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              <DateSelection\n                sdate={this.state.sdate}\n                edate={this.state.edate}\n                date={this.state.date}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"grid\"\n                fieldlabel=\"Grid id\"\n                value={this.state.grid}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"elems\"\n                fieldlabel=\"Elements\"\n                value={this.state.elems}\n                options={{style: {width:\"90%\"}, multiline: true, placeholder: \"Build using Element setup\"}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElems}\n              />\n              {this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.clearElements}\n                >\n                  Clear elements\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Element setup\n              </Typography>\n              {this.state.elem_string.length === 0 &&\n                <RenderTextField\n                  id=\"name\"\n                  fieldlabel=\"Name\"\n                  value={this.state.name}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {this.state.elem_string.length > 0 &&\n                <RenderTextField\n                  id=\"elem\"\n                  fieldlabel=\"Elem\"\n                  value={this.state.elem_string}\n                  options={{style: {width:\"90%\"}, multiline: true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {this.state.name.includes(\"dd\") &&\n                <RenderTextField\n                  id=\"base\"\n                  fieldlabel=\"Base\"\n                  value={this.state.base}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"interval\"\n                fieldlabel=\"Interval\"\n                value={this.state.interval}\n                options={{disabled:this.state.haveInterval}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"duration\"\n                fieldlabel=\"Duration\"\n                value={this.state.duration}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {this.state.duration === 'std' &&\n                <RenderTextField\n                  id=\"season_start\"\n                  fieldlabel=\"Season start\"\n                  value={this.state.season_start}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"reduce\"\n                  fieldlabel=\"Reduce\"\n                  value={this.state.reduce}\n                  options={{required:true}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              {notdly &&\n                <RenderTextField\n                  id=\"maxmissing\"\n                  fieldlabel=\"Max missing\"\n                  value={this.state.maxmissing}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n              <RenderTextField\n                id=\"elem_sdate\"\n                fieldlabel=\"Start date\"\n                value={this.state.elem_sdate}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              <RenderTextField\n                id=\"elem_edate\"\n                fieldlabel=\"End date\"\n                value={this.state.elem_edate}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateElemBuild}\n              />\n              {(this.state.loc.length === 0 && this.state.county.length === 0) && \n                <RenderTextField\n                  id=\"area_reduce\"\n                  fieldlabel=\"Area reduction\"\n                  value={this.state.area_reduce}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateElemBuild}\n                />\n              }\n\n              {(this.state.name.length > 0 || this.state.elem_string.length > 0) &&\n                <div>\n                  <Button \n                    size=\"small\"\n                    variant=\"outlined\"\n                    style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                    onMouseDown={this.nestElement}\n                  >\n                    Nest\n                  </Button>\n                  <Button \n                    size=\"small\"\n                    variant=\"outlined\"\n                    style={{marginTop:\"0.5em\", marginLeft:\"1em\", backgroundColor:\"lightcyan\"}}\n                    onMouseDown={this.addElement}\n                  >\n                    Add\n                  </Button>\n                </div>\n              }\n              {this.state.name.length > 0 && this.state.elems.includes(\"{\") &&\n                <Button \n                  size=\"small\"\n                  variant=\"outlined\"\n                  style={{marginTop:\"0.5em\", backgroundColor:\"lightcyan\"}}\n                  onMouseDown={this.replaceElements}\n                >\n                  Replace elements\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional input\n              </Typography>\n              <RenderTextField\n                id=\"meta\"\n                fieldlabel=\"Meta options\"\n                value={this.state.meta}\n                options={{style: {width:\"95%\"}}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              <RenderTextField\n                id=\"output\"\n                fieldlabel=\"Output type\"\n                value={this.state.output}\n                options={{disabled: this.state.meta.length && this.state.output === 'json' ? true : false}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n              {this.state.includeImageControls &&\n                <div>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        value={this.state.mapcontrols}\n                        onChange={this.handleMapControlClick}\n                        checked={this.state.mapcontrols}\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Map settings\"\n                  />\n                  {this.state.mapcontrols &&\n                    <div>\n                      {this.state.output !== 'image' &&\n                        <RenderTextField\n                          id=\"info_only\"\n                          fieldlabel=\"Info only\"\n                          value={this.state.info_only}\n                          options={{style: {marginLeft:\"2em\"}}}\n                          updateHelpFor={this.updateHelpFor}\n                          updateParam={this.updateImage}\n                        />\n                      }\n                      <RenderTextField\n                        id=\"proj\"\n                        fieldlabel=\"Proj\"\n                        value={this.state.proj}\n                        options={{style: {marginLeft:\"2em\"}}}\n                        updateHelpFor={this.updateHelpFor}\n                        updateParam={this.updateImage}\n                      />\n                      <RenderTextField\n                        id=\"overlays\"\n                        fieldlabel=\"Overlays\"\n                        value={this.state.overlays}\n                        options={{style: {marginLeft:\"2em\"}}}\n                        updateHelpFor={this.updateHelpFor}\n                        updateParam={this.updateImage}\n                      />\n                      <RenderTextField\n                        id=\"interp\"\n                        fieldlabel=\"Interp\"\n                        value={this.state.interp}\n                        options={{style: {marginLeft:\"2em\"}}}\n                        updateHelpFor={this.updateHelpFor}\n                        updateParam={this.updateImage}\n                      />\n                      <RenderTextField\n                        id=\"cmap\"\n                        fieldlabel=\"Cmap\"\n                        value={this.state.cmap}\n                        options={{style: {marginLeft:\"2em\"}}}\n                        updateHelpFor={this.updateHelpFor}\n                        updateParam={this.updateImage}\n                      />\n                      {this.state.height.length === 0 &&\n                        <RenderTextField\n                          id=\"width\"\n                          fieldlabel=\"Width\"\n                          value={this.state.width}\n                          options={{style: {marginLeft:\"2em\"}, required: this.state.mapcontrols}}\n                          updateHelpFor={this.updateHelpFor}\n                          updateParam={this.updateImage}\n                        />\n                      }\n                      {this.state.width.length === 0 &&\n                        <RenderTextField\n                          id=\"height\"\n                          fieldlabel=\"Height\"\n                          value={this.state.height}\n                          options={{style: {marginLeft:\"2em\"}, required: this.state.mapcontrols}}\n                          updateHelpFor={this.updateHelpFor}\n                          updateParam={this.updateImage}\n                        />\n                      }\n                      <RenderTextField\n                        id=\"levels\"\n                        fieldlabel=\"Levels\"\n                        value={this.state.levels}\n                        options={{style: {marginLeft:\"2em\"}}}\n                        updateHelpFor={this.updateHelpFor}\n                        updateParam={this.updateImage}\n                      />\n                    </div>\n                  }\n                </div>\n              }\n            </Grid>\n          </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\nimport RenderTextField from './RenderTextField'\n//import { buildInputParams } from './Builders.jsx'\n\nexport default class GeneralInput extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      state: '',\n      bbox: '',\n      id: '',\n      meta: '',\n      generalArea: '',\n    }\n    this.paramfields = Object.keys(this.state).filter(item => ![\"generalArea\"].includes(item))\n  }\n\n  updateHelpFor = (helpFor) => {\n    if (helpFor === 'id') {\n      helpFor = 'general_id'\n    } else if (helpFor === 'meta') {\n      helpFor = \"general_meta\"\n    }\n    this.props.updateAppState({helpFor: helpFor})\n  }\n  \n  updateArea = event => {\n    this.setState({\n      generalArea: event.target.value\n    })\n    this.props.updateAppState({generalArea: event.target.value})\n  }\n\n  updateParam = (update) => {\n    this.setState(update)\n    this.props.updateInputParams(update)\n  }\n\n  componentDidMount = () => {\n    // set to default and update in App\n    this.updateArea({target:{value:'state'}})\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state !== nextState) {\n      return true\n    } else if (this.props !== nextProps) {\n      return this.paramfields.some((key) => (nextProps.input_params.hasOwnProperty(key) && this.state[key] !== nextProps.input_params[key]) ||\n            (!nextProps.input_params.hasOwnProperty(key) && this.state[key] !== ''))\n    } else {\n      return false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      this.paramfields.forEach((key) => {\n        if (this.props.input_params.hasOwnProperty(key) && this.state[key] !== this.props.input_params[key]) {\n           this.setState({[key]: this.props.input_params[key]})\n        } else if (!this.props.input_params.hasOwnProperty(key) && this.state[key] !== '') {\n          this.setState({[key]: ''})\n        }\n      })\n    }\n  }\n\n  render () {\n    return (\n        <div>\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Required input\n              </Typography>\n\n              <TextField\n                id=\"general-area\"\n                select\n                label=\"Area\"\n                value={this.state.generalArea}\n                onChange={this.updateArea}\n                SelectProps={{ style: {\"fontSize\":\"90%\"} }}\n                margin=\"dense\"\n                variant=\"outlined\"\n              >\n                <MenuItem style={{fontSize:\"90%\"}} value={'state'}>state</MenuItem>\n                <MenuItem style={{fontSize:\"90%\"}} value={'county'}>county</MenuItem>\n                <MenuItem style={{fontSize:\"90%\"}} value={'climdiv'}>climdiv</MenuItem>\n                <MenuItem style={{fontSize:\"90%\"}} value={'cwa'}>cwa</MenuItem>\n                <MenuItem style={{fontSize:\"90%\"}} value={'basin'}>basin</MenuItem>\n              </TextField>\n\n              <Typography variant=\"caption\">\n                Enter one of the following:\n              </Typography>\n              {this.state.id.length === 0 && this.state.bbox.length === 0 &&\n                <RenderTextField\n                  id=\"state\"\n                  fieldlabel=\"State\"\n                  value={this.state.state}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.state.length === 0 && this.state.bbox.length === 0 &&\n                <RenderTextField\n                  id=\"id\"\n                  fieldlabel=\"ID\"\n                  value={this.state.id}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n              {this.state.state.length === 0 && this.state.id.length === 0 &&\n                <RenderTextField\n                  id=\"bbox\"\n                  fieldlabel=\"Bounding box\"\n                  value={this.state.bbox}\n                  options={{}}\n                  updateHelpFor={this.updateHelpFor}\n                  updateParam={this.updateParam}\n                />\n              }\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography variant=\"h6\">\n                Optional input\n              </Typography>\n              <RenderTextField\n                id=\"meta\"\n                fieldlabel=\"Meta options\"\n                value={this.state.meta}\n                options={{}}\n                updateHelpFor={this.updateHelpFor}\n                updateParam={this.updateParam}\n              />\n            </Grid>\n          </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = {\n   // ToggleButton\n   root: {\n    background: \"white\",\n    color: \"darkblue\",\n    textTransform: \"none\",\n    borderRight: \"1pt solid lightgray\"\n  },\n  selected: {\n    background: \"blue !important\",\n    color: \"white !important\"\n  },\n  // Paper\n  paperRoot: {\n    margin: \"1em 0\",\n  }\n}\n\nconst buttonLabels = ['JSON', 'Basic format', 'Full format']\n\nclass ResultsButtons extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedButton: \"JSON\",\n    }\n  }\n\n  handleChange = (event) => {\n    const value = event.currentTarget.value\n    this.setState({ \n      selectedButton: value\n    })\n    this.props.handleFormat(value)\n  }\n\n  componentDidMount() {\n    this.setState({selectedButton: this.props.selectedButton})\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.setState({\n        selectedButton: this.props.selectedButton\n      })\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    return (\n      <Paper elevation={0} classes={{root:classes.paperRoot}}>\n        <Grid container spacing={16}>\n          <Grid item>\n            <Typography variant=\"h6\">\n              Results:\n            </Typography>\n          </Grid>\n          <Grid item>\n            {this.props.showButtons &&\n              <ToggleButtonGroup value={this.state.selectedButton} exclusive onChange={this.handleChange}>\n                  {buttonLabels.map((item) => (\n                    <ToggleButton \n                      key={item} \n                      value={item} \n                      classes={{root:classes.root, selected:classes.selected}}\n                    >\n                      {item}\n                    </ToggleButton>                  \n                  ))}\n              </ToggleButtonGroup>\n            }\n          </Grid>\n        </Grid>\n      </Paper>\n    )\n  }\n}\n\nexport default withStyles(styles)(ResultsButtons)","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Paper from '@material-ui/core/Paper'\nimport ResultsButtons from './ResultsButtons'\n\nexport default class Output extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      input_params_string: \"\",\n      results: \"\",\n      results_json: {},\n      format: \"normal\",\n      isCsv: false,\n      selectedButton: \"JSON\",\n      dataimage: \"\"\n    }\n  }\n\n  // user changed parameter string\n  handleParamsChange = event => {\n    this.setState({\n      input_params_string: event.target.value,\n      results: '',\n    })\n    this.props.changedInput(event.target.value)\n  }  \n\n  // submit parameter string to server\n  handleSubmit = () => {\n    this.setState({\n      results: \"Submitting request ...\", \n      isCsv: this.props.input_params.output === 'csv', \n      dataimage: \"\"\n    })\n    const url = this.props.acisServer + this.props.generalArea\n    if (this.props.input_params.output !== \"image\") {\n      fetch(url, {\n        method: 'POST',\n        body: this.state.input_params_string,\n        headers: {'Content-Type': 'application/json'}\n      })\n        .then(response => response.ok && !this.state.isCsv ? response.json() : response.text())\n        .then(data => this.setState({\n          results: typeof data === 'object' ? JSON.stringify(data,null,0) : data,\n          results_json: data,\n          format: typeof data === 'string' ? \"pre\" : \"normal\",\n          selectedButton: typeof data === 'object' ? \"JSON\" : \"\"\n        }))\n        .catch(error => this.setState({\n          results: 'Error: ' + error.message\n        }))\n    } else {\n      this.setState({\n        results: \"image\",\n        results_json: '',\n        format: 'normal',\n        dataimage: url + '?params=' + this.state.input_params_string, \n        selectedButton: ''\n       })\n    }\n  }\n\n  basicFormat = (results_json) => {\n    let results_string = \"\"\n    let dataimage = \"\"\n    Object.keys(results_json).forEach(key => {\n      if (key === 'data' && results_json[key].includes(\"image/png;base64\")) {\n        dataimage =results_json[key]\n      } else if (Array.isArray(results_json[key])) {\n        results_string += key + \":\\n\"\n        results_json[key].forEach(item => {\n          results_string += \" \" + JSON.stringify(item) + \"\\n\"\n        }) \n      } else {\n        results_string += key + \":\\n\"\n        results_string += \" \" + JSON.stringify(results_json[key]) + \"\\n\"\n      }\n    })\n    return {results_string: results_string, dataimage: dataimage}\n  }\n\n  // user clicked one of the format buttons\n  handleFormat = (results_button) => {\n    this.setState({\n      selectedButton: results_button\n    })\n    if (results_button === \"Basic format\") {\n      const basicFormatResults = this.basicFormat(this.state.results_json)\n      this.setState({\n        results: basicFormatResults.results_string,\n        format:\"pre-wrap\", \n        dataimage: basicFormatResults.dataimage.length > 0 ? basicFormatResults.dataimage : '',\n      })\n    } else if (results_button === \"JSON\") {\n      this.setState({\n        results: JSON.stringify(this.state.results_json,null,0), \n        format:\"normal\", \n        dataimage: \"\",\n      })\n    } else if (results_button === \"Full format\") {\n      const hasImage = this.state.results_json.hasOwnProperty(\"data\") && this.state.results_json.data.includes(\"image/png;base64\")\n      this.setState({\n        results: JSON.stringify(this.state.results_json,null,2), \n        format: \"pre-wrap\", \n        dataimage: hasImage ? this.state.results_json.data : ''\n      })\n    } else {\n      console.log('Error: unknown format button')\n    }\n  }\n\n  // JSON parameters object needs to be stringified for display in text box\n  componentDidMount() {\n    if (Object.keys(this.props.input_params).length > 0) {\n      if (this.props.input_params.hasOwnProperty(\"elems\") && this.props.input_params.elems.includes(\"{\")) {\n        this.props.input_params.elems = JSON.parse(this.props.input_params.elems)\n      }\n      this.setState({input_params_string: JSON.stringify(this.props.input_params)})\n    }\n  }\n\n  // JSON parameters object needs to be stringified for display in text box\n  componentDidUpdate(prevProps) {\n    if (this.props.input_params !== prevProps.input_params) {\n      if (this.props.input_params.hasOwnProperty(\"elems\") && this.props.input_params.elems.includes(\"{\")) {\n        this.props.input_params.elems = JSON.parse(this.props.input_params.elems)\n      }\n      // empty bbox has to be converted from string to empty array in parameters string\n      if (this.props.input_params.hasOwnProperty('bbox') && this.props.input_params.bbox === \"[]\") {\n        this.props.input_params.bbox = []\n      }\n      this.setState({input_params_string: JSON.stringify(this.props.input_params)})\n      if (Object.keys(this.props.input_params).length === 0) {\n        this.setState({results:''})\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Paper elevation={0} style={{marginTop:\"1em\"}}>\n        <Typography variant=\"h6\">\n          Parameters (JSON)\n          {this.state.input_params_string.length > 2 &&\n            <Button \n              variant=\"contained\"\n              size=\"small\"\n              style={{marginLeft:\"3em\", backgroundColor:\"limegreen\"}}\n              onMouseDown={this.handleSubmit}\n            >\n              Submit\n            </Button>\n          }\n        </Typography>\n        <TextField\n          id=\"params\"\n          value={this.state.input_params_string}\n          margin=\"dense\"\n          variant=\"outlined\"\n          multiline={true}\n          fullWidth={true}\n          inputProps={{style:{fontFamily:\"Arial, Helvetica, sans-serif\", fontSize:\"95%\"}}}\n          onChange={this.handleParamsChange}\n        />\n\n        {this.state.results.length > 0 && \n          <div>\n            {this.state.results !== \"image\" &&\n              <ResultsButtons\n                handleFormat={this.handleFormat}\n                showButtons={!this.state.isCsv}\n                selectedButton={this.state.selectedButton}\n              />\n            }\n            <Paper \n              elevation={0} \n              style={{\n                border:\"1px solid lightgray\", \n                margin:\"0\", \n                padding:\"5px\", \n                fontFamily:\"Arial, Helvetica, sans-serif\", \n                fontSize:\"95%\"\n              }}\n            >\n              {this.state.dataimage.length > 0 &&\n                <div>\n                  <pre>\n                    {this.state.dataimage.includes(\"http\") ? \"Returned image\" : \"data (as image)\"}\n                  </pre>\n                  <img src={this.state.dataimage} alt=\"map\" />\n                </div>\n              }\n              {!this.state.dataimage.includes(\"http\") &&\n                <pre style={{whiteSpace:this.state.format, wordBreak:\"break-word\"}}>\n                  {this.state.results}\n                </pre>\n              }\n            </Paper>\n          </div>\n        }\n      </Paper>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nconst tabledata = {\n  nohelp: {\n    heads: [],\n    contents: [[]],\n    foots: \"No help available for this item\"\n  },\n  sids: {\n    heads: [\"Type\", \"Code \", \"Description\", \"Example\"],\n\t  contents: [\n      [\"WBAN\", \"1\", \"5-digit WBAN id\", \"14742\"],\n      [\"COOP\", \"2\", \"6-digit COOP id\", \"304174\"],\n      [\"FAA\", \"3\", \"3-character FAA id\", \"LAX\"],\n      [\"WMO\", \"4\", \"5-digit WMO id\", \"72223\"],\n      [\"ICAO\", \"5\", \"4-character ICAO id\", \"KGRR\"],\n      [\"GHCN\", \"6\", \"11-character GHCN id\", \"USW00003927\"],\n      [\"NWSLI\", \"7\", \"5-character NWSLI\", \"AURN6\"],\n      [\"THRDX\", \"9\", \"6-character ThreadEx id\", \"HSVthr\"],\n      [\"COCORAHS\", \"10\", \"8-character CoCoRaHS id\", \"NYTM0004\"],\n      [\"SCAN\", \"17\", \"SCAN\", \"15\"],\n      [\"TSCAN\", \"19\", \"TSCAN\", \"3001\"],\n    ],\n    foots: \"To avoid ambiguity, station id should be specified by station id and id code (or type) separated by a space (e.g. 'KGRR 5')\"\n  },\n  hrly_sid: {\n    heads: [\"Type\", \"Code \", \"Description\", \"Example\"],\n\t  contents: [\n      [\"WBAN\", \"1\", \"5-digit WBAN id\", \"14742\"],\n      [\"COOP\", \"2\", \"6-digit COOP id\", \"304174\"],\n      [\"FAA\", \"3\", \"3-character FAA id\", \"LAX\"],\n      [\"WMO\", \"4\", \"5-digit WMO id\", \"72223\"],\n      [\"ICAO\", \"5\", \"4-character ICAO id\", \"KGRR\"],\n      [\"GHCN\", \"6\", \"11-character GHCN id\", \"USW00003927\"],\n      [\"NWSLI\", \"7\", \"5-character NWSLI\", \"AURN6\"],\n      [\"DEOS\", \"11\", \"Delaware DEOS id\", \"DAGF\"],\n      [\"MIWX\", \"13\", \"Michigan Enviroweather\", \"KZO\"],\n      [\"SCAN\", \"17\", \"SCAN\", \"2011\"],\n      [\"TSCAN\", \"19\", \"TSCAN\", \"3052\"],\n      [\"OARDC\", \"22\", \"Ohio OARDC id\", \"ASHT\"],\n      [\"NEWA\", \"26\", \"NEWA id\", \"GEN\"],\n      [\"CU_LOG\", \"27\", \"Cornell WxNet id\", \"CU_GFR\"],\n      [\"NJWX\", \"28\", \"NJ WxNet id\", \"1101\"],\n    ],\n    foots: \"To avoid ambiguity, station id should be specified by station id and id type (or code) separated by a space (e.g. 'KGRR icao')\"\n  },\n  county: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more county FIPS codes \", \"09001\"],\n    ]\n  },\n  climdiv: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more climate division (2-digits or combined with state) \", \"10 or NY10\"],\n    ]\n  },\n  cwa: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more NWS County Warning Areas\", \"BOI\"],\n    ]\n  },\n  basin: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"One or more drainage basins (8-digit HUC) \", \"01080205\"],\n    ]\n  },\n  state: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [ \"One or more 2-letter state postal abbreviations\", \"AK\"],\n    ]\n  },\n  bbox: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"Bounding box in decimal degrees (W,S,E,N) \", \"-90, 40, -88, 41\"]\n    ]\n  },\n  grid2_bbox: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [\n      [\"Bounding box in decimal degrees (W,S,E,N) \", \"-90, 40, -88, 41\"]\n    ],\n    foots: \"An empty bounding box, [], will return the entire grid array\",\n  },\n  meta: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"name\",\"Station name *\"],\n      [\"state\",\"2-letter state abbrev *\"],\n      [\"sids\",\"Array of station ids/types *\"],\n      [\"sid_dates\",\"Date range for each sid\"],\n      [\"ll\",\"Longitude and latitude *\"],\n      [\"elev\",\"Elevation *\"],\n      [\"uid\",\"ACIS id *\"],\n      [\"county\",\"5-digit FIPS id\"],\n      [\"climdiv\",\"4-character climate division id\"],\n      [\"valid_daterange\",\"Valid date range (by element) - must specify Elements\"],\n      [\"tzo\",\"Time zone offset from GMT\"],\n      [\"network\",\"Station networks\"],\n    ],\n  foots: \"Values with an asterisk (*) indicate defaults used if 'meta' is not explicityly specified.\"\n  },\n  elems: {\n    heads: [\"Abbreviation\",\"Var Major\",\"Description\"],\n    contents: [\n      [\"maxt\",\"1\",\"Maximum temperature (&deg;F)\"],\n      [\"mint\",\"2\",\"Minimum temperature (&deg;F)\"],\n      [\"avgt\",\"43\",\"Average temperature (&deg;F)\"],\n      [\"obst\",\"3\",\"Obs time temperature (&deg;F)\"],\n      [\"pcpn\",\"4\",\"Precipitation (inches)\"],\n      [\"snow\",\"10\",\"Snowfall (inches)\"],\n      [\"snwd\",\"11\",\"Snow Depth (inches)\"],\n      [\"(not available)\",\"7\",\"Pan evaporation (inches)\"],\n      [\"cdd\",\"\",\"Cooling degree days (default base 65)\"],\n      [\"hdd\",\"45\",\"Degree days below base (default base 65)\"],\n      [\"gdd\",\"44\",\"Degree days above base (default base 50)\"],\n    ],\n  },\n  vX: {\n    heads: [\"Variable\", \"vX\", \"Networks found\"],\n    contents: [\n      [\"Precipitation\", \"5\", \"newa, icao, cu_log, njwx, miwx, oardc, scan, tscan\"],\n      [\"Temperature\", \"23\", \"newa, icao, njwx, oardc, deos, scan, tscan\"],\n      [\"Average temperature\", \"126\", \"newa, cu_log, njwx, miwx\"],\n      [\"Max temperature\", \"124\", \"newa, cu_log, njwx, scan, tscan\"],\n      [\"Min temperature\", \"125\", \"newa, cu_log, njwx, scan, tscan\"],\n      [\"Relative humidity\", \"24\", \"newa, icao, njwx, oardc, cu_log, deos, scan, tscan\"],\n      [\"Average relative humidity\", \"143\", \"newa, njwx, miwx\"],\n      [\"Max relative humidity\", \"141\", \"newa, njwx\"],\n      [\"Min relative humidity\", \"143\", \"newa, njwx\"],\n      [\"Dewpoint temperature\", \"22\", \"icao, newa, deos\"],\n      [\"Average dewpoint temperature\", \"140\", \"njwx\"],\n      [\"Max dewpoint temperature\", \"138\", \"njwx\"],\n      [\"Min dewpoint temperature\", \"139\", \"njwx\"],\n      [\"Wet-bulb temperature\", \"25\", \"icao\"],\n      [\"Wind speed\", \"28\", \"icao, njwx, oardc, deos\"],\n      [\"Average wind speed\", \"128\", \"newa, njwx, cu_log, scan, tscan\"],\n      [\"Resultant wind speed\", \"129\", \"cu_log\"],\n      [\"Max wind speed\", \"42\", \"icao, cu_log, njwx, scan, tscan\"],\n      [\"Wind gust\", \"85\", \"icao\"],\n      [\"Wind direction\", \"27\", \"icao, njwx, oardc, deos\"],\n      [\"Average wind direction\", \"130\", \"newa, cu_log, scan, tscan\"],\n      [\"Peak wind direction\", \"41\", \"njwx, icao\"],\n      [\"Total sky cover\", \"33\", \"icao\"],\n      [\"Solar radiation total\", \"132\", \"newa, cu_log, miwx, oardc, deos\"],\n      [\"Solar radiation rate\", \"119\", \"njwx\"],\n      [\"Average solar radiation rate\", \"149\", \"njwx, scan, tscan\"],\n      [\"Max solar radiation rate\", \"147\", \"njwx\"],\n      [\"Min solar radiation rate\", \"148\", \"njwx\"],\n      [\"Leaf wetness\", \"118\", \"newa, cu_log, njwx, miwx, oardc, deos\"],\n      [\"Soil temperature\", \"120\", \"newa, oardc, deos, scan, tscan\"],\n      [\"Average soil temperature\", \"123\", \"cu_log\"],\n      [\"Max soil temperature\", \"121\", \"newa, deos, oardc, cu_log\"],\n      [\"Min soil temperature\", \"122\", \"newa, deos, oardc, cu_log\"],\n      [\"Soil moisture\", \"104\", \"deos, scan, tscan\"],\n      [\"Soil tension\", \"65\", \"newa\"],\n      [\"Station pressure\", \"18\", \"icao, newa, njwx, deos\"],\n      [\"Average station pressure\", \"146\", \"newa, njwx\"],\n      [\"Max station pressure\", \"144\", \"newa, njwx\"],\n      [\"Min station pressure\", \"145\", \"newa, njwx\"],\n      [\"Sea level pressure\", \"19\", \"icao\"],\n      [\"Altimeter setting\", \"17\", \"icao\"],\n      [\"Visibility\", \"26\", \"icao\"],\n      [\"Ceiling height\", \"35\", \"icao\"],\n      [\"3-hour precipitation\", \"36\", \"icao\"],\n      [\"6-hour precipitation\", \"37\", \"icao\"],\n      [\"6-hour max temperature\", \"39\", \"icao\"],\n      [\"6-hour min temperature\", \"40\", \"icao\"],\n    ],\n  },\n  vN: {\n    contents: [\n      [\"Some elements require a var minor (vN). A list of vN can be found at https://github.com/rcc-acis/metadata/blob/master/data/global_variable_maj_min.load.\"],\n    ],\n  },\n  hrly_elems: {\n    contents: [\n      [\"Elements are specified by var major (vX) with an optional var minor (vN).\"],\n    ],\n  },\n  base: {\n    heads: [],\n    contents: [[\"Degree day base temperature in degrees F.\"]],\n  },\n  output: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"json\",\"JavaScript Object Notation (default)\"],\n      [\"csv\",\"Comma-Separated Values (unavailable for some requests, such as those including 'add', 'smry' or 'meta' and MultiStnData requests for a day range\"],\n    ],\n  },\n  grid_output: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"json\",\"JavaScript Object Notation (default)\"],\n      [\"image\",\"png image only\"]\n    ],\n  },\n  grid2_output: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"json\",\"JavaScript Object Notation (default)\"],\n      [\"png\",\"png image (display not implemented in this tool)\"],\n      [\"geotiff\",\"geotiff output (display not implemented in this tool)\"],\n    ],\n  },\n  date: {\n    heads: [\"Options\",\"Example\"],\n    contents: [\n      [\"yyyy-mm-dd\",\"2010-01-31\"],\n      [\"yyyymmdd\",\"20100131\"],\n      [\"por (period of record)\",\"por\"],\n    ],\n    foots: \"Can also use only yyyy or yyyymm when appropriate.\",\n  },\n  reduce_add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"mcnt\", \"Count of missing values in the reduction period\"],\n      [\"date\", \"Date of occurrence (for max, min, run)\"],\n      [\"value\", \"Value on date of occurrence (for first and last)\"],\n      [\"rmcnt\", \"Count of missing values in the run period (for run only)\"],\n    ],\n  },\n  smry_add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"mcnt\", \"Count of missing values in the reduction period\"],\n      [\"date\", \"Date of occurrence (for max, min, run)\"],\n      [\"value\", \"Value on date of occurrence (for first and last)\"],\n      [\"rmcnt\", \"Count of missing values in the run period (for run only)\"],\n    ],\n  },\n  smry_only: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"1\", \"Return only the summary value (no intermediate results). If used, must be specified for each element.\"],\n    ]\n  },\n  reduce_n: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Used with run reduction to specify max number of results returned per interval.\"],\n    ],\n  },\n  smry_n: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Count of number of values to be returned. Maximum value is 100. Can only be used with smry reduce of 'max', 'min' or 'run'.\"],\n    ],\n  },\n  reduce_run_maxmissing: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Used with run reduction to specify max number of missing days to allow before terminating run.\"],\n    ],\n  },\n  smry_run_maxmissing: {\n    heads: [\"Value\", \"Description\"],\n    contents: [ \n      [\"integer\", \"Used with run reduction to specify max number of missing days to allow before terminating run.\"],\n    ],\n  },\n  add: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"f\", \"Flags\"],\n      [\"t\", \"Time of observation\"],\n      [\"i\", \"Station ID associated with data\"],\n      [\"v\", \"Var minor associated with data\"],\n      [\"n\", \"Network associated with data\"],\n      [\"s\", \"Source flag (for GHCN-Daily data)\"],\n    ],\n    foots: \"Enter one or more codes separated by commas.\"\n  },\n  normal: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"1\", \"Return default normals (1991-2020)\"],\n      [\"departure\", \"Return default departure from normal (1991-2020)\"],\n      [\"91\", \"Return 1991-2020 normals\"],\n      [\"departure91\", \"Return departure from 1991-2020 normal\"],\n      [\"81\", \"Return 1981-2010 normals\"],\n      [\"departure81\", \"Return departure from 1981-2010 normal\"],\n    ],\n    foots: \"1991-2020 added as default effective 2021-05-04.\",\n  },\n  interval: {\n    heads: [\"Code\", \"Description\"],\n    contents: [\n      [\"dly\", \"results consist of a daily value for each day; shortcut for [0,0,1].\"],\n      [\"mly\", \"results consist of a monthly value for each calendar month; shortcut for [0,1]\"],\n      [\"yly\", \"results consist of an annual value for each calendar year; shortcut for [1]\"],\n      [\"array\", \"An array containing a single positive integer and zeros. The \" + \n        \"array can have a length of either 1, 2 or 3, with the length indicating the temporal \" + \n  \t\t\t\"precision of the returned values. A length of 1 indicates annual precision, 2 monthly \" + \n  \t\t\t\"precision and 3 daily precision. The position of non-zero integers within the array signifies \" + \n  \t\t\t\"the frequency of the values returned. The strings dly, mly and yly are just shortcuts \" + \n        \"for commonly used intervals. \" + \n        \"Using an array facilitates a number of more complex requests. The \" + \n        \"following examples demonstrate some of these capabilities:\"],\n      [\"subhead:Example\", \"subhead:Explanation\"],\n      [\"[1,0,0]\", \"Return a daily value once per year. For instance, daily rainfall for June 20  in each of a series of years.\"],\n      [\"[0,1,0]\", \"Return a daily value once per month. For instance, max temperature on the 15th of each month for a series of years.\"],\n      [\"[0,0,7]\", \"Return a daily value every seven days.\"],\n      [\"[0,3,0]\", \"Return a daily value every third month.\"],\n      [\"[0,3]\", \"Return a monthly value every third month.\"],\n      [\"[30]\", \"Return an annual value every thirty years.\"],\n    ],\n    foots: \"Note: 'interval' must be the same for all objects in an 'elems' array.\",\n  },\n  duration: {\n    heads: [\"Code\", \"Description\", \"Valid with intervals or list representations\"],\n    contents: [\n      [\"integer\", \"Length of period to be analyzed in units specified by length of 'interval'\", \"dly, mly, yly, [x,x,x], [x,x], [x]\"],\n      [\"mtd\", \"Month-to-date; must specify 'reduce'\", \"dly, [x,x,x]\"],\n      [\"ytd\", \"Year-to-date; must specify 'reduce'\", \"dly, mly, [x,x,x], [x,x]\"],\n      [\"std\", \"Season-to-date; must specify 'reduce' and 'season_start'\", \"dly, mly, [x,x,x], [x,x]\"],\n      [\"dly\", \"Daily (NOT RECOMMENDED, use 1 instead)\", \"dly\"],\n      [\"mly\", \"Monthly (NOT RECOMMENDED, use 1 instead)); must specify 'reduce'\", \"mly\"],\n      [\"yly\", \"Yearly (NOT RECOMMENDED, use 1 instead); must specify 'reduce'\", \"yly\"],\n    ],\n  },\n  reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the period\"],\n      [\"min\", \"Minimum value for the period\"],\n      [\"sum\", \"Sum of the values for the period\"],\n      [\"mean\", \"Average of the values for the period\"],\n      [\"list\", \"Array of daily values for the period\"],\n      [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"],\n      [\"pct_xx_yyy\", \"Percent (integer) of daily values passing threshold\"],\n      [\"fct_xx_yyy\", \"Fraction (float) of daily values passing threshold\"],\n      [\"first_xx_yyy\", \"First occurrence of daily value passing threshold\"],\n      [\"last_xx_yyy\", \"Last occurrence of daily value passing threshold\"],\n      [\"run_xx_yyy\", \"Consecutive daily values passing threshold\"],\n      [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"],\n    ],\n  },\n  grid_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the period\"],\n      [\"min\", \"Minimum value for the period\"],\n      [\"sum\", \"Sum of the values for the period\"],\n      [\"mean\", \"Average of the values for the period\"],\n      [\"stddev\", \"Standard deviation of the values\"],\n      [\"list\", \"Array of daily values for the period\"],\n      [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"],\n      [\"pct_xx_yyy\", \"Percent (integer) of daily values passing threshold\"],\n      [\"fct_xx_yyy\", \"Fraction (float) of daily values passing threshold\"],\n     [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"],\n    ],\n  },\n  grid2_reduce: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the period\"],\n      [\"min\", \"Minimum value for the period\"],\n      [\"sum\", \"Sum of the values for the period\"],\n      [\"mean\", \"Average of the values for the period\"],\n      [\"cnt_xx_yyy\", \"Count of number of daily values passing threshold\"],\n      [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, pct_eq_100\"],\n    ],\n    foots: \"Only certain cnt thresholds are available for LOCA pre-computed models (i.e. allmax, allmin, allmedian, wmean\",\n  },\n  smry: {\n    heads: [\"Code\", \"Description\"],\n    contents: [ \n      [\"max\", \"Maximum value for the column\"],\n      [\"min\", \"Minimum value for the column\"],\n      [\"sum\", \"Sum of values in the column\"],\n      [\"mean\", \"Average of values in the column\"],\n      [\"cnt_xx_yyy\", \"Count of number of values in column passing threshold\"],\n      [\"pct_xx_yyy\", \"Percent (integer) of values in column passing threshold\"],\n      [\"fct_xx_yyy\", \"Fraction (float) of values in columnn passing threshold\"],\n      [\"run_xx_yyy\", \"Consecutive column values passing threshold\"],\n      [\"\", \"xx is operator (ge, gt, le, lt, eq, ne); yyy is threshold (integer or floating point); Examples: cnt_ge_0.01, run_le_32\"],\n    ],\n    foots: \"More than one smry code can be specified by an array of strings or an array of objects.\",\n  },\n  season_start: {\n    heads: [\"Description\", \"Examples\"],\n    contents: [ \n      [\"For interval of dly or [x,x,x] - month and day\", \"[12,21] or 06-20\"],\n      [\"For interval of mly or [x,x] - just month\", \"3\"],\n    ],\n  },\n  maxmissing: {\n    heads: [\"Description \"],\n    contents: [ \n      [\"Integer value indicating the number missing daily values to allow before a reduction is reported as missing.\"],\n    ],\n  },\n  prec: {\n    heads: [\"Description \"],\n    contents: [ \n      [\"Integer value indicating the number of decimal places of precision displayed in the results for this element. Not available for some elements.\"],\n    ],\n  },\n  groupby: {\n    heads: [\"Code\", \"Description\"],\n    contents: [\n      [\"year\", \"Results will be returned with all data for a year in a list.\"],\n      [\"year, mm-dd, mm-dd\", \"Results will be returned with all daily data between specified start date and end date in a list identified by ending year.\"],\n      [\"year, mm, mm\", \"Monthly summarized data will be returned for all months between specified start month and end month in a list identified by ending year.\"],\n    ],\n  },\n  loc: {\n    heads: [\"Description\",\"Example\"],\n    contents: [\n\t    [\"Point location defined in decimal degrees (longitude, latitude); negative values for South latitude and West longitude\",\"-77.7, 41.8\"],\n    ],\n  },\n  grid: {\n    heads: [\"ID\",\"Description\",\"Area\",\"Period\"],\n    contents: [\n      [\" 1\",\"NRCC Interpolated\",\"Continental US\",\"1950-present\"],\n      [\" 2\",\"Multi-Sensor Precipitation Estimates\",\"Continental US\",\"2006-present\"],\n      [\" 3\",\"NRCC Hi-Res\",\"East of Rockies\",\"Temp: 1998-present; Pcpn: 2002-present\"],\n      [\" 21\",\"PRISM (https://www.prism.oregonstate.edu)\",\"Continental US\",\"Daily: 1981-present; Monthly/Yearly: 1895-present\"],\n      [\" 4-16\",\"NARCCAP (to be deprecated) *\",\"Continental US\",\"1970-2000, 2040-2070\"],\n      [\"4\", \"CRCM + NCEP (historical only)\"],\n      [\"5\", \"CRCM + CCSM\"],\n      [\"6\", \"CRCM + CGCM3\"],\n      [\"9\", \"MM5I + NCEP (historical only)\"],\n      [\"10\", \"MM5I + CCSM\"],\n      [\"11\", \"RCM3 + NCEP (historical only)\"],\n      [\"12\", \"RCM3 + CGCM3\"],\n      [\"13\", \"RCM3 + GFDL\"],\n      [\"14\", \"WRFG + NCEP (historical only)\"],\n      [\"15\", \"WRFG + CCSM\"],\n      [\"16\", \"WRFG + CGCM3\"],\n    ],\n    foots: \"* Be aware of idiosyncrasies before using NARCCAP grid sets.\",\n  },\n  grid2: {\n    heads: [\"Name\",\"Description\",\"Area\",\"Period\"],\n    contents: [\n      [\"nrcc-nn\",\"NRCC Interpolated\",\"Continental US\",\"1950-present\"],\n      [\"nrcc-model\",\"NRCC Hi-Res\",\"East of Rockies\",\"Temp: 1998-present; Pcpn: 2002-present\"],\n      [\"ncei-norm:91-20\",\"NCEI Gridded Monthly 1991-2020 Normals\",\"Continental US\",\"1991\"],\n      [\"prism\",\"PRISM (https://www.prism.oregonstate.edu)\",\"Continental US\",\"Daily: 1981-present; Monthly/Yearly: 1895-present\"],\n      [\"livneh\",\"Livneh (https://www.esrl.noaa.gov/psd/\",\"Continental US\",\"1950-2012\"],\n      [\"loca\",\"LOCA downscaled data (http://loca.ucsd.edu/)\",\"Continental US\",\"1950-2099\"],\n      [\"snap\",\"SNAP (https://www.snap.uaf.edu)\",\"Alaska\",\"1970-2099\"],\n      [\" \"],\n      [\"subhead:Model-LOCA precomputed:\",\"subhead:Description\",\"\",\"\"],\n      [\"allmax\", \"Highest of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"allmin\", \"Lowest of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"allmedian\", \"Median of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"wmean\", \"Weighted mean of 32 LOCA models (monthly only)\",\"\",\"\"],\n      [\"subhead:Model-LOCA individual:\"],\n      [\"ACCESS1-0, ACCESS1-3, CCSM4, CESM1-BGC, CESM1-CAM5, CMCC-CM, CMCC-CMS, CNRM-CM5, CSIRO-Mk3-6-0, \" +\n       \"CanESM2, EC-EARTH, FGOALS-g2, GFDL-CM3, GFDL-ESM2G, GFDL-ESM2M,, GISS-E2-H, GISS-E2-R, HadGEM2-AO, \" +\n       \"HadGEM2-CC, HadGEM2-ES, IPSL-CM5A-LR, IPSL-CM5A-MR,, MIROC-ESM, MIROC-ESM-CHEM, MIROC5, MPI-ESM-LR, \" +\n       \"MPI-ESM-MR, MRI-CGCM3, NorESM1-M, bcc-csm1-1, bcc-csm1-1-m, inmcm4\"],\n      [\"subhead:Model-SNAP individual:\"],\n      [\"GFDL-CM3, NCAR-CCSM4\"],\n      [\" \"],\n      [\"subhead:Scenarios\",\"subhead:Description\",\"subhead:Valid for\",\"\"],\n      [\"rcp85\",\"High greenhouse gas and aerosol emissions scenario\",\"loca and snap\",\"\"],\n      [\"rcp45\",\"Medium greenhouse gas and aerosol emissions scenario\",\"loca only\",\"\"],\n    ],\n    foots: \"LOCA and SNAP datasets are specified in the form 'name:model:scenario', e.g. 'loca:wmean:rcp85'.\",\n  },\n  units: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"degreeC\",\"Temperatures degrees C\"],\n      [\"degreeF\",\"Temperatures degrees F\"],\n      [\"degreeK\",\"Temperatures degrees K\"],\n      [\"inch\",\"Precipitation inches\"],\n      [\"mm\",\"Precipitation millimeters\"],\n    ],\n  },\n\tarea_reduce: {\n\t\theads: [\"Code\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"aaaa_max\",\"Maximum grid value in area\"],\n\t\t\t[\"aaaa_min\",\"Minimum grid value in area\"],\n\t\t\t[\"aaaa_mean\",\"Average of all grid values in the area\"],\n\t\t],\n\t\tfoots: \"aaaa is area type ('county' ,'climdiv', 'basin', 'state'); Example: county_max\",\n\t},\t\n\tgrid_meta: {\n\t\theads: [\"Code\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"ll\",\"Longitude and latitude of grid points (implementation pending in GridData2)\"],\n\t\t\t[\"elev\",\"Elevation of grid points (implementation pending in GridData2)\"],\n\t\t],\n  },\n  grid_elems: {\n\t\theads: [\"Abbreviation\",\"Var Major\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"maxt\",\"1\",\"Maximum temperature (&deg;F)\"],\n\t\t\t[\"mint\",\"2\",\"Minimum temperature (&deg;F)\"],\n\t\t\t[\"avgt\",\"43\",\"Average temperature (&deg;F)\"],\n\t\t\t[\"pcpn\",\"4\",\"Precipitation (inches)\"],\n\t\t\t[\"cdd\",\"\",\"Cooling degree days (default base 65)\"],\n\t\t\t[\"hdd\",\"45\",\"Degree days below base (default base 65)\"],\n\t\t\t[\"gdd\",\"44\",\"Degree days above base (default base 50)\"],\n\t\t\t[\"cddXX\",\"-\",\"Cooling Degree Days; where XX is base temperature\"],\n\t\t\t[\"hddXX\",\"-\",\"Heating Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t\t[\"subhead:Additional Element Codes for Monthly/Yearly PRISM Data\"],\n\t\t\t[\"mly_maxt\",\"91\",\"Monthly mean maximum temperature (&deg;F)\"],\n\t\t\t[\"mly_mint\",\"92\",\"Monthly mean minimum temperature (&deg;F)\"],\n\t\t\t[\"mly_avgt\",\"99\",\"Monthly mean average temperature (&deg;F)\"],\n\t\t\t[\"mly_pcpn\",\"94\",\"Monthly precipitation sum (inches)\"],\n\t\t\t[\"yly_maxt\",\"95\",\"Yearly mean maximum temperature (&deg;F)\"],\n\t\t\t[\"yly_mint\",\"96\",\"Yearly mean minimum temperature (&deg;F)\"],\n\t\t\t[\"yly_avgt\",\"100\",\"Yearly mean average temperature (&deg;F)\"],\n\t\t\t[\"yly_pcpn\",\"98\",\"Yearly precipitation sum (inches)\"],\n\t\t],\n    foots: \"Degree days can also be specified with the keys 'name' (or 'vX') and 'base'. \" +\n            \"The PRISM mly and yly codes are used to access monthly/yearly PRISM gridded datasets directly, not derived monthly/yearly values reduced from daily gridded data.\",\n  },\n  grid2_name: {\n\t\theads: [\"Abbreviation\",\"Var Major\",\"Description\"],\n\t\tcontents: [\n\t\t\t[\"maxt\",\"1\",\"Maximum temperature (&deg;F)\"],\n\t\t\t[\"mint\",\"2\",\"Minimum temperature (&deg;F)\"],\n\t\t\t[\"avgt\",\"43\",\"Average temperature (&deg;F)\"],\n\t\t\t[\"pcpn\",\"4\",\"Precipitation (inches)\"],\n\t\t\t[\"cdd\",\"\",\"Cooling degree days (default base 65)\"],\n\t\t\t[\"hdd\",\"45\",\"Degree days below base (default base 65)\"],\n\t\t\t[\"gdd\",\"44\",\"Degree days above base (default base 50)\"],\n\t\t\t[\"cddXX\",\"-\",\"Cooling Degree Days; where XX is base temperature\"],\n\t\t\t[\"hddXX\",\"-\",\"Heating Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t\t[\"gddXX\",\"-\",\"Growing Degree Days; where XX is base temperature\"],\n\t\t],\n    foots: \"Degree days can also be specified with the keys 'name' (or 'vX') and 'base'. \",\n  },\n  grid2_elems: {\n\t\theads: [],\n\t\tcontents: [\n\t\t\t[\"Elements must be specified as an object or list of objects.\"],\n\t\t],\n\t},\n  info_only: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"1\",\"Only information about the map is returned, not png image\"],\n      [\"\", \"If not specified, png image is returned in data portion of JSON object\"],\n    ],\n  },\n  proj: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"lcc\",\"Lambert conformal conic centered on selected area\"],\n    ],\n    foots: \"Default is Lambert conformal conic centered on the continental US.\",\n  },\n  overlays: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"state\",\"State borders\"],\n      [\"county\",\"County borders\"],\n    ],\n    foots: \"Line width and color can also be specified, separated by colons. For example, ['state:1:red','county:1:blue']\",\n  },\n  interp: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"cspline\",\"Cubic spline (default)\"],\n      [\"none\",\"No interpolation\"],\n    ],\n  },\n  cmap: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"Blues\",\"Shades of blue\"],\n      [\"Reds\",\"Shades of red\"],\n      [\"jet\",\"Blue to red\"],\n      [\"...\",\"Other color maps as defined in matplotlib: http://matplotlib.sourceforge.net/mpl_examples/pylab_examples/show_colormaps.pdf\"],\n    ],\n  },\n  width: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"integer\",\"Specify width of png image in pixels\"],\n    ],\n    foots: \"Only specify 'width' or 'height, not both.\",\n  },\n  height: {\n    heads: [\"Code\",\"Description\"],\n    contents: [\n      [\"integer\",\"Specify height of png image in pixels\"],\n    ],\n    foots: \"Only specify 'height' or 'width, not both.\",\n  },\n  levels: {\n    heads: [\"Description\",\"Example\"],\n    contents: [\n      [\"Comma-separated list of contour levels\",\"0,5,10,15,20\"],\n    ],\n    foots: \"Will be determined by server if not specified.\",\n  },\n  general_id: {\n    heads: [\"Area\",\"ID Type\",\"Example\"],\n    contents: [\n      [\"state\",\"Postal\",\"NY\"],\n      [\"county\",\"FIPS\",\"36109\"],\n      [\"climdiv\",\"Divison number\",\"NY10\"],\n      [\"cwa\",\"NWS CWA\",\"BGM\"],\n      [\"basin\",\"8-digit HUC\",\"01080205\"],\n    ],\n  },\n  general_meta: {\n    heads: [\"Area\",\"Available Meta Options\"],\n    contents: [\n      [\"state\",\"id, name, bbox, geojson, state\"],\n      [\"county\",\"id, name, bbox, geojson, state\"],\n      [\"climdiv\",\"id, name, bbox, geojson, state\"],\n      [\"cwa\",\"id, name, bbox, geojson\"],\n      [\"basin\",\"id, name, bbox, geojson\"],\n    ],\n    foots: \"If not specified, default is id and name.\",\n  },\n  network: {\n\t\theads: [\"Code\",\"Network Name\"],\n\t\tcontents: [\n      [\"0\",\"Unknown\"],\n      [\"1\",\"TD3200\"],\n      [\"2\",\"TD3210\"],\n      [\"4\",\"SHEF\"],\n      [\"5\",\"AWDN\"],\n      [\"7\",\"CF6\"],\n      [\"8\",\"RCC keyed\"],\n      [\"9\",\"NRCC local\"],\n      [\"13\",\"WRCC local\"],\n      [\"14\",\"SRCC local\"],\n      [\"15\",\"DSM\"],\n      [\"16\",\"TD3206\"],\n      [\"17\",\"GHCN-D\"],\n      [\"19\",\"CF6 overriding GHCN-D\"],\n      [\"52\",\"TD3205\"],\n      [\"53\",\"NWS Supplied\"],\n      [\"54\",\"ThreadEx\"],\n      [\"56\",\"CRB\"],\n\t\t],\n    foots: \"Additional networks are available with only hourly data.\",\n  },\n}\n\nexport default class HelpTable extends Component { \n  render() {\n    let helpid = this.props.id\n    if (helpid.includes('date')) {\n      helpid = 'date'\n    } else if (helpid === 'sid') {\n      helpid = 'sids'\n    } else if (helpid === 'name') {\n      helpid = 'elems'\n    }\n    const helpdata = tabledata.hasOwnProperty(helpid) ? tabledata[helpid] : tabledata.nohelp\n    const ncols = (helpdata.hasOwnProperty(\"contents\")) ? helpdata.contents[0].length : 1\n    return (\n      <Paper elevation={1} style={{border:\"1px solid gray\", margin:\"1em 10%\", padding:\"5px\", backgroundColor:\"lightcyan\"}}>\n        <Table padding=\"dense\">\n          {helpdata.hasOwnProperty(\"heads\") && helpdata.heads.length > 0 &&\n            <TableHead>\n              <TableRow style={{height:\"1em\"}}>\n                {helpdata.heads.map((cell, i) => (\n                  <TableCell key={i}>{cell}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n          }\n          {helpdata.hasOwnProperty(\"contents\") && helpdata.contents.length > 0 &&\n            <TableBody>\n            {helpdata.contents.map((row, i) => (\n              <TableRow hover={true} key={i} style={{height:\"1em\"}}>\n                {row.map((cell, j) => (\n                  <TableCell variant={cell.includes(\"subhead:\") ? \"head\" : \"body\"} colSpan={row.length === 1 ? ncols : 1} key={j}>{cell.replace(\"subhead:\",\"\")}</TableCell>\n                ))}\n              </TableRow>\n            ))}\n            </TableBody>\n          }\n          {helpdata.hasOwnProperty('foots') && helpdata.foots.length > 0 && \n            <TableFooter>\n              <TableRow style={{height:\"1em\"}}>\n                <TableCell colSpan={ncols}>{helpdata.foots}</TableCell>\n              </TableRow>\n            </TableFooter>\n          }\n        </Table>\n      </Paper>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Grid from '@material-ui/core/Grid'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = {\n  footer: {\n    padding: \"1em\",\n  },\n  button: {\n    color: \"darkblue\",\n    lineHeight: \"1\",\n    fontSize: \"75%\",\n    textTransform: \"capitalize\",\n    fontWeight: \"normal\",\n  },\n  menuitem: {\n    height: \"18px\",\n    fontSize: \"75%\"\n  },\n}\n\nconst options = ['Any','NRCC','HPRCC',\"AWS1\"] //removed SRCC and added AWS1 -kle 2021-5-4\n\nclass Footer extends Component { \n  constructor(props) {\n    super(props)\n    this.state = {\n      anchorEl: null,\n    }\n  }\n\n  handleOpenMenu = event => {\n    this.setState({ anchorEl: event.currentTarget })\n  }\n  \n  handleCloseMenu = () => {\n    this.setState({ anchorEl: null })\n  }\n\n  handleMenuSelect = (server) => {\n    this.setState({ anchorEl: null })\n    this.props.updateAppState({ server })\n  }\n  \n  render() {\n    const { classes } = this.props\n    return (\n      <footer className={classes.footer}>\n        <Grid container>\n          <Grid item xs={6}>\n            <Button className={classes.button} variant=\"text\" size=\"small\" onClick={this.handleOpenMenu}>\n              Select specific server {this.props.server !== 'Any' && \n                \"(\" + this.props.server + \")\"\n              }\n            </Button>\n            <Menu\n              open={Boolean(this.state.anchorEl)}\n              anchorEl={this.state.anchorEl}\n              onClose={this.handleCloseMenu}\n            >\n              {options.map(option => (\n                <MenuItem\n                  key={option}\n                  selected={option === this.props.server}\n                  className={classes.menuitem}\n                  onClick={() => this.handleMenuSelect(option)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu> \n          </Grid>\n\n          <Grid item xs={6}>\n            <Typography align=\"right\" color=\"primary\" variant=\"caption\">\n              <a href='https://www.rcc-acis.org/docs_webservices.html' target=\"blank\">Full documentation</a>\n              <br /><a href='https://builder.rcc-acis.org/index2.html'>Previous version of Query Builder</a>\n            </Typography>\n          </Grid>\n        </Grid>\n      </footer>\n    )\n  }\n}\n\nexport default withStyles(styles)(Footer)","import React, { Component } from 'react'\nimport ReactGA from 'react-ga'\nimport QuerySelector from './QuerySelector.jsx'\nimport StnMetaInput from './StnMetaInput.jsx'\nimport StnDataInput from './StnDataInput.jsx'\nimport MultiStnDataInput from './MultiStnDataInput.jsx'\nimport StnHourlyInput from './StnHourlyInput.jsx'\nimport GridDataInput from './GridDataInput.jsx'\nimport GridData2Input from './GridData2Input.jsx'\nimport GeneralInput from './GeneralInput.jsx'\nimport Output from './Output'\nimport HelpTable from './HelpTable'\nimport Footer from './Footer.jsx'\n//import QueryExplain from './QueryExplain'\n\nconst acis_servers = {\n  StnMeta: \"https://data.rcc-acis.org/StnMeta\",\n  StnData: \"https://data.rcc-acis.org/StnData\",\n  MultiStnData: \"https://data.rcc-acis.org/MultiStnData\",\n  GridData: \"https://data.rcc-acis.org/GridData\",\n  GridData2: \"https://grid2.rcc-acis.org/GridData\",\n  StnHourly: \"https://data.nrcc.rcc-acis.org/StnData\",\n  General: \"https://data.rcc-acis.org/General/\",\n}\nconst query_types = Object.keys(acis_servers)\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      wstype: 'StnData',\n      input_params: {},\n      generalArea: '',\n      helpFor: null,\n      server: 'Any',\n    }\n  }\n\n  componentDidMount() {\n    ReactGA.initialize('UA-47226172-1')\n    ReactGA.pageview('Builder-pageview')    \n  }\n\n  handleQueryChange = (value) => {\n    this.setState({ \n      wstype: value, \n      input_params: {},\n      generalArea: '',\n      helpFor: null,\n    })\n  }\n\n  handleInputStringChange = (inputString) => {\n    if (inputString.length > 0) {\n      try {\n        this.setState({\n          input_params: JSON.parse(inputString)\n        })\n      } catch {\n        return\n      }\n    }\n  }\n\n  updateInputParams = (changes) => {\n    let input_params = {...this.state.input_params}\n    Object.keys(changes).forEach((key) => {\n      const value = changes[key]\n      if (value || (typeof value === 'object' && Object.keys(value).length > 0)) {\n        input_params[key] = value\n      } else {\n        delete input_params[key]\n      }\n    })\n    this.setState({ input_params })\n  }\n\n  updateAppState = (change) => {\n    this.setState(change)\n  }\n  \n   render() {\n    let acisServer = acis_servers[this.state.wstype]\n    const datarccindex = acisServer.indexOf('data.rcc-acis')\n    if (datarccindex !== -1 && this.state.server !== 'Any') {\n      acisServer = acisServer.substring(0,datarccindex+4) + \".\" + this.state.server.toLowerCase() + acisServer.substring(datarccindex+4)\n    }\n    return (\n      <div>\n        <QuerySelector\n          query_types={query_types}\n          wstype={this.state.wstype}\n          handleChange={this.handleQueryChange}\n        />\n        {this.state.wstype === \"StnMeta\" && \n          <StnMetaInput \n            updateInputParams={this.updateInputParams}\n            updateAppState={this.updateAppState}\n            input_params={this.state.input_params}\n          />\n        }\n        {this.state.wstype === \"StnData\" && \n          <StnDataInput \n            updateInputParams={this.updateInputParams}\n            updateAppState={this.updateAppState}\n            input_params={this.state.input_params}\n          />\n        }\n        {this.state.wstype === \"MultiStnData\" && \n          <MultiStnDataInput \n            updateInputParams={this.updateInputParams}\n            updateAppState={this.updateAppState}\n            input_params={this.state.input_params}\n          />\n        }\n        {this.state.wstype === \"StnHourly\" && \n          <StnHourlyInput \n            updateInputParams={this.updateInputParams}\n            updateAppState={this.updateAppState}\n            input_params={this.state.input_params}\n          />\n        }\n        {this.state.wstype === \"GridData\" && \n          <GridDataInput \n            updateInputParams={this.updateInputParams}\n            updateAppState={this.updateAppState}\n            input_params={this.state.input_params}\n          />\n        }\n        {this.state.wstype === \"GridData2\" && \n          <GridData2Input \n            updateInputParams={this.updateInputParams}\n            updateAppState={this.updateAppState}\n            input_params={this.state.input_params}\n          />\n        }\n        {this.state.wstype === \"General\" && \n          <GeneralInput \n            updateInputParams={this.updateInputParams}\n            updateAppState={this.updateAppState}\n            input_params={this.state.input_params}\n          />\n        }\n        {this.state.helpFor && \n          <HelpTable \n            id={this.state.helpFor}\n          /> \n        }\n        <Output\n          input_params={this.state.input_params} \n          changedInput={this.handleInputStringChange}\n          generalArea={this.state.generalArea}\n          acisServer={acisServer}\n          server={this.state.server}\n        />\n        {this.state.wstype !== 'StnHourly' && this.state.wstype !== 'GridData2' &&\n          <Footer \n            server={this.state.server}\n            updateAppState={this.updateAppState}\n          />\n        }\n      </div>\n    )\n  }\n}","import '@babel/polyfill'\nimport 'whatwg-fetch'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport green from '@material-ui/core/colors/green'\nimport App from './App.jsx'\n\ndocument.title = 'ACIS QueryBuilder'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  overrides: {\n    MuiListItem: {\n      root: {\n        paddingTop: \"0.25em\",\n        paddingBottom: \"0.25em\",\n      },\n    },\n  },\n})\n\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}